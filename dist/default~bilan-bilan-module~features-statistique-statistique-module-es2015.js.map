{"version":3,"sources":["./node_modules/jsgantt-improved/dist/src/draw.js","./node_modules/jsgantt-improved/dist/src/draw_dependencies.js","./node_modules/jsgantt-improved/dist/src/xml.js","./node_modules/jsgantt-improved/dist/src/lang.js","./node_modules/jsgantt-improved/dist/src/json.js","./node_modules/jsgantt-improved/dist/src/draw_columns.js","./node_modules/jsgantt-improved/dist/src/task.js","./node_modules/ng-gantt/__ivy_ngcc__/fesm2015/ng-gantt.js","./node_modules/jsgantt-improved/dist/src/jsgantt.js","./node_modules/jsgantt-improved/dist/src/utils/date_utils.js","./node_modules/jsgantt-improved/dist/src/options.js","./node_modules/jsgantt-improved/dist/src/utils/draw_utils.js","./node_modules/jsgantt-improved/dist/src/events.js","./node_modules/jsgantt-improved/dist/src/utils/general_utils.js","./node_modules/jsgantt-improved/dist/index.js"],"names":[],"mappings":";;;;;;;;;;AAAa;AACb,8CAA8C,cAAc;AAC5D;AACA,WAAW,mBAAO,CAAC,oBAAQ;AAC3B,eAAe,mBAAO,CAAC,sBAAU;AACjC,sBAAsB,mBAAO,CAAC,mCAAuB;AACrD,aAAa,mBAAO,CAAC,oBAAQ;AAC7B,YAAY,mBAAO,CAAC,mBAAO;AAC3B,qBAAqB,mBAAO,CAAC,4BAAgB;AAC7C,mBAAmB,mBAAO,CAAC,gCAAoB;AAC/C,0BAA0B,mBAAO,CAAC,iCAAqB;AACvD,gBAAgB,mBAAO,CAAC,uBAAW;AACnC,mBAAmB,mBAAO,CAAC,gCAAooCAAoC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,qCAAqC;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,qCAAqC;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,uBAAuB,2BAA2B;AAClD;AACA;AACA;AACA;AACA;AACA,2CAA2C,8DAA8D,EAAE;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8FAA8F;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,QAAQ;AACzD,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,2BAA2B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oIAAoI;AACpgBAAgB;AAChB;AACA;AACA,oCAAoC,mBAAmB;AACvD,kCAAkC,iBAAiB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzgC;;;;;;;;;;;;ACh0Ba;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,gBAAgB;AAC5C;AACA,0BAA0B;AAC1B;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA,+BAA+B,OAAO;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6C;;;;;;;;;;;;AC/Fa;AACb,8CAA8C,cAAc;AAC5D;AACA,aAAa,mBAAO,CAAC,oBAAQ;AAC7B,mBAAmB,mBAAO,CAAC,gCAAoB;AAC/C,mBAAmB,mBAAO,CAAC,gCAAoB;AAC/C,sBAAsB,mBAAO,CAAC,mCAAuB;AACrD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8FAA8F;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,2BAA2B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,2BAA2B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+B;;;;;;;;;;;;AC9Ua;AACb,8CAA8C,cAAcgC;;;;;;;;;;;;ACvlCa;AACb;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA;AACA,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA,aAAa,mBAAO,CAAC,oBAAQ;AAC7B,sBAAsB,mBAAO,CAAC,mCAAuB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,gBAAgB;AAC5C,iCAAiC,oBAAoB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,uBAAuB,yBAAyB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;AChMa;AACb,8CAA8C,cAAc;AAC5D;AACA,mBAAmB,mBAAO,CAAC,gCAAoB;AAC/C,aAAa,mBAAO,CAAC,oBAAQ;AAC7B,eAAe,mBAAO,CAAC,sBAAU;AACjC,mBAAmB,mBAAO,CAAC,gCAAoB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,yCAAyC;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,yCAAyC;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,8BAA8B,iCAAiC;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,sCAAsC;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,oCAAoC;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,0CAA0C;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,wCAAwC;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,qCAAqC;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,IAAI;AACtE,+DAA+D,IAAI;AACnE;AACA,MAAM;AACN;AACA,gEAAgE,KAAK;AACrE,mDAAmD,sBAAsB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,8BAA8B;AAC3F;AACA;AACA,wC;;;;;;;;;;;;ACxKa;AACb;AACA;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA,sBAAsB,mBAAO,CAAC,mCAAuB;AACrD,mBAAmB,mBAAO,CAAC,gCAAoB;AAC/C,mBAAmB,mBAAO,CAAC,gCAAoB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,oBAAoB;AACvC,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,2BAA2B,cAAc;AACzC,gCAAgC,mBAAmB;AACnD,8BAA8B,iBAAiB;AAC/C,+BAA+B,kBAAkB;AACjD,8BAA8B,iBAAiB;AAC/C,iCAAiC,oBAAoB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,YAAY;AAC1C,sCAAsC,YAAY;AAClD,iCAAiC,eAAe;AAChD,gCAAgC,cAAc;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,yCAAyC;AAC9E,mCAAmC,mCAAmC;AACtE,gCAAgC,cAAc;AAC9C,yCAAyC,uBAAuB;AAChE,uCAAuC,qBAAqB;AAC5D,6CAA6C,2BAA2B;AACxE,2CAA2C,yBAAyB;AACpE,iCAAiC,eAAe;AAChD,gCAAgC,cAAc;AAC9C,gCAAgC,cAAc;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,oBAAoB;AAC1D,mCAAmC;AACnC;AACA;AACA,oBAAoB;AACpB,mCAAmC;AACnC;AACA;AACA,kBAAkB;AAClB,oCAAoC;AACpC;AACA;AACA,wBAAwB;AACxB,mCAAmC;AACnC;AACA;AACA;AACA;AACA,iBAAiB;AACjB,mCAAmC;AACnC;AACA;AACA;AACA;AACA,kBAAkB;AAClB,uCAAuC;AACvC;AACA;AACA;AACA;AACA,kBAAkB;AAClB,iCAAiC,eAAe;AAChD,mCAAmC,iBAAiB;AACpD,oCAAoC,kBAAkB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD,kCAAkC,gBAAgB;AAClD,iCAAiC,eAAe;AAChD,gCAAgC,cAAc;AAC9C,iCAAiC,eAAe;AAChD,mCAAmC,gBAAgB;AACnD,kCAAkC,gBAAgB;AAClD,kCAAkC,WAAW;AAC7C,kCAAkC,WAAW;AAC7C,gCAAgC,WAAW;AAC3C,gCAAgC,WAAW;AAC3C,mCAAmC,iBAAiB;AACpD,mCAAmC,iBAAiB;AACpD,mCAAmC,iBAAiB;AACpD,kCAAkC,gBAAgB;AAClD,mCAAmC,iBAAiB;AACpD,uCAAuC,qBAAqB;AAC5D,oCAAoC,kBAAkB;AACtD,wCAAwC,sBAAsB;AAC9D,qCAAqC,mBAAmB;AACxD,qCAAqC,eAAe;AACpD,uCAAuC,iBAAiB;AACxD,uCAAuC,iBAAiB;AACxD,qCAAqC,eAAe;AACpD,wCAAwC,aAAa;AACrD,6CAA6C,uBAAuB;AACpE,iDAAiD,2BAA2B;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C,gCAAgC;AAChC,2CAA2C;AAC3C,4BAA4B;AAC5B,uCAAuC,yDAAyD;AAChG,yCAAyC,2DAA2D;AACpG,yCAAyC,2DAA2D;AACpG,2CAA2C,+DAA+D;AAC1G;AACA;AACA;AACA,oCAAoC,iDAAiD;AACrF,oCAAoC,iDAAiD;AACrF,kCAAkC,iDAAiD;AACnF,kCAAkC,iDAAiD;AACnF,qCAAqC,uDAAuD;AAC5F,2CAA2C,6DAA6D;AACxG,2CAA2C,6DAA6D;AACxG,6CAA6C;AAC7C;AACA;AACA,0BAA0B;AAC1B,2CAA2C;AAC3C,4BAA4B;AAC5B,2CAA2C;AAC3C,4BAA4B,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C,4BAA4B;AAC5B,sCAAsC;AACtC,uBAAuB;AACvB,uCAAuC;AACvC,wBAAwB;AACxB,2CAA2C;AAC3C,4BAA4B;AAC5B,wCAAwC;AACxC,yBAAyB;AACzB,4CAA4C;AAC5C,6BAA6B;AAC7B,0CAA0C;AAC1C,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,wBAAwB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,aAAa;AAC5D;AACA,mDAAmD,kBAAkB;AACrE;AACA;AACA,mDAAmD,kBAAkB;AACrE;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,mBAAmB,2BAA2B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,2BAA2B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,2CAA2C,EAAE;AACrF;AACA;AACA;AACA;AACA,4BAA4B,gBAAgB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,uGAAuG;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,wCAAwC,EAAE;AAC9E;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,wCAAwC,EAAE;AAClF;AACA;AACA,gC;;;;;;;;;;;;AC3tBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACmC;AACnC;AACD;;AAEN;;AAExC;AACA;AACA,yDAAyD,gBAAgB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,2DAAU;AAC9C;AACA;AACA,wCAAwC;AACxC;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,0CAA0C;AAChH,4BAA4B,+DAAwB,EAAE,iHAAiH;AACvK,QAAQ,+DAAwB;AAChC,KAAK;AACL;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,KAAK,EAAE,WAAW,qDAAqD,mIAAmI;AAC1M,QAAQ,uDAAgB;AACxB,KAAK;AACL,QAAQ,wDAAiB;AACzB,KAAK,EAAE,oBAAoB;AAC3B,wDAAU;AACV,IAAI,+DAAS,0BAA0B,eAAe;AACtD,IAAI,wDAAU,gBAAgB,wDAAU;AACxC;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd,IAAI,wDAAU;AACd;AACA,uBAAuB,wDAAU,GAAG,wDAAU;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,8DAAuB,EAAE,4BAA4B;AAChF,2BAA2B,8DAAuB,EAAE,mDAAmD,yCAAyC,EAAE;AAClJ,YAAY,4DAAY;AACxB,YAAY;AACZ,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,GAAG;AACrC,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB;AACA,SAAS;AACT,kBAAkB,uDAAS;AAC3B,4CAA4C,eAAe;AAC3D,SAAS,GAAG,EAAE,EAAE;AAChB,cAAc,oDAAoD,gEAAyB,uBAAuB,4BAA4B,+BAA+B,EAAE,wBAAwB,SAAS,4DAAY,EAAE,EAAE,wBAAwB,+BAA+B,EAAE,EAAE,EAAE,EAAE;AAC/R,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,sDAAQ;AACtB;AACA;AACA,oBAAoB,4DAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEmD;;AAEzE,oC;;;;;;;;;;;;ACvJa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,sBAAU;AACjC,sBAAsB,mBAAO,CAAC,mCAAuB;AACrD,YAAY,mBAAO,CAAC,mBAAO;AAC3B,aAAa,mBAAO,CAAC,oBAAQ;AAC7B,aAAa,mBAAO,CAAC,oBAAQ;AAC7B,aAAa,mBAAO,CAAC,oBAAQ;AAC7B,mBAAmB,mBAAO,CAAC,gCAAoB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mC;;;;;;;;;;;;AC3Fa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,2BAA2B;AAC9C;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE;AACA,6FAA6F;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sC;;;;;;;;;;;;ACtSa;AACb,8CAA8C,cAAc;AAC5D;AACA,mBAAmB,mBAAO,CAAC,gCAAoB;AAC/C,qBAAqB,mBAAO,CAAC,4BAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA,mCAAmC,cAAc;AACjD;AACA;AACA;AACA,mCAAmC,cAAc;AACjD;AACA;AACA;AACA,mCAAmC,cAAc;AACjD;AACA;AACA;AACA;AACA,uCAAuC,sBAAsB;AAC7D,uCAAuC,sBAAsB;AAC7D,yCAAyC,wBAAwB;AACjE,0CAA0C,yBAAyB;AACnE,uCAAuC,sBAAsB;AAC7D,6CAA6C,gCAAgC;AAC7E;AACA;AACA;AACA,8BAA8B,sBAAsB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,sBAAsB;AAC7D,uCAAuC,sBAAsB;AAC7D,wCAAwC,uBAAuB;AAC/D,6CAA6C,4BAA4B;AACzE,2CAA2C,0BAA0B;AACrE,iDAAiD,gCAAgC;AACjF,+CAA+C,8BAA8B;AAC7E,wCAAwC,uBAAuB;AAC/D,8CAA8C,6BAA6B;AAC3E,+CAA+C,8BAA8B;AAC7E,+CAA+C,8BAA8B;AAC7E,gDAAgD,+BAA+B;AAC/E,qDAAqD,oCAAoC;AACzF,mDAAmD,kCAAkC;AACrF,iDAAiD,gCAAgC;AACjF,gDAAgD,+BAA+B;AAC/E,+CAA+C,8BAA8B;AAC7E,4CAA4C,2BAA2B;AACvE;AACA;AACA;AACA,8BAA8B,sBAAsB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,uBAAuB;AAC/D,+CAA+C,8BAA8B;AAC7E,0DAA0D,0EAA0E;AACpI,qDAAqD,qEAAqE;AAC1H,0DAA0D,0EAA0E;AACpI,0DAA0D,0EAA0E;AACpI,yDAAyD,yEAAyE;AAClI,yDAAyD,yEAAyE;AAClI,0DAA0D,0EAA0E;AACpI,0DAA0D,0EAA0E;AACpI,2DAA2D,2EAA2E;AACtI,2DAA2D,2EAA2E;AACtI,6DAA6D,6EAA6E;AAC1I,6DAA6D,6EAA6E;AAC1I,4CAA4C,2BAA2B;AACvE;AACA;AACA;AACA;AACA,kDAAkD,iCAAiC;AACnF,6CAA6C,4BAA4B;AACzE,yCAAyC,wBAAwB;AACjE,8CAA8C,6BAA6B;AAC3E,6CAA6C,4BAA4B;AACzE,8CAA8C,6BAA6B;AAC3E,+CAA+C,8BAA8B;AAC7E,iDAAiD,gCAAgC;AACjF,4CAA4C,2BAA2B;AACvE,qCAAqC;AACrC,2BAA2B;AAC3B,yCAAyC;AACzC,+BAA+B;AAC/B,yCAAyC;AACzC,+BAA+B;AAC/B,wCAAwC;AACxC,8BAA8B;AAC9B,4CAA4C;AAC5C,kCAAkC;AAClC,qCAAqC;AACrC,2BAA2B;AAC3B,kDAAkD,iCAAiC;AACnF,qCAAqC,wBAAwB;AAC7D,4CAA4C,+BAA+B;AAC3E,+CAA+C,8BAA8B;AAC7E,uCAAuC,sBAAsB;AAC7D,uCAAuC,sBAAsB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,0BAA0B;AACrE;AACA,yCAAyC,wBAAwB;AACjE,qDAAqD,oCAAoC;AACzF,2CAA2C,0BAA0B;AACrE,gDAAgD,+BAA+B;AAC/E,8CAA8C,6BAA6B;AAC3E,oDAAoD,mCAAmC;AACvF,4CAA4C,2BAA2B;AACvE,4CAA4C,2BAA2B;AACvE,sCAAsC,qBAAqB;AAC3D;AACA;AACA;AACA,iCAAiC,oBAAoB;AACrD,mCAAmC,sBAAsB;AACzD,mCAAmC,sBAAsB;AACzD,qCAAqC,wBAAwB;AAC7D,sCAAsC,yBAAyB;AAC/D,mCAAmC,sBAAsB;AACzD,yCAAyC,4BAA4B;AACrE,qCAAqC,wBAAwB;AAC7D,mCAAmC,sBAAsB;AACzD,mCAAmC,sBAAsB;AACzD,oCAAoC,uBAAuB;AAC3D,yCAAyC,4BAA4B;AACrE,uCAAuC,0BAA0B;AACjE,6CAA6C,gCAAgC;AAC7E,2CAA2C,8BAA8B;AACzE,oCAAoC,uBAAuB;AAC3D,0CAA0C,6BAA6B;AACvE,2CAA2C,8BAA8B;AACzE,2CAA2C,8BAA8B;AACzE,4CAA4C,+BAA+B;AAC3E,iDAAiD,oCAAoC;AACrF,+CAA+C,kCAAkC;AACjF,6CAA6C,gCAAgC;AAC7E,4CAA4C,+BAA+B;AAC3E,2CAA2C,8BAA8B;AACzE,wCAAwC,2BAA2B;AACnE,wCAAwC,2BAA2B;AACnE,oCAAoC,uBAAuB;AAC3D,2CAA2C,8BAA8B;AACzE,sDAAsD,yCAAyC;AAC/F,iDAAiD,oCAAoC;AACrF,sDAAsD,yCAAyC;AAC/F,sDAAsD,yCAAyC;AAC/F,qDAAqD,wCAAwC;AAC7F,qDAAqD,wCAAwC;AAC7F,sDAAsD,yCAAyC;AAC/F,sDAAsD,yCAAyC;AAC/F,uDAAuD,0CAA0C;AACjG,uDAAuD,0CAA0C;AACjG,yDAAyD,4CAA4C;AACrG,yDAAyD,4CAA4C;AACrG,uCAAuC,0BAA0B;AACjE,oCAAoC,uBAAuB;AAC3D,oCAAoC,uBAAuB;AAC3D,wCAAwC,2BAA2B;AACnE,uCAAuC,0BAA0B;AACjE,wCAAwC,2BAA2B;AACnE,yCAAyC,4BAA4B;AACrE,2CAA2C,8BAA8B;AACzE,qCAAqC,wBAAwB;AAC7D,qCAAqC,wBAAwB;AAC7D,qCAAqC,wBAAwB;AAC7D,oCAAoC,uBAAuB;AAC3D,sCAAsC,yBAAyB;AAC/D,iCAAiC,oBAAoB;AACrD,iCAAiC,oBAAoB;AACrD,mCAAmC,sBAAsB;AACzD,mCAAmC,sBAAsB;AACzD,wCAAwC,2BAA2B;AACnE,gCAAgC,uBAAuB;AACvD;AACA,2CAA2C,qBAAqB;AAChE,wCAAwC,2BAA2B;AACnE,yCAAyC,4BAA4B;AACrE,8CAA8C,iCAAiC;AAC/E,qCAAqC,wBAAwB;AAC7D,6CAA6C,gCAAgC;AAC7E,uCAAuC,yDAAyD;AAChG;AACA,mC;;;;;;;;;;;;AClNa;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,uBAAW;AAClC;AACA,0BAA0B,eAAe;AACzC,2BAA2B,cAAc;AACzC,6BAA6B,gBAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,yCAAyC,EAAE;AACxG;AACA;AACA;AACA;AACA,sCAAsC,yBAAyB;AAC/D;AACA,kEAAkE,4GAA4G,EAAE;AAChL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,YAAY;AACrC,4BAA4B,eAAe;AAC3C,2BAA2B,cAAc;AACzC,4BAA4B,eAAe;AAC3C,2BAA2B,cAAc;AACzC,8BAA8B,iBAAiB;AAC/C,8BAA8B,iBAAiB;AAC/C,8BAA8B,iBAAiB;AAC/C;AACA;AACA,uBAAuB,yBAAyB;AAChD;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4CAA4C;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sC;;;;;;;;;;;;ACnKa;AACb,8CAA8C,cAAc;AAC5D;AACA,sBAAsB,mBAAO,CAAC,mCAAuB;AACrD;AACA;AACA;AACA,iCAAiC;AACjC,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,iDAAiD,EAAE;AAC1G,sDAAsD,2EAA2E,EAAE;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,iEAAiE,EAAE;AAC5I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,mBAAmB,EAAE;AAC5E;AACA;AACA,mDAAmD,wBAAwB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,wBAAwB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,kDAAkD,qCAAqC,EAAE;AACzF,kDAAkD,qCAAqC,EAAE;AACzF,iDAAiD,oCAAoC,EAAE;AACvF,iDAAiD,oCAAoC,EAAE;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,8CAA8C,oDAAoD,EAAE;AACpG;AACA;AACA,+CAA+C,+EAA+E,EAAE;AAChI;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,0BAA0B,aAAa;AACvC,2BAA2B,gBAAgB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,eAAe,EAAE;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,+CAA+C,OAAO;AACtD;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kC;;;;;;;;;;;;AClXa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,eAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,6BAA6B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,6BAA6B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,oDAAoD,EAAE;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,mCAAmC;AACnC,oCAAoC;AACpC,sCAAsC;AACtC,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,mCAAmC,EAAE;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,iEAAiE,EAAE;AACxI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,aAAa;AACvC,4BAA4B,gBAAgB;AAC5C;AACA;AACA;AACA,0CAA0C,mBAAmB,EAAE;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,4BAA4B,gBAAgB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,yBAAyB,iBAAiB;AAC1C;AACA;AACA,2BAA2B,iBAAiB,mDAAmD,WAAW,6FAA6F,qCAAqC,WAAW,QAAQ;AAC/P;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG,eAAe;AACvB;AACA;AACA;AACA,yC;;;;;;;;;;;;ACpda;AACb,8CAA8C,cAAc;AAC5D;AACA,cAAc,mBAAO,CAAC,2BAAe;AACrC;AACA;AACA,iC","file":"default~bilan-bilan-module~features-statistique-statistique-module-es2015.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GanttChart = void 0;\nvar lang = require(\"./lang\");\nvar events_1 = require(\"./events\");\nvar general_utils_1 = require(\"./utils/general_utils\");\nvar task_1 = require(\"./task\");\nvar xml_1 = require(\"./xml\");\nvar draw_columns_1 = require(\"./draw_columns\");\nvar draw_utils_1 = require(\"./utils/draw_utils\");\nvar draw_dependencies_1 = require(\"./draw_dependencies\");\nvar options_1 = require(\"./options\");\nvar date_utils_1 = require(\"./utils/date_utils\");\n/**\n * function that loads the main gantt chart properties and functions\n * @param pDiv (required) this is a div object created in HTML\n * @param pFormat (required) - used to indicate whether chart should be drawn in \"hour\", \"day\", \"week\", \"month\", or \"quarter\" format\n */\nexports.GanttChart = function (pDiv, pFormat) {\n    this.vDiv = pDiv;\n    this.vFormat = pFormat;\n    this.vDivId = null;\n    this.vUseFade = 1;\n    this.vUseMove = 1;\n    this.vUseRowHlt = 1;\n    this.vUseToolTip = 1;\n    this.vUseSort = 1;\n    this.vUseSingleCell = 25000;\n    this.vShowRes = 1;\n    this.vShowDur = 1;\n    this.vShowComp = 1;\n    this.vShowStartDate = 1;\n    this.vShowEndDate = 1;\n    this.vShowPlanStartDate = 0;\n    this.vShowPlanEndDate = 0;\n    this.vShowCost = 0;\n    this.vShowAddEntries = 0;\n    this.vShowEndWeekDate = 1;\n    this.vShowWeekends = 1;\n    this.vShowTaskInfoRes = 1;\n    this.vShowTaskInfoDur = 1;\n    this.vShowTaskInfoComp = 1;\n    this.vShowTaskInfoStartDate = 1;\n    this.vShowTaskInfoEndDate = 1;\n    this.vShowTaskInfoNotes = 1;\n    this.vShowTaskInfoLink = 0;\n    this.vShowDeps = 1;\n    this.vTotalHeight = undefined;\n    this.vWorkingDays = {\n        0: true,\n        1: true,\n        2: true,\n        3: true,\n        4: true,\n        5: true,\n        6: true\n    };\n    this.vEventClickCollapse = null;\n    this.vEventClickRow = null;\n    this.vEvents = {\n        taskname: null,\n        res: null,\n        dur: null,\n        comp: null,\n        startdate: null,\n        enddate: null,\n        planstartdate: null,\n        planenddate: null,\n        cost: null,\n        beforeDraw: null,\n        afterDraw: null,\n        beforeLineDraw: null,\n        afterLineDraw: null,\n        onLineDraw: null,\n        onLineContainerHover: null\n    };\n    this.vEventsChange = {\n        taskname: null,\n        res: null,\n        dur: null,\n        comp: null,\n        startdate: null,\n        enddate: null,\n        planstartdate: null,\n        planenddate: null,\n        cost: null,\n        line: null\n    };\n    this.vResources = null;\n    this.vAdditionalHeaders = {};\n    this.vColumnOrder = draw_columns_1.COLUMN_ORDER;\n    this.vEditable = false;\n    this.vDebug = false;\n    this.vShowSelector = new Array('top');\n    this.vDateInputFormat = 'yyyy-mm-dd';\n    this.vDateTaskTableDisplayFormat = date_utils_1.parseDateFormatStr('dd/mm/yyyy');\n    this.vDateTaskDisplayFormat = date_utils_1.parseDateFormatStr('dd month yyyy');\n    this.vHourMajorDateDisplayFormat = date_utils_1.parseDateFormatStr('day dd month yyyy');\n    this.vHourMinorDateDisplayFormat = date_utils_1.parseDateFormatStr('HH');\n    this.vDayMajorDateDisplayFormat = date_utils_1.parseDateFormatStr('dd/mm/yyyy');\n    this.vDayMinorDateDisplayFormat = date_utils_1.parseDateFormatStr('dd');\n    this.vWeekMajorDateDisplayFormat = date_utils_1.parseDateFormatStr('yyyy');\n    this.vWeekMinorDateDisplayFormat = date_utils_1.parseDateFormatStr('dd/mm');\n    this.vMonthMajorDateDisplayFormat = date_utils_1.parseDateFormatStr('yyyy');\n    this.vMonthMinorDateDisplayFormat = date_utils_1.parseDateFormatStr('mon');\n    this.vQuarterMajorDateDisplayFormat = date_utils_1.parseDateFormatStr('yyyy');\n    this.vQuarterMinorDateDisplayFormat = date_utils_1.parseDateFormatStr('qq');\n    this.vUseFullYear = date_utils_1.parseDateFormatStr('dd/mm/yyyy');\n    this.vCaptionType;\n    this.vDepId = 1;\n    this.vTaskList = new Array();\n    this.vFormatArr = new Array('hour', 'day', 'week', 'month', 'quarter');\n    this.vMonthDaysArr = new Array(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31);\n    this.vProcessNeeded = true;\n    this.vMinGpLen = 8;\n    this.vScrollTo = '';\n    this.vHourColWidth = 18;\n    this.vDayColWidth = 18;\n    this.vWeekColWidth = 36;\n    this.vMonthColWidth = 36;\n    this.vQuarterColWidth = 18;\n    this.vRowHeight = 20;\n    this.vTodayPx = -1;\n    this.vLangs = lang;\n    this.vLang = navigator.language && navigator.language in lang ? navigator.language : 'en';\n    this.vChartBody = null;\n    this.vChartHead = null;\n    this.vListBody = null;\n    this.vChartTable = null;\n    this.vLines = null;\n    this.vTimer = 20;\n    this.vTooltipDelay = 1500;\n    this.vTooltipTemplate = null;\n    this.vMinDate = null;\n    this.vMaxDate = null;\n    this.includeGetSet = options_1.includeGetSet.bind(this);\n    this.includeGetSet();\n    this.mouseOver = events_1.mouseOver;\n    this.mouseOut = events_1.mouseOut;\n    this.addListener = events_1.addListener.bind(this);\n    this.removeListener = events_1.removeListener.bind(this);\n    this.createTaskInfo = task_1.createTaskInfo;\n    this.AddTaskItem = task_1.AddTaskItem;\n    this.AddTaskItemObject = task_1.AddTaskItemObject;\n    this.RemoveTaskItem = task_1.RemoveTaskItem;\n    this.ClearTasks = task_1.ClearTasks;\n    this.getXMLProject = xml_1.getXMLProject;\n    this.getXMLTask = xml_1.getXMLTask;\n    this.CalcTaskXY = draw_utils_1.CalcTaskXY.bind(this);\n    // sLine: Draw a straight line (colored one-pixel wide div)\n    this.sLine = draw_utils_1.sLine.bind(this);\n    this.drawDependency = draw_dependencies_1.drawDependency.bind(this);\n    this.DrawDependencies = draw_dependencies_1.DrawDependencies.bind(this);\n    this.getArrayLocationByID = draw_utils_1.getArrayLocationByID.bind(this);\n    this.drawSelector = draw_utils_1.drawSelector.bind(this);\n    this.printChart = general_utils_1.printChart.bind(this);\n    this.clearDependencies = function () {\n        var parent = this.getLines();\n        if (this.vEventsChange.line &&\n            typeof this.vEventsChange.line === 'function') {\n            this.removeListener('click', this.vEventsChange.line, parent);\n            this.addListener('click', this.vEventsChange.line, parent);\n        }\n        while (parent.hasChildNodes())\n            parent.removeChild(parent.firstChild);\n        this.vDepId = 1;\n    };\n    this.drawListHead = function (vLeftHeader) {\n        var _this = this;\n        var vTmpDiv = draw_utils_1.newNode(vLeftHeader, 'div', this.vDivId + 'glisthead', 'glistlbl gcontainercol');\n        var gListLbl = vTmpDiv;\n        this.setListBody(vTmpDiv);\n        var vTmpTab = draw_utils_1.newNode(vTmpDiv, 'table', null, 'gtasktableh');\n        var vTmpTBody = draw_utils_1.newNode(vTmpTab, 'tbody');\n        var vTmpRow = draw_utils_1.newNode(vTmpTBody, 'tr');\n        draw_utils_1.newNode(vTmpRow, 'td', null, 'gtasklist', '\\u00A0');\n        var vTmpCell = draw_utils_1.newNode(vTmpRow, 'td', null, 'gspanning gtaskname', null, null, null, null, this.getColumnOrder().length + 1);\n        vTmpCell.appendChild(this.drawSelector('top'));\n        vTmpRow = draw_utils_1.newNode(vTmpTBody, 'tr');\n        draw_utils_1.newNode(vTmpRow, 'td', null, 'gtasklist', '\\u00A0');\n        draw_utils_1.newNode(vTmpRow, 'td', null, 'gtaskname', '\\u00A0');\n        this.getColumnOrder().forEach(function (column) {\n            if (_this[column] == 1 || column === 'vAdditionalHeaders') {\n                draw_columns_1.draw_task_headings(column, vTmpRow, _this.vLangs, _this.vLang, _this.vAdditionalHeaders, _this.vEvents);\n            }\n        });\n        return gListLbl;\n    };\n    this.drawListBody = function (vLeftHeader) {\n        var _this = this;\n        var vTmpContentTabOuterWrapper = draw_utils_1.newNode(vLeftHeader, 'div', null, 'gtasktableouterwrapper');\n        var vTmpContentTabWrapper = draw_utils_1.newNode(vTmpContentTabOuterWrapper, 'div', null, 'gtasktablewrapper');\n        vTmpContentTabWrapper.style.width = \"calc(100% + \" + general_utils_1.getScrollbarWidth() + \"px)\";\n        var vTmpContentTab = draw_utils_1.newNode(vTmpContentTabWrapper, 'table', null, 'gtasktable');\n        var vTmpContentTBody = draw_utils_1.newNode(vTmpContentTab, 'tbody');\n        var vNumRows = 0;\n        var _loop_1 = function (i) {\n            var vBGColor = void 0;\n            if (this_1.vTaskList[i].getGroup() == 1)\n                vBGColor = 'ggroupitem';\n            else\n                vBGColor = 'glineitem';\n            var vID = this_1.vTaskList[i].getID();\n            var vTmpRow_1, vTmpCell_1 = void 0;\n            if ((!(this_1.vTaskList[i].getParItem() && this_1.vTaskList[i].getParItem().getGroup() == 2)) || this_1.vTaskList[i].getGroup() == 2) {\n                if (this_1.vTaskList[i].getVisible() == 0)\n                    vTmpRow_1 = draw_utils_1.newNode(vTmpContentTBody, 'tr', this_1.vDivId + 'child_' + vID, 'gname ' + vBGColor, null, null, null, 'none');\n                else\n                    vTmpRow_1 = draw_utils_1.newNode(vTmpContentTBody, 'tr', this_1.vDivId + 'child_' + vID, 'gname ' + vBGColor);\n                this_1.vTaskList[i].setListChildRow(vTmpRow_1);\n                draw_utils_1.newNode(vTmpRow_1, 'td', null, 'gtasklist', '\\u00A0');\n                var editableClass = this_1.vEditable ? 'gtaskname gtaskeditable' : 'gtaskname';\n                vTmpCell_1 = draw_utils_1.newNode(vTmpRow_1, 'td', null, editableClass);\n                var vCellContents = '';\n                for (var j = 1; j < this_1.vTaskList[i].getLevel(); j++) {\n                    vCellContents += '\\u00A0\\u00A0\\u00A0\\u00A0';\n                }\n                var task_2 = this_1.vTaskList[i];\n                var vEventClickRow_1 = this_1.vEventClickRow;\n                var vEventClickCollapse_1 = this_1.vEventClickCollapse;\n                events_1.addListener('click', function (e) {\n                    if (e.target.classList.contains('gfoldercollapse') === false) {\n                        if (vEventClickRow_1 && typeof vEventClickRow_1 === \"function\") {\n                            vEventClickRow_1(task_2);\n                        }\n                    }\n                    else {\n                        if (vEventClickCollapse_1 && typeof vEventClickCollapse_1 === \"function\") {\n                            vEventClickCollapse_1(task_2);\n                        }\n                    }\n                }, vTmpRow_1);\n                if (this_1.vTaskList[i].getGroup() == 1) {\n                    var vTmpDiv = draw_utils_1.newNode(vTmpCell_1, 'div', null, null, vCellContents);\n                    var vTmpSpan = draw_utils_1.newNode(vTmpDiv, 'span', this_1.vDivId + 'group_' + vID, 'gfoldercollapse', (this_1.vTaskList[i].getOpen() == 1) ? '-' : '+');\n                    this_1.vTaskList[i].setGroupSpan(vTmpSpan);\n                    events_1.addFolderListeners(this_1, vTmpSpan, vID);\n                    var divTask = document.createElement('span');\n                    divTask.innerHTML = '\\u00A0' + this_1.vTaskList[i].getName();\n                    vTmpDiv.appendChild(divTask);\n                    // const text = makeInput(this.vTaskList[i].getName(), this.vEditable, 'text');\n                    // vTmpDiv.appendChild(document.createNode(text));\n                    var callback = function (task, e) { return task.setName(e.target.value); };\n                    events_1.addListenerInputCell(vTmpCell_1, this_1.vEventsChange, callback, this_1.vTaskList, i, 'taskname', this_1.Draw.bind(this_1));\n                    events_1.addListenerClickCell(vTmpDiv, this_1.vEvents, this_1.vTaskList[i], 'taskname');\n                }\n                else {\n                    vCellContents += '\\u00A0\\u00A0\\u00A0\\u00A0';\n                    var text = draw_utils_1.makeInput(this_1.vTaskList[i].getName(), this_1.vEditable, 'text');\n                    var vTmpDiv = draw_utils_1.newNode(vTmpCell_1, 'div', null, null, vCellContents + text);\n                    var callback = function (task, e) { return task.setName(e.target.value); };\n                    events_1.addListenerInputCell(vTmpCell_1, this_1.vEventsChange, callback, this_1.vTaskList, i, 'taskname', this_1.Draw.bind(this_1));\n                    events_1.addListenerClickCell(vTmpCell_1, this_1.vEvents, this_1.vTaskList[i], 'taskname');\n                }\n                this_1.getColumnOrder().forEach(function (column) {\n                    if (_this[column] == 1 || column === 'vAdditionalHeaders') {\n                        draw_columns_1.draw_header(column, i, vTmpRow_1, _this.vTaskList, _this.vEditable, _this.vEventsChange, _this.vEvents, _this.vDateTaskTableDisplayFormat, _this.vAdditionalHeaders, _this.vFormat, _this.vLangs, _this.vLang, _this.vResources, _this.Draw.bind(_this));\n                    }\n                });\n                vNumRows++;\n            }\n        };\n        var this_1 = this;\n        for (var i = 0; i < this.vTaskList.length; i++) {\n            _loop_1(i);\n        }\n        // Render no daa in the chart\n        if (this.vTaskList.length == 0) {\n            var totalColumns = this.getColumnOrder()\n                .filter(function (column) { return _this[column] == 1 || column === 'vAdditionalHeaders'; })\n                .length;\n            var vTmpRow_2 = draw_utils_1.newNode(vTmpContentTBody, 'tr', this.vDivId + 'child_', 'gname ');\n            // this.vTaskList[i].setListChildRow(vTmpRow);\n            var vTmpCell_2 = draw_utils_1.newNode(vTmpRow_2, 'td', null, 'gtasknolist', '', null, null, null, totalColumns);\n            var vOutput = document.createDocumentFragment();\n            draw_utils_1.newNode(vOutput, 'div', null, 'gtasknolist-label', this.vLangs[this.vLang]['nodata'] + '.');\n            vTmpCell_2.appendChild(vOutput);\n        }\n        // DRAW the date format selector at bottom left.\n        var vTmpRow = draw_utils_1.newNode(vTmpContentTBody, 'tr');\n        draw_utils_1.newNode(vTmpRow, 'td', null, 'gtasklist', '\\u00A0');\n        var vTmpCell = draw_utils_1.newNode(vTmpRow, 'td', null, 'gspanning gtaskname');\n        vTmpCell.appendChild(this.drawSelector('bottom'));\n        this.getColumnOrder().forEach(function (column) {\n            if (_this[column] == 1 || column === 'vAdditionalHeaders') {\n                draw_columns_1.draw_bottom(column, vTmpRow, _this.vAdditionalHeaders);\n            }\n        });\n        // Add some white space so the vertical scroll distance should always be greater\n        // than for the right pane (keep to a minimum as it is seen in unconstrained height designs)\n        // newNode(vTmpDiv2, 'br');\n        // newNode(vTmpDiv2, 'br');\n        return {\n            vNumRows: vNumRows,\n            vTmpContentTabWrapper: vTmpContentTabWrapper\n        };\n    };\n    /**\n     *\n     * DRAW CHAR HEAD\n     *\n     */\n    this.drawChartHead = function (vMinDate, vMaxDate, vColWidth, vNumRows) {\n        var vRightHeader = document.createDocumentFragment();\n        var vTmpDiv = draw_utils_1.newNode(vRightHeader, 'div', this.vDivId + 'gcharthead', 'gchartlbl gcontainercol');\n        var gChartLbl = vTmpDiv;\n        this.setChartHead(vTmpDiv);\n        var vTmpTab = draw_utils_1.newNode(vTmpDiv, 'table', this.vDivId + 'chartTableh', 'gcharttableh');\n        var vTmpTBody = draw_utils_1.newNode(vTmpTab, 'tbody');\n        var vTmpRow = draw_utils_1.newNode(vTmpTBody, 'tr');\n        var vTmpDate = new Date();\n        vTmpDate.setFullYear(vMinDate.getFullYear(), vMinDate.getMonth(), vMinDate.getDate());\n        if (this.vFormat == 'hour')\n            vTmpDate.setHours(vMinDate.getHours());\n        else\n            vTmpDate.setHours(0);\n        vTmpDate.setMinutes(0);\n        vTmpDate.setSeconds(0);\n        vTmpDate.setMilliseconds(0);\n        var vColSpan = 1;\n        // Major Date Header\n        while (vTmpDate.getTime() <= vMaxDate.getTime()) {\n            var vHeaderCellClass = 'gmajorheading';\n            var vCellContents = '';\n            if (this.vFormat == 'day') {\n                var colspan = 7;\n                if (!this.vShowWeekends) {\n                    vHeaderCellClass += ' headweekends';\n                    colspan = 5;\n                }\n                var vTmpCell = draw_utils_1.newNode(vTmpRow, 'td', null, vHeaderCellClass, null, null, null, null, colspan);\n                vCellContents += date_utils_1.formatDateStr(vTmpDate, this.vDayMajorDateDisplayFormat, this.vLangs[this.vLang]);\n                vTmpDate.setDate(vTmpDate.getDate() + 6);\n                if (this.vShowEndWeekDate == 1)\n                    vCellContents += ' - ' + date_utils_1.formatDateStr(vTmpDate, this.vDayMajorDateDisplayFormat, this.vLangs[this.vLang]);\n                draw_utils_1.newNode(vTmpCell, 'div', null, null, vCellContents, vColWidth * colspan);\n                vTmpDate.setDate(vTmpDate.getDate() + 1);\n            }\n            else if (this.vFormat == 'week') {\n                var vTmpCell = draw_utils_1.newNode(vTmpRow, 'td', null, vHeaderCellClass, null, vColWidth);\n                draw_utils_1.newNode(vTmpCell, 'div', null, null, date_utils_1.formatDateStr(vTmpDate, this.vWeekMajorDateDisplayFormat, this.vLangs[this.vLang]), vColWidth);\n                vTmpDate.setDate(vTmpDate.getDate() + 7);\n            }\n            else if (this.vFormat == 'month') {\n                vColSpan = (12 - vTmpDate.getMonth());\n                if (vTmpDate.getFullYear() == vMaxDate.getFullYear())\n                    vColSpan -= (11 - vMaxDate.getMonth());\n                var vTmpCell = draw_utils_1.newNode(vTmpRow, 'td', null, vHeaderCellClass, null, null, null, null, vColSpan);\n                draw_utils_1.newNode(vTmpCell, 'div', null, null, date_utils_1.formatDateStr(vTmpDate, this.vMonthMajorDateDisplayFormat, this.vLangs[this.vLang]), vColWidth * vColSpan);\n                vTmpDate.setFullYear(vTmpDate.getFullYear() + 1, 0, 1);\n            }\n            else if (this.vFormat == 'quarter') {\n                vColSpan = (4 - Math.floor(vTmpDate.getMonth() / 3));\n                if (vTmpDate.getFullYear() == vMaxDate.getFullYear())\n                    vColSpan -= (3 - Math.floor(vMaxDate.getMonth() / 3));\n                var vTmpCell = draw_utils_1.newNode(vTmpRow, 'td', null, vHeaderCellClass, null, null, null, null, vColSpan);\n                draw_utils_1.newNode(vTmpCell, 'div', null, null, date_utils_1.formatDateStr(vTmpDate, this.vQuarterMajorDateDisplayFormat, this.vLangs[this.vLang]), vColWidth * vColSpan);\n                vTmpDate.setFullYear(vTmpDate.getFullYear() + 1, 0, 1);\n            }\n            else if (this.vFormat == 'hour') {\n                vColSpan = (24 - vTmpDate.getHours());\n                if (vTmpDate.getFullYear() == vMaxDate.getFullYear() &&\n                    vTmpDate.getMonth() == vMaxDate.getMonth() &&\n                    vTmpDate.getDate() == vMaxDate.getDate())\n                    vColSpan -= (23 - vMaxDate.getHours());\n                var vTmpCell = draw_utils_1.newNode(vTmpRow, 'td', null, vHeaderCellClass, null, null, null, null, vColSpan);\n                draw_utils_1.newNode(vTmpCell, 'div', null, null, date_utils_1.formatDateStr(vTmpDate, this.vHourMajorDateDisplayFormat, this.vLangs[this.vLang]), vColWidth * vColSpan);\n                vTmpDate.setHours(0);\n                vTmpDate.setDate(vTmpDate.getDate() + 1);\n            }\n        }\n        vTmpRow = draw_utils_1.newNode(vTmpTBody, 'tr', null, 'footerdays');\n        // Minor Date header and Cell Rows\n        vTmpDate.setFullYear(vMinDate.getFullYear(), vMinDate.getMonth(), vMinDate.getDate()); // , vMinDate.getHours()\n        if (this.vFormat == 'hour')\n            vTmpDate.setHours(vMinDate.getHours());\n        var vNumCols = 0;\n        while (vTmpDate.getTime() <= vMaxDate.getTime()) {\n            var vMinorHeaderCellClass = 'gminorheading';\n            if (this.vFormat == 'day') {\n                if (vTmpDate.getDay() % 6 == 0) {\n                    if (!this.vShowWeekends) {\n                        vTmpDate.setDate(vTmpDate.getDate() + 1);\n                        continue;\n                    }\n                    vMinorHeaderCellClass += 'wkend';\n                }\n                if (vTmpDate <= vMaxDate) {\n                    var vTmpCell = draw_utils_1.newNode(vTmpRow, 'td', null, vMinorHeaderCellClass);\n                    draw_utils_1.newNode(vTmpCell, 'div', null, null, date_utils_1.formatDateStr(vTmpDate, this.vDayMinorDateDisplayFormat, this.vLangs[this.vLang]), vColWidth);\n                    vNumCols++;\n                }\n                vTmpDate.setDate(vTmpDate.getDate() + 1);\n            }\n            else if (this.vFormat == 'week') {\n                if (vTmpDate <= vMaxDate) {\n                    var vTmpCell = draw_utils_1.newNode(vTmpRow, 'td', null, vMinorHeaderCellClass);\n                    draw_utils_1.newNode(vTmpCell, 'div', null, null, date_utils_1.formatDateStr(vTmpDate, this.vWeekMinorDateDisplayFormat, this.vLangs[this.vLang]), vColWidth);\n                    vNumCols++;\n                }\n                vTmpDate.setDate(vTmpDate.getDate() + 7);\n            }\n            else if (this.vFormat == 'month') {\n                if (vTmpDate <= vMaxDate) {\n                    var vTmpCell = draw_utils_1.newNode(vTmpRow, 'td', null, vMinorHeaderCellClass);\n                    draw_utils_1.newNode(vTmpCell, 'div', null, null, date_utils_1.formatDateStr(vTmpDate, this.vMonthMinorDateDisplayFormat, this.vLangs[this.vLang]), vColWidth);\n                    vNumCols++;\n                }\n                vTmpDate.setDate(vTmpDate.getDate() + 1);\n                while (vTmpDate.getDate() > 1) {\n                    vTmpDate.setDate(vTmpDate.getDate() + 1);\n                }\n            }\n            else if (this.vFormat == 'quarter') {\n                if (vTmpDate <= vMaxDate) {\n                    var vTmpCell = draw_utils_1.newNode(vTmpRow, 'td', null, vMinorHeaderCellClass);\n                    draw_utils_1.newNode(vTmpCell, 'div', null, null, date_utils_1.formatDateStr(vTmpDate, this.vQuarterMinorDateDisplayFormat, this.vLangs[this.vLang]), vColWidth);\n                    vNumCols++;\n                }\n                vTmpDate.setDate(vTmpDate.getDate() + 81);\n                while (vTmpDate.getDate() > 1)\n                    vTmpDate.setDate(vTmpDate.getDate() + 1);\n            }\n            else if (this.vFormat == 'hour') {\n                for (var i = vTmpDate.getHours(); i < 24; i++) {\n                    vTmpDate.setHours(i); //works around daylight savings but may look a little odd on days where the clock goes forward\n                    if (vTmpDate <= vMaxDate) {\n                        var vTmpCell = draw_utils_1.newNode(vTmpRow, 'td', null, vMinorHeaderCellClass);\n                        draw_utils_1.newNode(vTmpCell, 'div', null, null, date_utils_1.formatDateStr(vTmpDate, this.vHourMinorDateDisplayFormat, this.vLangs[this.vLang]), vColWidth);\n                        vNumCols++;\n                    }\n                }\n                vTmpDate.setHours(0);\n                vTmpDate.setDate(vTmpDate.getDate() + 1);\n            }\n        }\n        var vDateRow = vTmpRow;\n        // Calculate size of grids  : Plus 3 because 1 border left + 2 of paddings\n        var vTaskLeftPx = (vNumCols * (vColWidth + 3)) + 1;\n        // Fix a small space at the end for day\n        if (this.vFormat === 'day') {\n            vTaskLeftPx += 2;\n        }\n        vTmpTab.style.width = vTaskLeftPx + 'px'; // Ensure that the headings has exactly the same width as the chart grid\n        // const vTaskPlanLeftPx = (vNumCols * (vColWidth + 3)) + 1;\n        var vSingleCell = false;\n        if (this.vUseSingleCell !== 0 && this.vUseSingleCell < (vNumCols * vNumRows))\n            vSingleCell = true;\n        draw_utils_1.newNode(vTmpDiv, 'div', null, 'rhscrpad', null, null, vTaskLeftPx + 1);\n        vTmpDiv = draw_utils_1.newNode(vRightHeader, 'div', null, 'glabelfooter');\n        return { gChartLbl: gChartLbl, vTaskLeftPx: vTaskLeftPx, vSingleCell: vSingleCell, vDateRow: vDateRow, vRightHeader: vRightHeader, vNumCols: vNumCols };\n    };\n    /**\n     *\n     * DRAW CHART BODY\n     *\n     */\n    this.drawCharBody = function (vTaskLeftPx, vTmpContentTabWrapper, gChartLbl, gListLbl, vMinDate, vMaxDate, vSingleCell, vNumCols, vColWidth, vDateRow) {\n        var vRightTable = document.createDocumentFragment();\n        var vTmpDiv = draw_utils_1.newNode(vRightTable, 'div', this.vDivId + 'gchartbody', 'gchartgrid gcontainercol');\n        this.setChartBody(vTmpDiv);\n        var vTmpTab = draw_utils_1.newNode(vTmpDiv, 'table', this.vDivId + 'chartTable', 'gcharttable', null, vTaskLeftPx);\n        this.setChartTable(vTmpTab);\n        draw_utils_1.newNode(vTmpDiv, 'div', null, 'rhscrpad', null, null, vTaskLeftPx + 1);\n        var vTmpTBody = draw_utils_1.newNode(vTmpTab, 'tbody');\n        var vTmpTFoot = draw_utils_1.newNode(vTmpTab, 'tfoot');\n        events_1.syncScroll([vTmpContentTabWrapper, vTmpDiv], 'scrollTop');\n        events_1.syncScroll([gChartLbl, vTmpDiv], 'scrollLeft');\n        events_1.syncScroll([vTmpContentTabWrapper, gListLbl], 'scrollLeft');\n        // Draw each row\n        var i = 0;\n        var j = 0;\n        var bd;\n        if (this.vDebug) {\n            bd = new Date();\n            console.info('before tasks loop', bd);\n        }\n        for (i = 0; i < this.vTaskList.length; i++) {\n            var curTaskStart = this.vTaskList[i].getStart() ? this.vTaskList[i].getStart() : this.vTaskList[i].getPlanStart();\n            var curTaskEnd = this.vTaskList[i].getEnd() ? this.vTaskList[i].getEnd() : this.vTaskList[i].getPlanEnd();\n            var vTaskLeftPx_1 = general_utils_1.getOffset(vMinDate, curTaskStart, vColWidth, this.vFormat, this.vShowWeekends);\n            var vTaskRightPx = general_utils_1.getOffset(curTaskStart, curTaskEnd, vColWidth, this.vFormat, this.vShowWeekends);\n            var curTaskPlanStart = void 0, curTaskPlanEnd = void 0;\n            curTaskPlanStart = this.vTaskList[i].getPlanStart();\n            curTaskPlanEnd = this.vTaskList[i].getPlanEnd();\n            var vTaskPlanLeftPx = 0;\n            var vTaskPlanRightPx = 0;\n            if (curTaskPlanStart && curTaskPlanEnd) {\n                vTaskPlanLeftPx = general_utils_1.getOffset(vMinDate, curTaskPlanStart, vColWidth, this.vFormat, this.vShowWeekends);\n                vTaskPlanRightPx = general_utils_1.getOffset(curTaskPlanStart, curTaskPlanEnd, vColWidth, this.vFormat, this.vShowWeekends);\n            }\n            var vID = this.vTaskList[i].getID();\n            var vComb = (this.vTaskList[i].getParItem() && this.vTaskList[i].getParItem().getGroup() == 2);\n            var vCellFormat = '';\n            var vTmpDiv_1 = null;\n            var vTmpItem = this.vTaskList[i];\n            var vCaptClass = null;\n            // set cell width only for first row because of table-layout:fixed\n            var taskCellWidth = i === 0 ? vColWidth : null;\n            if (this.vTaskList[i].getMile() && !vComb) {\n                var vTmpRow = draw_utils_1.newNode(vTmpTBody, 'tr', this.vDivId + 'childrow_' + vID, 'gmileitem gmile' + this.vFormat, null, null, null, ((this.vTaskList[i].getVisible() == 0) ? 'none' : null));\n                this.vTaskList[i].setChildRow(vTmpRow);\n                events_1.addThisRowListeners(this, this.vTaskList[i].getListChildRow(), vTmpRow);\n                var vTmpCell = draw_utils_1.newNode(vTmpRow, 'td', null, 'gtaskcell gtaskcellmile', null, vColWidth, null, null, null);\n                vTmpDiv_1 = draw_utils_1.newNode(vTmpCell, 'div', null, 'gtaskcelldiv', '\\u00A0\\u00A0');\n                vTmpDiv_1 = draw_utils_1.newNode(vTmpDiv_1, 'div', this.vDivId + 'bardiv_' + vID, 'gtaskbarcontainer', null, 12, vTaskLeftPx_1 + vTaskRightPx - 6);\n                this.vTaskList[i].setBarDiv(vTmpDiv_1);\n                var vTmpDiv2 = draw_utils_1.newNode(vTmpDiv_1, 'div', this.vDivId + 'taskbar_' + vID, this.vTaskList[i].getClass(), null, 12);\n                this.vTaskList[i].setTaskDiv(vTmpDiv2);\n                if (this.vTaskList[i].getCompVal() < 100)\n                    vTmpDiv2.appendChild(document.createTextNode('\\u25CA'));\n                else {\n                    vTmpDiv2 = draw_utils_1.newNode(vTmpDiv2, 'div', null, 'gmilediamond');\n                    draw_utils_1.newNode(vTmpDiv2, 'div', null, 'gmdtop');\n                    draw_utils_1.newNode(vTmpDiv2, 'div', null, 'gmdbottom');\n                }\n                vCaptClass = 'gmilecaption';\n                if (!vSingleCell && !vComb) {\n                    this.drawColsChart(vNumCols, vTmpRow, taskCellWidth, vMinDate, vMaxDate);\n                }\n            }\n            else {\n                var vTaskWidth = vTaskRightPx;\n                // Draw Group Bar which has outer div with inner group div\n                // and several small divs to left and right to create angled-end indicators\n                if (this.vTaskList[i].getGroup()) {\n                    vTaskWidth = (vTaskWidth > this.vMinGpLen && vTaskWidth < this.vMinGpLen * 2) ? this.vMinGpLen * 2 : vTaskWidth; // Expand to show two end points\n                    vTaskWidth = (vTaskWidth < this.vMinGpLen) ? this.vMinGpLen : vTaskWidth; // expand to show one end point\n                    var vTmpRow = draw_utils_1.newNode(vTmpTBody, 'tr', this.vDivId + 'childrow_' + vID, ((this.vTaskList[i].getGroup() == 2) ? 'glineitem gitem' : 'ggroupitem ggroup') + this.vFormat, null, null, null, ((this.vTaskList[i].getVisible() == 0) ? 'none' : null));\n                    this.vTaskList[i].setChildRow(vTmpRow);\n                    events_1.addThisRowListeners(this, this.vTaskList[i].getListChildRow(), vTmpRow);\n                    var vTmpCell = draw_utils_1.newNode(vTmpRow, 'td', null, 'gtaskcell gtaskcellbar', null, vColWidth, null, null);\n                    vTmpDiv_1 = draw_utils_1.newNode(vTmpCell, 'div', null, 'gtaskcelldiv', '\\u00A0\\u00A0');\n                    this.vTaskList[i].setCellDiv(vTmpDiv_1);\n                    if (this.vTaskList[i].getGroup() == 1) {\n                        vTmpDiv_1 = draw_utils_1.newNode(vTmpDiv_1, 'div', this.vDivId + 'bardiv_' + vID, 'gtaskbarcontainer', null, vTaskWidth, vTaskLeftPx_1);\n                        this.vTaskList[i].setBarDiv(vTmpDiv_1);\n                        var vTmpDiv2 = draw_utils_1.newNode(vTmpDiv_1, 'div', this.vDivId + 'taskbar_' + vID, this.vTaskList[i].getClass(), null, vTaskWidth);\n                        this.vTaskList[i].setTaskDiv(vTmpDiv2);\n                        draw_utils_1.newNode(vTmpDiv2, 'div', this.vDivId + 'complete_' + vID, this.vTaskList[i].getClass() + 'complete', null, this.vTaskList[i].getCompStr());\n                        draw_utils_1.newNode(vTmpDiv_1, 'div', null, this.vTaskList[i].getClass() + 'endpointleft');\n                        if (vTaskWidth >= this.vMinGpLen * 2)\n                            draw_utils_1.newNode(vTmpDiv_1, 'div', null, this.vTaskList[i].getClass() + 'endpointright');\n                        vCaptClass = 'ggroupcaption';\n                    }\n                    if (!vSingleCell && !vComb) {\n                        this.drawColsChart(vNumCols, vTmpRow, taskCellWidth, vMinDate, vMaxDate);\n                    }\n                }\n                else {\n                    vTaskWidth = (vTaskWidth <= 0) ? 1 : vTaskWidth;\n                    /**\n                     * DRAW THE BOXES FOR GANTT\n                     */\n                    var vTmpDivCell = void 0, vTmpRow = void 0;\n                    if (vComb) {\n                        vTmpDivCell = vTmpDiv_1 = this.vTaskList[i].getParItem().getCellDiv();\n                    }\n                    else {\n                        // Draw Task Bar which has colored bar div\n                        vTmpRow = draw_utils_1.newNode(vTmpTBody, 'tr', this.vDivId + 'childrow_' + vID, 'glineitem gitem' + this.vFormat, null, null, null, ((this.vTaskList[i].getVisible() == 0) ? 'none' : null));\n                        this.vTaskList[i].setChildRow(vTmpRow);\n                        events_1.addThisRowListeners(this, this.vTaskList[i].getListChildRow(), vTmpRow);\n                        var vTmpCell = draw_utils_1.newNode(vTmpRow, 'td', null, 'gtaskcell gtaskcellcolorbar', null, taskCellWidth, null, null);\n                        vTmpDivCell = vTmpDiv_1 = draw_utils_1.newNode(vTmpCell, 'div', null, 'gtaskcelldiv', '\\u00A0\\u00A0');\n                    }\n                    // DRAW TASK BAR\n                    vTmpDiv_1 = draw_utils_1.newNode(vTmpDiv_1, 'div', this.vDivId + 'bardiv_' + vID, 'gtaskbarcontainer', null, vTaskWidth, vTaskLeftPx_1);\n                    this.vTaskList[i].setBarDiv(vTmpDiv_1);\n                    var vTmpDiv2 = void 0;\n                    if (this.vTaskList[i].getStartVar()) {\n                        // textbar\n                        vTmpDiv2 = draw_utils_1.newNode(vTmpDiv_1, 'div', this.vDivId + 'taskbar_' + vID, this.vTaskList[i].getClass(), null, vTaskWidth);\n                        if (this.vTaskList[i].getBarText()) {\n                            draw_utils_1.newNode(vTmpDiv2, 'span', this.vDivId + 'tasktextbar_' + vID, 'textbar', this.vTaskList[i].getBarText(), this.vTaskList[i].getCompRestStr());\n                        }\n                        this.vTaskList[i].setTaskDiv(vTmpDiv2);\n                    }\n                    // PLANNED\n                    // If exist and one of them are different, show plan bar... show if there is no real vStart as well (just plan dates)\n                    if (vTaskPlanLeftPx && ((vTaskPlanLeftPx != vTaskLeftPx_1 || vTaskPlanRightPx != vTaskRightPx) || !this.vTaskList[i].getStartVar())) {\n                        var vTmpPlanDiv = draw_utils_1.newNode(vTmpDivCell, 'div', this.vDivId + 'bardiv_' + vID, 'gtaskbarcontainer gplan', null, vTaskPlanRightPx, vTaskPlanLeftPx);\n                        var vTmpPlanDiv2 = draw_utils_1.newNode(vTmpPlanDiv, 'div', this.vDivId + 'taskbar_' + vID, this.vTaskList[i].getClass() + ' gplan', null, vTaskPlanRightPx);\n                        this.vTaskList[i].setPlanTaskDiv(vTmpPlanDiv2);\n                    }\n                    // and opaque completion div\n                    if (vTmpDiv2) {\n                        draw_utils_1.newNode(vTmpDiv2, 'div', this.vDivId + 'complete_' + vID, this.vTaskList[i].getClass() + 'complete', null, this.vTaskList[i].getCompStr());\n                    }\n                    // caption\n                    if (vComb)\n                        vTmpItem = this.vTaskList[i].getParItem();\n                    if (!vComb || (vComb && this.vTaskList[i].getParItem().getEnd() == this.vTaskList[i].getEnd()))\n                        vCaptClass = 'gcaption';\n                    // Background cells\n                    if (!vSingleCell && !vComb && vTmpRow) {\n                        this.drawColsChart(vNumCols, vTmpRow, taskCellWidth, vMinDate, vMaxDate);\n                    }\n                }\n            }\n            if (this.getCaptionType() && vCaptClass !== null) {\n                var vCaptionStr = void 0;\n                switch (this.getCaptionType()) {\n                    case 'Caption':\n                        vCaptionStr = vTmpItem.getCaption();\n                        break;\n                    case 'Resource':\n                        vCaptionStr = vTmpItem.getResource();\n                        break;\n                    case 'Duration':\n                        vCaptionStr = vTmpItem.getDuration(this.vFormat, this.vLangs[this.vLang]);\n                        break;\n                    case 'Complete':\n                        vCaptionStr = vTmpItem.getCompStr();\n                        break;\n                }\n                draw_utils_1.newNode(vTmpDiv_1, 'div', null, vCaptClass, vCaptionStr, 120, (vCaptClass == 'gmilecaption') ? 12 : 0);\n            }\n            // Add Task Info div for tooltip\n            if (this.vTaskList[i].getTaskDiv() && vTmpDiv_1) {\n                var vTmpDiv2 = draw_utils_1.newNode(vTmpDiv_1, 'div', this.vDivId + 'tt' + vID, null, null, null, null, 'none');\n                var _a = this.createTaskInfo(this.vTaskList[i], this.vTooltipTemplate), component = _a.component, callback = _a.callback;\n                vTmpDiv2.appendChild(component);\n                events_1.addTooltipListeners(this, this.vTaskList[i].getTaskDiv(), vTmpDiv2, callback);\n            }\n            // Add Plan Task Info div for tooltip\n            if (this.vTaskList[i].getPlanTaskDiv() && vTmpDiv_1) {\n                var vTmpDiv2 = draw_utils_1.newNode(vTmpDiv_1, 'div', this.vDivId + 'tt' + vID, null, null, null, null, 'none');\n                var _b = this.createTaskInfo(this.vTaskList[i], this.vTooltipTemplate), component = _b.component, callback = _b.callback;\n                vTmpDiv2.appendChild(component);\n                events_1.addTooltipListeners(this, this.vTaskList[i].getPlanTaskDiv(), vTmpDiv2, callback);\n            }\n        }\n        // Include the footer with the days/week/month...\n        if (vSingleCell) {\n            var vTmpTFootTRow = draw_utils_1.newNode(vTmpTFoot, 'tr');\n            var vTmpTFootTCell = draw_utils_1.newNode(vTmpTFootTRow, 'td', null, null, null, '100%');\n            var vTmpTFootTCellTable = draw_utils_1.newNode(vTmpTFootTCell, 'table', null, 'gcharttableh', null, '100%');\n            var vTmpTFootTCellTableTBody = draw_utils_1.newNode(vTmpTFootTCellTable, 'tbody');\n            vTmpTFootTCellTableTBody.appendChild(vDateRow.cloneNode(true));\n        }\n        else {\n            vTmpTFoot.appendChild(vDateRow.cloneNode(true));\n        }\n        return { vRightTable: vRightTable };\n    };\n    this.drawColsChart = function (vNumCols, vTmpRow, taskCellWidth, pStartDate, pEndDate) {\n        if (pStartDate === void 0) { pStartDate = null; }\n        if (pEndDate === void 0) { pEndDate = null; }\n        var columnCurrentDay = null;\n        // Find the Current day cell to put a different class\n        if (this.vShowWeekends !== false && pStartDate && pEndDate && (this.vFormat == 'day' || this.vFormat == 'week')) {\n            var curTaskStart = new Date(pStartDate.getTime());\n            var curTaskEnd = new Date();\n            var onePeriod = 3600000;\n            if (this.vFormat == 'day') {\n                onePeriod *= 24;\n            }\n            else if (this.vFormat == 'week') {\n                onePeriod *= 24 * 7;\n            }\n            columnCurrentDay = Math.floor(general_utils_1.calculateCurrentDateOffset(curTaskStart, curTaskEnd) / onePeriod) - 1;\n        }\n        for (var j = 0; j < vNumCols - 1; j++) {\n            var vCellFormat = 'gtaskcell gtaskcellcols';\n            if (this.vShowWeekends !== false && this.vFormat == 'day' && ((j % 7 == 4) || (j % 7 == 5))) {\n                vCellFormat = 'gtaskcellwkend';\n            }\n            //When is the column is the current day/week,give a different class\n            else if ((this.vFormat == 'week' || this.vFormat == 'day') && j === columnCurrentDay) {\n                vCellFormat = 'gtaskcellcurrent';\n            }\n            draw_utils_1.newNode(vTmpRow, 'td', null, vCellFormat, '\\u00A0\\u00A0', taskCellWidth);\n        }\n    };\n    /**\n     *\n     *\n     * DRAWING PROCESS\n     *\n     *  vTaskRightPx,vTaskWidth,vTaskPlanLeftPx,vTaskPlanRightPx,vID\n     */\n    this.Draw = function () {\n        var vMaxDate = new Date();\n        var vMinDate = new Date();\n        var vColWidth = 0;\n        var bd;\n        if (this.vEvents && this.vEvents.beforeDraw) {\n            this.vEvents.beforeDraw();\n        }\n        if (this.vDebug) {\n            bd = new Date();\n            console.info('before draw', bd);\n        }\n        // Process all tasks, reset parent date and completion % if task list has altered\n        if (this.vProcessNeeded)\n            task_1.processRows(this.vTaskList, 0, -1, 1, 1, this.getUseSort(), this.vDebug);\n        this.vProcessNeeded = false;\n        // get overall min/max dates plus padding\n        vMinDate = date_utils_1.getMinDate(this.vTaskList, this.vFormat, this.getMinDate() && date_utils_1.coerceDate(this.getMinDate()));\n        vMaxDate = date_utils_1.getMaxDate(this.vTaskList, this.vFormat, this.getMaxDate() && date_utils_1.coerceDate(this.getMaxDate()));\n        // Calculate chart width variables.\n        if (this.vFormat == 'day')\n            vColWidth = this.vDayColWidth;\n        else if (this.vFormat == 'week')\n            vColWidth = this.vWeekColWidth;\n        else if (this.vFormat == 'month')\n            vColWidth = this.vMonthColWidth;\n        else if (this.vFormat == 'quarter')\n            vColWidth = this.vQuarterColWidth;\n        else if (this.vFormat == 'hour')\n            vColWidth = this.vHourColWidth;\n        // DRAW the Left-side of the chart (names, resources, comp%)\n        var vLeftHeader = document.createDocumentFragment();\n        /**\n         * LIST HEAD\n        */\n        var gListLbl = this.drawListHead(vLeftHeader);\n        /**\n         * LIST BODY\n        */\n        var _a = this.drawListBody(vLeftHeader), vNumRows = _a.vNumRows, vTmpContentTabWrapper = _a.vTmpContentTabWrapper;\n        /**\n         * CHART HEAD\n         */\n        var _b = this.drawChartHead(vMinDate, vMaxDate, vColWidth, vNumRows), gChartLbl = _b.gChartLbl, vTaskLeftPx = _b.vTaskLeftPx, vSingleCell = _b.vSingleCell, vRightHeader = _b.vRightHeader, vDateRow = _b.vDateRow, vNumCols = _b.vNumCols;\n        /**\n         * CHART GRID\n         */\n        var vRightTable = this.drawCharBody(vTaskLeftPx, vTmpContentTabWrapper, gChartLbl, gListLbl, vMinDate, vMaxDate, vSingleCell, vNumCols, vColWidth, vDateRow).vRightTable;\n        if (this.vDebug) {\n            var ad = new Date();\n            console.info('after tasks loop', ad, (ad.getTime() - bd.getTime()));\n        }\n        // MAIN VIEW: Appending all generated components to main view\n        while (this.vDiv.hasChildNodes())\n            this.vDiv.removeChild(this.vDiv.firstChild);\n        var vTmpDiv = draw_utils_1.newNode(this.vDiv, 'div', null, 'gchartcontainer');\n        vTmpDiv.style.height = this.vTotalHeight;\n        var leftvTmpDiv = draw_utils_1.newNode(vTmpDiv, 'div', null, 'gmain gmainleft');\n        leftvTmpDiv.appendChild(vLeftHeader);\n        // leftvTmpDiv.appendChild(vLeftTable);\n        var rightvTmpDiv = draw_utils_1.newNode(vTmpDiv, 'div', null, 'gmain gmainright');\n        rightvTmpDiv.appendChild(vRightHeader);\n        rightvTmpDiv.appendChild(vRightTable);\n        vTmpDiv.appendChild(leftvTmpDiv);\n        vTmpDiv.appendChild(rightvTmpDiv);\n        draw_utils_1.newNode(vTmpDiv, 'div', null, 'ggridfooter');\n        var vTmpDiv2 = draw_utils_1.newNode(this.getChartBody(), 'div', this.vDivId + 'Lines', 'glinediv');\n        if (this.vEvents.onLineContainerHover && typeof this.vEvents.onLineContainerHover === 'function') {\n            events_1.addListener('mouseover', this.vEvents.onLineContainerHover, vTmpDiv2);\n            events_1.addListener('mouseout', this.vEvents.onLineContainerHover, vTmpDiv2);\n        }\n        vTmpDiv2.style.visibility = 'hidden';\n        this.setLines(vTmpDiv2);\n        /* Quick hack to show the generated HTML on older browsers\n              let tmpGenSrc=document.createElement('textarea');\n              tmpGenSrc.appendChild(document.createTextNode(vTmpDiv.innerHTML));\n              vDiv.appendChild(tmpGenSrc);\n        //*/\n        // LISTENERS: Now all the content exists, register scroll listeners\n        events_1.addScrollListeners(this);\n        // SCROLL: now check if we are actually scrolling the pane\n        if (this.vScrollTo != '') {\n            var vScrollDate = new Date(vMinDate.getTime());\n            var vScrollPx = 0;\n            if (this.vScrollTo.substr && this.vScrollTo.substr(0, 2) == 'px') {\n                vScrollPx = parseInt(this.vScrollTo.substr(2));\n            }\n            else {\n                if (this.vScrollTo === 'today') {\n                    vScrollDate = new Date();\n                }\n                else if (this.vScrollTo instanceof Date) {\n                    vScrollDate = this.vScrollTo;\n                }\n                else {\n                    vScrollDate = date_utils_1.parseDateStr(this.vScrollTo, this.getDateInputFormat());\n                }\n                if (this.vFormat == 'hour')\n                    vScrollDate.setMinutes(0, 0, 0);\n                else\n                    vScrollDate.setHours(0, 0, 0, 0);\n                vScrollPx = general_utils_1.getOffset(vMinDate, vScrollDate, vColWidth, this.vFormat, this.vShowWeekends) - 30;\n            }\n            this.getChartBody().scrollLeft = vScrollPx;\n        }\n        if (vMinDate.getTime() <= (new Date()).getTime() && vMaxDate.getTime() >= (new Date()).getTime()) {\n            this.vTodayPx = general_utils_1.getOffset(vMinDate, new Date(), vColWidth, this.vFormat, this.vShowWeekends);\n        }\n        else\n            this.vTodayPx = -1;\n        // DEPENDENCIES: Draw lines of Dependencies\n        var bdd;\n        if (this.vDebug) {\n            bdd = new Date();\n            console.info('before DrawDependencies', bdd);\n        }\n        if (this.vEvents && typeof this.vEvents.beforeLineDraw === 'function') {\n            this.vEvents.beforeLineDraw();\n        }\n        this.DrawDependencies(this.vDebug);\n        events_1.addListenerDependencies(this.vLineOptions);\n        // EVENTS\n        if (this.vEvents && typeof this.vEvents.afterLineDraw === 'function') {\n            this.vEvents.afterLineDraw();\n        }\n        if (this.vDebug) {\n            var ad = new Date();\n            console.info('after DrawDependencies', ad, (ad.getTime() - bdd.getTime()));\n        }\n        this.drawComplete(vMinDate, vColWidth, bd);\n    };\n    /**\n     * Actions after all the render process\n     */\n    this.drawComplete = function (vMinDate, vColWidth, bd) {\n        if (this.vDebug) {\n            var ad = new Date();\n            console.info('after draw', ad, (ad.getTime() - bd.getTime()));\n        }\n        events_1.updateGridHeaderWidth(this);\n        this.chartRowDateToX = function (date) {\n            return general_utils_1.getOffset(vMinDate, date, vColWidth, this.vFormat, this.vShowWeekends);\n        };\n        if (this.vEvents && this.vEvents.afterDraw) {\n            this.vEvents.afterDraw();\n        }\n    };\n    if (this.vDiv && this.vDiv.nodeName && this.vDiv.nodeName.toLowerCase() == 'div')\n        this.vDivId = this.vDiv.id;\n}; //GanttChart\n//# sourceMappingURL=draw.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DrawDependencies = exports.drawDependency = void 0;\nexports.drawDependency = function (x1, y1, x2, y2, pType, pClass) {\n    var vDir = 1;\n    var vBend = false;\n    var vShort = 4;\n    var vRow = Math.floor(this.getRowHeight() / 2);\n    if (y2 < y1)\n        vRow *= -1;\n    switch (pType) {\n        case 'SF':\n            vShort *= -1;\n            if (x1 - 10 <= x2 && y1 != y2)\n                vBend = true;\n            vDir = -1;\n            break;\n        case 'SS':\n            if (x1 < x2)\n                vShort *= -1;\n            else\n                vShort = x2 - x1 - (2 * vShort);\n            break;\n        case 'FF':\n            if (x1 <= x2)\n                vShort = x2 - x1 + (2 * vShort);\n            vDir = -1;\n            break;\n        default:\n            if (x1 + 10 >= x2 && y1 != y2)\n                vBend = true;\n            break;\n    }\n    if (vBend) {\n        this.sLine(x1, y1, x1 + vShort, y1, pClass);\n        this.sLine(x1 + vShort, y1, x1 + vShort, y2 - vRow, pClass);\n        this.sLine(x1 + vShort, y2 - vRow, x2 - (vShort * 2), y2 - vRow, pClass);\n        this.sLine(x2 - (vShort * 2), y2 - vRow, x2 - (vShort * 2), y2, pClass);\n        this.sLine(x2 - (vShort * 2), y2, x2 - (1 * vDir), y2, pClass);\n    }\n    else if (y1 != y2) {\n        this.sLine(x1, y1, x1 + vShort, y1, pClass);\n        this.sLine(x1 + vShort, y1, x1 + vShort, y2, pClass);\n        this.sLine(x1 + vShort, y2, x2 - (1 * vDir), y2, pClass);\n    }\n    else\n        this.sLine(x1, y1, x2 - (1 * vDir), y2, pClass);\n    var vTmpDiv = this.sLine(x2, y2, x2 - 3 - ((vDir < 0) ? 1 : 0), y2 - 3 - ((vDir < 0) ? 1 : 0), pClass + \"Arw\");\n    vTmpDiv.style.width = '0px';\n    vTmpDiv.style.height = '0px';\n};\nexports.DrawDependencies = function (vDebug) {\n    if (vDebug === void 0) { vDebug = false; }\n    if (this.getShowDeps() == 1) {\n        this.CalcTaskXY(); //First recalculate the x,y\n        this.clearDependencies();\n        var vList = this.getList();\n        for (var i = 0; i < vList.length; i++) {\n            var vDepend = vList[i].getDepend();\n            var vDependType = vList[i].getDepType();\n            var n = vDepend.length;\n            if (n > 0 && vList[i].getVisible() == 1) {\n                for (var k = 0; k < n; k++) {\n                    var vTask = this.getArrayLocationByID(vDepend[k]);\n                    if (vTask >= 0 && vList[vTask].getGroup() != 2) {\n                        if (vList[vTask].getVisible() == 1) {\n                            if (vDebug) {\n                                console.info(\"init drawDependency \", vList[vTask].getID(), new Date());\n                            }\n                            var cssClass = 'gDepId' + vList[vTask].getID() +\n                                ' ' + 'gDepNextId' + vList[i].getID();\n                            var dependedData = vList[vTask].getDataObject();\n                            var nextDependedData = vList[i].getDataObject();\n                            if (dependedData && dependedData.pID && nextDependedData && nextDependedData.pID) {\n                                cssClass += ' gDepDataId' + dependedData.pID + ' ' + 'gDepNextDataId' + nextDependedData.pID;\n                            }\n                            if (vDependType[k] == 'SS')\n                                this.drawDependency(vList[vTask].getStartX() - 1, vList[vTask].getStartY(), vList[i].getStartX() - 1, vList[i].getStartY(), 'SS', cssClass + ' gDepSS');\n                            else if (vDependType[k] == 'FF')\n                                this.drawDependency(vList[vTask].getEndX(), vList[vTask].getEndY(), vList[i].getEndX(), vList[i].getEndY(), 'FF', cssClass + ' gDepFF');\n                            else if (vDependType[k] == 'SF')\n                                this.drawDependency(vList[vTask].getStartX() - 1, vList[vTask].getStartY(), vList[i].getEndX(), vList[i].getEndY(), 'SF', cssClass + ' gDepSF');\n                            else if (vDependType[k] == 'FS')\n                                this.drawDependency(vList[vTask].getEndX(), vList[vTask].getEndY(), vList[i].getStartX() - 1, vList[i].getStartY(), 'FS', cssClass + ' gDepFS');\n                        }\n                    }\n                }\n            }\n        }\n    }\n    // draw the current date line\n    if (this.vTodayPx >= 0) {\n        this.sLine(this.vTodayPx, 0, this.vTodayPx, this.getChartTable().offsetHeight - 1, 'gCurDate');\n    }\n};\n//# sourceMappingURL=draw_dependencies.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getXMLTask = exports.getXMLProject = exports.AddXMLTask = exports.getXMLNodeValue = exports.findXMLNode = exports.parseXMLString = exports.parseXML = void 0;\nvar task_1 = require(\"./task\");\nvar date_utils_1 = require(\"./utils/date_utils\");\nvar draw_utils_1 = require(\"./utils/draw_utils\");\nvar general_utils_1 = require(\"./utils/general_utils\");\nexports.parseXML = function (pFile, pGanttVar) {\n    return general_utils_1.makeRequest(pFile, false, false)\n        .then(function (xmlDoc) {\n        exports.AddXMLTask(pGanttVar, xmlDoc);\n    });\n};\nexports.parseXMLString = function (pStr, pGanttVar) {\n    var xmlDoc;\n    if (typeof window.DOMParser != 'undefined') {\n        xmlDoc = (new window.DOMParser()).parseFromString(pStr, 'text/xml');\n    }\n    else if (typeof window.ActiveXObject != 'undefined' &&\n        new window.ActiveXObject('Microsoft.XMLDOM')) {\n        xmlDoc = new window.ActiveXObject('Microsoft.XMLDOM');\n        xmlDoc.async = 'false';\n        xmlDoc.loadXML(pStr);\n    }\n    exports.AddXMLTask(pGanttVar, xmlDoc);\n};\nexports.findXMLNode = function (pRoot, pNodeName) {\n    var vRetValue;\n    try {\n        vRetValue = pRoot.getElementsByTagName(pNodeName);\n    }\n    catch (error) {\n        ;\n    } // do nothing, we'll return undefined\n    return vRetValue;\n};\n// pType can be 1=numeric, 2=String, all other values just return raw data\nexports.getXMLNodeValue = function (pRoot, pNodeName, pType, pDefault) {\n    var vRetValue;\n    try {\n        vRetValue = pRoot.getElementsByTagName(pNodeName)[0].childNodes[0].nodeValue;\n    }\n    catch (error) {\n        if (typeof pDefault != 'undefined')\n            vRetValue = pDefault;\n    }\n    if (typeof vRetValue != 'undefined' && vRetValue != null) {\n        if (pType == 1)\n            vRetValue *= 1;\n        else if (pType == 2)\n            vRetValue = vRetValue.toString();\n    }\n    return vRetValue;\n};\nexports.AddXMLTask = function (pGanttVar, pXmlDoc) {\n    var project = '';\n    var Task;\n    var n = 0;\n    var m = 0;\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var maxPID = 0;\n    var ass = new Array();\n    var assRes = new Array();\n    var res = new Array();\n    var pars = new Array();\n    var projNode = exports.findXMLNode(pXmlDoc, 'Project');\n    if (typeof projNode != 'undefined' && projNode.length > 0) {\n        project = projNode[0].getAttribute('xmlns');\n    }\n    if (project == 'http://schemas.microsoft.com/project') {\n        pGanttVar.setDateInputFormat('yyyy-mm-dd');\n        Task = exports.findXMLNode(pXmlDoc, 'Task');\n        if (typeof Task == 'undefined')\n            n = 0;\n        else\n            n = Task.length;\n        var resources = exports.findXMLNode(pXmlDoc, 'Resource');\n        if (typeof resources == 'undefined') {\n            n = 0;\n            m = 0;\n        }\n        else\n            m = resources.length;\n        for (i = 0; i < m; i++) {\n            var resname = exports.getXMLNodeValue(resources[i], 'Name', 2, '');\n            var uid = exports.getXMLNodeValue(resources[i], 'UID', 1, -1);\n            if (resname.length > 0 && uid > 0)\n                res[uid] = resname;\n        }\n        var assignments = exports.findXMLNode(pXmlDoc, 'Assignment');\n        if (typeof assignments == 'undefined')\n            j = 0;\n        else\n            j = assignments.length;\n        for (i = 0; i < j; i++) {\n            var uid = void 0;\n            var resUID = exports.getXMLNodeValue(assignments[i], 'ResourceUID', 1, -1);\n            uid = exports.getXMLNodeValue(assignments[i], 'TaskUID', 1, -1);\n            if (uid > 0) {\n                if (resUID > 0)\n                    assRes[uid] = res[resUID];\n                ass[uid] = assignments[i];\n            }\n        }\n        // Store information about parent UIDs in an easily searchable form\n        for (i = 0; i < n; i++) {\n            var uid = void 0;\n            uid = exports.getXMLNodeValue(Task[i], 'UID', 1, 0);\n            var vOutlineNumber = void 0;\n            if (uid != 0)\n                vOutlineNumber = exports.getXMLNodeValue(Task[i], 'OutlineNumber', 2, '0');\n            if (uid > 0)\n                pars[vOutlineNumber] = uid;\n            if (uid > maxPID)\n                maxPID = uid;\n        }\n        for (i = 0; i < n; i++) {\n            // optional parameters may not have an entry\n            // Task ID must NOT be zero otherwise it will be skipped\n            var pID = exports.getXMLNodeValue(Task[i], 'UID', 1, 0);\n            if (pID != 0) {\n                var pName = exports.getXMLNodeValue(Task[i], 'Name', 2, 'No Task Name');\n                var pStart = exports.getXMLNodeValue(Task[i], 'Start', 2, '');\n                var pEnd = exports.getXMLNodeValue(Task[i], 'Finish', 2, '');\n                var pPlanStart = exports.getXMLNodeValue(Task[i], 'PlanStart', 2, '');\n                var pPlanEnd = exports.getXMLNodeValue(Task[i], 'PlanFinish', 2, '');\n                var pDuration = exports.getXMLNodeValue(Task[i], 'Duration', 2, '');\n                var pLink = exports.getXMLNodeValue(Task[i], 'HyperlinkAddress', 2, '');\n                var pMile = exports.getXMLNodeValue(Task[i], 'Milestone', 1, 0);\n                var pComp = exports.getXMLNodeValue(Task[i], 'PercentWorkComplete', 1, 0);\n                var pCost = exports.getXMLNodeValue(Task[i], 'Cost', 2, 0);\n                var pGroup = exports.getXMLNodeValue(Task[i], 'Summary', 1, 0);\n                var pParent = 0;\n                var vOutlineLevel = exports.getXMLNodeValue(Task[i], 'OutlineLevel', 1, 0);\n                var vOutlineNumber = void 0;\n                if (vOutlineLevel > 1) {\n                    vOutlineNumber = exports.getXMLNodeValue(Task[i], 'OutlineNumber', 2, '0');\n                    pParent = pars[vOutlineNumber.substr(0, vOutlineNumber.lastIndexOf('.'))];\n                }\n                var pNotes = void 0;\n                try {\n                    pNotes = Task[i].getElementsByTagName('Notes')[0].childNodes[1].nodeValue; //this should be a CDATA node\n                }\n                catch (error) {\n                    pNotes = '';\n                }\n                var pRes = void 0;\n                if (typeof assRes[pID] != 'undefined')\n                    pRes = assRes[pID];\n                else\n                    pRes = '';\n                var predecessors = exports.findXMLNode(Task[i], 'PredecessorLink');\n                if (typeof predecessors == 'undefined')\n                    j = 0;\n                else\n                    j = predecessors.length;\n                var pDepend = '';\n                for (k = 0; k < j; k++) {\n                    var depUID = exports.getXMLNodeValue(predecessors[k], 'PredecessorUID', 1, -1);\n                    var depType = exports.getXMLNodeValue(predecessors[k], 'Type', 1, 1);\n                    if (depUID > 0) {\n                        if (pDepend.length > 0)\n                            pDepend += ',';\n                        switch (depType) {\n                            case 0:\n                                pDepend += depUID + 'FF';\n                                break;\n                            case 1:\n                                pDepend += depUID + 'FS';\n                                break;\n                            case 2:\n                                pDepend += depUID + 'SF';\n                                break;\n                            case 3:\n                                pDepend += depUID + 'SS';\n                                break;\n                            default:\n                                pDepend += depUID + 'FS';\n                                break;\n                        }\n                    }\n                }\n                var pOpen = 1;\n                var pCaption = '';\n                var pClass = void 0;\n                if (pGroup > 0)\n                    pClass = 'ggroupblack';\n                else if (pMile > 0)\n                    pClass = 'gmilestone';\n                else\n                    pClass = 'gtaskblue';\n                // check for split tasks\n                var splits = exports.findXMLNode(ass[pID], 'TimephasedData');\n                if (typeof splits == 'undefined')\n                    j = 0;\n                else\n                    j = splits.length;\n                var vSplitStart = pStart;\n                var vSplitEnd = pEnd;\n                var vSubCreated = false;\n                var vDepend = pDepend.replace(/,*[0-9]+[FS]F/g, '');\n                for (k = 0; k < j; k++) {\n                    var vDuration = exports.getXMLNodeValue(splits[k], 'Value', 2, '0');\n                    //remove all text\n                    vDuration = '0' + vDuration.replace(/\\D/g, '');\n                    vDuration *= 1;\n                    if ((vDuration == 0 && !vSubCreated) || (k + 1 == j && pGroup == 2)) {\n                        // No time booked in the given period (or last entry)\n                        // Make sure the parent task is set as a combined group\n                        pGroup = 2;\n                        // Handle last loop\n                        if (k + 1 == j)\n                            vDepend = pDepend.replace(/,*[0-9]+[FS]S/g, '');\n                        // Now create a subtask\n                        maxPID++;\n                        vSplitEnd = exports.getXMLNodeValue(splits[k], (k + 1 == j) ? 'Finish' : 'Start', 2, '');\n                        pGanttVar.AddTaskItem(new task_1.TaskItem(maxPID, pName, vSplitStart, vSplitEnd, 'gtaskblue', pLink, pMile, pRes, pComp, 0, pID, pOpen, vDepend, pCaption, pNotes, pGanttVar, pCost, pPlanStart, pPlanEnd, pDuration));\n                        vSubCreated = true;\n                        vDepend = '';\n                    }\n                    else if (vDuration != 0 && vSubCreated) {\n                        vSplitStart = exports.getXMLNodeValue(splits[k], 'Start', 2, '');\n                        vSubCreated = false;\n                    }\n                }\n                if (vSubCreated)\n                    pDepend = '';\n                // Finally add the task\n                pGanttVar.AddTaskItem(new task_1.TaskItem(pID, pName, pStart, pEnd, pClass, pLink, pMile, pRes, pComp, pGroup, pParent, pOpen, pDepend, pCaption, pNotes, pGanttVar, pCost, pPlanStart, pPlanEnd, pDuration));\n            }\n        }\n    }\n    else {\n        Task = pXmlDoc.getElementsByTagName('task');\n        n = Task.length;\n        for (i = 0; i < n; i++) {\n            // optional parameters may not have an entry\n            // Task ID must NOT be zero otherwise it will be skipped\n            var pID = exports.getXMLNodeValue(Task[i], 'pID', 1, 0);\n            if (pID != 0) {\n                var pName = exports.getXMLNodeValue(Task[i], 'pName', 2, 'No Task Name');\n                var pStart = exports.getXMLNodeValue(Task[i], 'pStart', 2, '');\n                var pEnd = exports.getXMLNodeValue(Task[i], 'pEnd', 2, '');\n                var pPlanStart = exports.getXMLNodeValue(Task[i], 'pPlanStart', 2, '');\n                var pPlanEnd = exports.getXMLNodeValue(Task[i], 'pPlanEnd', 2, '');\n                var pDuration = exports.getXMLNodeValue(Task[i], 'pDuration', 2, '');\n                var pLink = exports.getXMLNodeValue(Task[i], 'pLink', 2, '');\n                var pMile = exports.getXMLNodeValue(Task[i], 'pMile', 1, 0);\n                var pComp = exports.getXMLNodeValue(Task[i], 'pComp', 1, 0);\n                var pCost = exports.getXMLNodeValue(Task[i], 'pCost', 2, 0);\n                var pGroup = exports.getXMLNodeValue(Task[i], 'pGroup', 1, 0);\n                var pParent = exports.getXMLNodeValue(Task[i], 'pParent', 1, 0);\n                var pRes = exports.getXMLNodeValue(Task[i], 'pRes', 2, '');\n                var pOpen = exports.getXMLNodeValue(Task[i], 'pOpen', 1, 1);\n                var pDepend = exports.getXMLNodeValue(Task[i], 'pDepend', 2, '');\n                var pCaption = exports.getXMLNodeValue(Task[i], 'pCaption', 2, '');\n                var pNotes = exports.getXMLNodeValue(Task[i], 'pNotes', 2, '');\n                var pClass = exports.getXMLNodeValue(Task[i], 'pClass', 2, '');\n                if (typeof pClass == 'undefined') {\n                    if (pGroup > 0)\n                        pClass = 'ggroupblack';\n                    else if (pMile > 0)\n                        pClass = 'gmilestone';\n                    else\n                        pClass = 'gtaskblue';\n                }\n                // Finally add the task\n                pGanttVar.AddTaskItem(new task_1.TaskItem(pID, pName, pStart, pEnd, pClass, pLink, pMile, pRes, pComp, pGroup, pParent, pOpen, pDepend, pCaption, pNotes, pGanttVar, pCost, pPlanStart, pPlanEnd, pDuration));\n            }\n        }\n    }\n};\nexports.getXMLProject = function () {\n    var vProject = '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><project xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">';\n    for (var i = 0; i < this.vTaskList.length; i++) {\n        vProject += this.getXMLTask(i, true);\n    }\n    vProject += '</project>';\n    return vProject;\n};\nexports.getXMLTask = function (pID, pIdx) {\n    var i = 0;\n    var vIdx = -1;\n    var vTask = '';\n    var vOutFrmt = date_utils_1.parseDateFormatStr(this.getDateInputFormat() + ' HH:MI:SS');\n    if (pIdx === true)\n        vIdx = pID;\n    else {\n        for (i = 0; i < this.vTaskList.length; i++) {\n            if (this.vTaskList[i].getID() == pID) {\n                vIdx = i;\n                break;\n            }\n        }\n    }\n    if (vIdx >= 0 && vIdx < this.vTaskList.length) {\n        /* Simplest way to return case sensitive node names is to just build a string */\n        vTask = '<task>';\n        vTask += '<pID>' + this.vTaskList[vIdx].getID() + '</pID>';\n        vTask += '<pName>' + this.vTaskList[vIdx].getName() + '</pName>';\n        vTask += '<pStart>' + date_utils_1.formatDateStr(this.vTaskList[vIdx].getStart(), vOutFrmt, this.vLangs[this.vLang]) + '</pStart>';\n        vTask += '<pEnd>' + date_utils_1.formatDateStr(this.vTaskList[vIdx].getEnd(), vOutFrmt, this.vLangs[this.vLang]) + '</pEnd>';\n        vTask += '<pPlanStart>' + date_utils_1.formatDateStr(this.vTaskList[vIdx].getPlanStart(), vOutFrmt, this.vLangs[this.vLang]) + '</pPlanStart>';\n        vTask += '<pPlanEnd>' + date_utils_1.formatDateStr(this.vTaskList[vIdx].getPlanEnd(), vOutFrmt, this.vLangs[this.vLang]) + '</pPlanEnd>';\n        vTask += '<pDuration>' + this.vTaskList[vIdx].getDuration() + '</pDuration>';\n        vTask += '<pClass>' + this.vTaskList[vIdx].getClass() + '</pClass>';\n        vTask += '<pLink>' + this.vTaskList[vIdx].getLink() + '</pLink>';\n        vTask += '<pMile>' + this.vTaskList[vIdx].getMile() + '</pMile>';\n        if (this.vTaskList[vIdx].getResource() != '\\u00A0')\n            vTask += '<pRes>' + this.vTaskList[vIdx].getResource() + '</pRes>';\n        vTask += '<pComp>' + this.vTaskList[vIdx].getCompVal() + '</pComp>';\n        vTask += '<pCost>' + this.vTaskList[vIdx].getCost() + '</pCost>';\n        vTask += '<pGroup>' + this.vTaskList[vIdx].getGroup() + '</pGroup>';\n        vTask += '<pParent>' + this.vTaskList[vIdx].getParent() + '</pParent>';\n        vTask += '<pOpen>' + this.vTaskList[vIdx].getOpen() + '</pOpen>';\n        vTask += '<pDepend>';\n        var vDepList = this.vTaskList[vIdx].getDepend();\n        for (i = 0; i < vDepList.length; i++) {\n            if (i > 0)\n                vTask += ',';\n            if (vDepList[i] > 0)\n                vTask += vDepList[i] + this.vTaskList[vIdx].getDepType()[i];\n        }\n        vTask += '</pDepend>';\n        vTask += '<pCaption>' + this.vTaskList[vIdx].getCaption() + '</pCaption>';\n        var vTmpFrag = document.createDocumentFragment();\n        var vTmpDiv = draw_utils_1.newNode(vTmpFrag, 'div', null, null, this.vTaskList[vIdx].getNotes().innerHTML);\n        vTask += '<pNotes>' + vTmpDiv.innerHTML + '</pNotes>';\n        vTask += '</task>';\n    }\n    return vTask;\n};\n//# sourceMappingURL=xml.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ko = exports.hu = exports.cs = exports.ja = exports.tr = exports.id = exports.nl = exports.sv = exports.cn = exports.ru = exports.fr = exports.pt = exports.de = exports.es = exports.en = void 0;\nvar es = {\n    'january': 'Enero',\n    'february': 'Febrero',\n    'march': 'Marzo',\n    'april': 'Abril',\n    'maylong': 'Mayo',\n    'june': 'Junio',\n    'july': 'Julio',\n    'august': 'Agosto',\n    'september': 'Septiembre',\n    'october': 'Octubre',\n    'november': 'Noviembre',\n    'december': 'Diciembre',\n    'jan': 'Ene',\n    'feb': 'Feb',\n    'mar': 'Mar',\n    'apr': 'Abr',\n    'may': 'May',\n    'jun': 'Jun',\n    'jul': 'Jul',\n    'aug': 'Ago',\n    'sep': 'Sep',\n    'oct': 'Oct',\n    'nov': 'Nov',\n    'dec': 'Dic',\n    'sunday': 'Domingo',\n    'monday': 'Lunes',\n    'tuesday': 'Martes',\n    'wednesday': 'Miércoles',\n    'thursday': 'Jueves',\n    'friday': 'Viernes',\n    'saturday': 'Sábado',\n    'sun': '\tDom',\n    'mon': '\tLun',\n    'tue': '\tMar',\n    'wed': '\tMie',\n    'thu': '\tJue',\n    'fri': '\tVie',\n    'sat': '\tSab',\n    'res': 'Recurso',\n    'dur': 'Duración',\n    'comp': '% Compl.',\n    'completion': 'Completado',\n    'startdate': 'Inicio',\n    'planstartdate': 'Inicio Planificado',\n    'cost': 'Coste',\n    'enddate': 'Fin',\n    'planenddate': 'Fin Planificado',\n    'moreinfo': 'Más Información',\n    'nodata': 'No tasks found',\n    'notes': 'Notas',\n    'format': 'Formato',\n    'hour': 'Hora',\n    'day': 'Día',\n    'week': 'Semana',\n    'month': 'Mes',\n    'quarter': 'Trimestre',\n    'hours': 'Horas',\n    'days': 'Días',\n    'weeks': 'Semanas',\n    'months': 'Meses',\n    'quarters': 'Trimestres',\n    'hr': 'h',\n    'dy': 'Día',\n    'wk': 'Sem.',\n    'mth': 'Mes',\n    'qtr': 'Trim.',\n    'hrs': 'h',\n    'dys': 'Días',\n    'wks': 'Sem.',\n    'mths': 'Meses',\n    'qtrs': 'Trim.',\n    'tooltipLoading': 'Cargando...'\n};\nexports.es = es;\nvar en = {\n    'format': 'Format',\n    'hour': 'Hour',\n    'day': 'Day',\n    'week': 'Week',\n    'month': 'Month',\n    'quarter': 'Quarter',\n    'hours': 'Hours',\n    'days': 'Days',\n    'weeks': 'Weeks',\n    'months': 'Months',\n    'quarters': 'Quarters',\n    'hr': 'Hr',\n    'dy': 'Day',\n    'wk': 'Wk',\n    'mth': 'Mth',\n    'qtr': 'Qtr',\n    'hrs': 'Hrs',\n    'dys': 'Days',\n    'wks': 'Wks',\n    'mths': 'Mths',\n    'qtrs': 'Qtrs',\n    'res': 'Resource',\n    'dur': 'Duration',\n    'comp': '% Comp.',\n    'completion': 'Completion',\n    'startdate': 'Start Date',\n    'planstartdate': 'Plan Start Date',\n    'enddate': 'End Date',\n    'planenddate': 'Plan End Date',\n    'cost': 'Cost',\n    'moreinfo': 'More Information',\n    'nodata': 'No tasks found',\n    'notes': 'Notes',\n    'january': 'January',\n    'february': 'February',\n    'march': 'March',\n    'april': 'April',\n    'maylong': 'May',\n    'june': 'June',\n    'july': 'July',\n    'august': 'August',\n    'september': 'September',\n    'october': 'October',\n    'november': 'November',\n    'december': 'December',\n    'jan': 'Jan',\n    'feb': 'Feb',\n    'mar': 'Mar',\n    'apr': 'Apr',\n    'may': 'May',\n    'jun': 'Jun',\n    'jul': 'Jul',\n    'aug': 'Aug',\n    'sep': 'Sep',\n    'oct': 'Oct',\n    'nov': 'Nov',\n    'dec': 'Dec',\n    'sunday': 'Sunday',\n    'monday': 'Monday',\n    'tuesday': 'Tuesday',\n    'wednesday': 'Wednesday',\n    'thursday': 'Thursday',\n    'friday': 'Friday',\n    'saturday': 'Saturday',\n    'sun': 'Sun',\n    'mon': 'Mon',\n    'tue': 'Tue',\n    'wed': 'Wed',\n    'thu': 'Thu',\n    'fri': 'Fri',\n    'sat': 'Sat',\n    'tooltipLoading': 'Loading...'\n};\nexports.en = en;\nvar de = {\n    'format': 'Ansicht',\n    'hour': 'Stunde',\n    'day': 'Tag',\n    'week': 'Woche',\n    'month': 'Monat',\n    'quarter': 'Quartal',\n    'hours': 'Stunden',\n    'days': 'Tage',\n    'weeks': 'Wochen',\n    'months': 'Monate',\n    'quarters': 'Quartale',\n    'hr': 'h',\n    'dy': 'T',\n    'wk': 'W',\n    'mth': 'M',\n    'qtr': 'Q',\n    'hrs': 'Std',\n    'dys': 'Tage',\n    'wks': 'Wochen',\n    'mths': 'Monate',\n    'qtrs': 'Quartal',\n    'res': 'Resource',\n    'dur': 'Dauer',\n    'comp': '%Fertig',\n    'completion': 'Fertigstellung',\n    'startdate': 'Erste Buchu',\n    'planstartdate': 'Erste Buchu Plan',\n    'enddate': 'Letzte Buchung',\n    'planenddate': 'Plan Letzte Buchung',\n    'cost': 'Cost',\n    'moreinfo': 'Weitere Infos',\n    'nodata': 'No tasks found',\n    'notes': 'Anmerkung',\n    'january': 'Jänner',\n    'february': 'Februar',\n    'march': 'März',\n    'april': 'April',\n    'maylong': 'Mai',\n    'june': 'Juni',\n    'july': 'Juli',\n    'august': 'August',\n    'september': 'September',\n    'october': 'Oktober',\n    'november': 'November',\n    'december': 'Dezember',\n    'jan': 'Jan',\n    'feb': 'Feb',\n    'mar': 'Mar',\n    'apr': 'Apr',\n    'may': 'Mai',\n    'jun': 'Jun',\n    'jul': 'Jul',\n    'aug': 'Aug',\n    'sep': 'Sep',\n    'oct': 'Okt',\n    'nov': 'Nov',\n    'dec': 'Dez',\n    'sunday': 'Sonntag',\n    'monday': 'Montag',\n    'tuesday': 'Dienstag',\n    'wednesday': 'Mittwoch',\n    'thursday': 'Donnerstag',\n    'friday': 'Freitag',\n    'saturday': 'Samstag',\n    'sun': 'So',\n    'mon': 'Mo', 'tue': 'Di', 'wed': 'Mi', 'thu': 'Do', 'fri': 'Fr', 'sat': 'Sa'\n};\nexports.de = de;\nvar pt = {\n    'hours': 'Horas',\n    'days': 'Dias',\n    'weeks': 'Weeks',\n    'months': 'Months',\n    'quarters': 'Quarters',\n    'format': 'Formato',\n    'hour': 'Hora',\n    'day': 'Dia',\n    'week': 'Semana',\n    'month': 'Mês',\n    'quarter': 'Trimestre',\n    'hr': 'hr',\n    'dy': 'dia',\n    'wk': 'sem.',\n    'mth': 'mês',\n    'qtr': 'qtr',\n    'hrs': 'hrs',\n    'dys': 'dias',\n    'wks': 'sem.',\n    'mths': 'meses',\n    'qtrs': 'qtrs',\n    'completion': 'Terminado',\n    'comp': '% Completado',\n    'moreinfo': 'Mais informações',\n    'nodata': 'Sem atividades',\n    'notes': 'Notas',\n    'res': 'Responsável',\n    'dur': 'Duração',\n    'startdate': 'Data inicial',\n    'planstartdate': 'Plan Data inicial',\n    'enddate': 'Data final',\n    'planenddate': 'Plan Data final',\n    'cost': 'Custo',\n    'jan': 'Jan',\n    'feb': 'Fev',\n    'mar': 'Mar',\n    'apr': 'Abr',\n    'may': 'Mai',\n    'jun': 'Jun',\n    'jul': 'Jul',\n    'aug': 'Ago',\n    'sep': 'Set',\n    'oct': 'Out',\n    'nov': 'Nov',\n    'dec': 'Dez',\n    'january': 'Janeiro',\n    'february': 'Fevereiro',\n    'march': 'Março',\n    'april': 'Abril',\n    'maylong': 'Maio',\n    'june': 'Junho',\n    'july': 'Julho',\n    'august': 'Agosto',\n    'september': 'Setembro',\n    'october': 'Outubro',\n    'november': 'Novembro',\n    'december': 'Dezembro',\n    'sun': 'Dom',\n    'mon': 'Seg',\n    'tue': 'Ter',\n    'wed': 'Qua',\n    'thu': 'Qui',\n    'fri': 'Sex',\n    'sat': 'Sab'\n};\nexports.pt = pt;\nvar ru = {\n    'january': 'Январь',\n    'february': 'Февраль',\n    'march': 'Март',\n    'april': 'Апрель',\n    'maylong': 'Май',\n    'june': 'Июнь',\n    'july': 'Июль',\n    'august': 'Август', 'september': 'Сентябрь',\n    'october': 'Октябрь',\n    'november': 'Ноябрь',\n    'december': 'Декабрь',\n    'jan': 'Янв',\n    'feb': 'Фев',\n    'mar': 'Мар',\n    'apr': 'Апр',\n    'may': 'Май',\n    'jun': 'Июн',\n    'jul': 'Июл',\n    'aug': 'Авг',\n    'sep': 'Сен',\n    'oct': 'Окт',\n    'nov': 'Ноя',\n    'dec': 'Дек',\n    'sunday': 'Воскресенье',\n    'monday': 'Понедельник',\n    'tuesday': 'Вторник',\n    'wednesday': 'Среда',\n    'thursday': 'Четверг',\n    'friday': 'Пятница',\n    'saturday': 'Суббота',\n    'sun': '\tВс',\n    'mon': '\tПн',\n    'tue': '\tВт',\n    'wed': '\tСр',\n    'thu': '\tЧт',\n    'fri': '\tПт',\n    'sat': '\tСб',\n    'res': 'Ресурс',\n    'dur': 'Длительность',\n    'comp': '% выполнения',\n    'completion': 'Выполнено',\n    'startdate': 'Нач. дата',\n    'planstartdate': 'Plan Нач. дата',\n    'enddate': 'Кон. дата',\n    'planenddate': 'Plan Кон. дата',\n    'cost': 'Cost',\n    'moreinfo': 'Детали',\n    'nodata': 'No tasks found',\n    'notes': 'Заметки',\n    'format': 'Формат',\n    'hour': 'Час',\n    'day': 'День',\n    'week': 'Неделя',\n    'month': 'Месяц',\n    'quarter': 'Кварт',\n    'hours': 'Часов',\n    'days': 'Дней',\n    'weeks': 'Недель',\n    'months': 'Месяцев',\n    'quarters': 'Кварталов',\n    'hr': 'ч.',\n    'dy': 'дн.',\n    'wk': 'нед.',\n    'mth': 'мес.',\n    'qtr': 'кв.',\n    'hrs': 'ч.',\n    'dys': 'дн.',\n    'wks': 'нед.',\n    'mths': 'мес.',\n    'qtrs': 'кв.',\n    'tooltipLoading': 'Загрузка...'\n};\nexports.ru = ru;\n/**\n * Mois : http://bdl.oqlf.gouv.qc.ca/bdl/gabarit_bdl.asp?id=3619\n   Jours : http://bdl.oqlf.gouv.qc.ca/bdl/gabarit_bdl.asp?id=3617\n */\nvar fr = {\n    'january': 'Janvier',\n    'february': 'Février',\n    'march': 'Mars',\n    'april': 'Avril',\n    'maylong': 'Mai',\n    'june': 'Juin',\n    'july': 'Juillet',\n    'august': 'Août',\n    'september': 'Septembre',\n    'october': 'Octobre',\n    'november': 'Novembre',\n    'december': 'Décembre',\n    'jan': 'Janv',\n    'feb': 'Févr',\n    'mar': 'Mars',\n    'apr': 'Avr',\n    'may': 'Mai',\n    'jun': 'Juin',\n    'jul': 'Juil',\n    'aug': 'Août',\n    'sep': 'Sept',\n    'oct': 'Oct',\n    'nov': 'Nov',\n    'dec': 'Déc',\n    'sunday': 'Dimanche',\n    'monday': 'Lundi',\n    'tuesday': 'Mardi',\n    'wednesday': 'Mercredi',\n    'thursday': 'Jeudi',\n    'friday': 'Vendredi',\n    'saturday': 'Samedi',\n    'sun': 'Dim',\n    'mon': 'Lun',\n    'tue': 'Mar',\n    'wed': 'Mer',\n    'thu': 'Jeu',\n    'fri': 'Ven',\n    'sat': 'Sam',\n    'res': 'Ressource',\n    'dur': 'Durée',\n    'comp': '% Term.',\n    'completion': 'Terminé',\n    'startdate': 'Début',\n    'planstartdate': 'Plan Début',\n    'enddate': 'Fin',\n    'planenddate': 'Plan Fin',\n    'cost': 'Cost',\n    'moreinfo': \"Plus d'informations\",\n    'nodata': 'No tasks found',\n    'notes': 'Notes',\n    'format': 'Format',\n    'hour': 'Heure',\n    'day': 'Jour',\n    'week': 'Semaine',\n    'month': 'Mois',\n    'quarter': 'Trimestre',\n    'hours': 'Heures',\n    'days': 'Jours',\n    'weeks': 'Semaines',\n    'months': 'Mois',\n    'quarters': 'Trimestres',\n    'hr': 'h',\n    'dy': 'j',\n    'wk': 'sem',\n    'mth': 'mois',\n    'qtr': 'tri',\n    'hrs': 'h',\n    'dys': 'j',\n    'wks': 'sem',\n    'mths': 'mois',\n    'qtrs': 'tri'\n};\nexports.fr = fr;\nvar cn = {\n    'january': '一月',\n    'february': '二月',\n    'march': '三月',\n    'april': '四月',\n    'maylong': '五月',\n    'june': '六月',\n    'july': '七月',\n    'august': '八月',\n    'september': '九月',\n    'october': '十月',\n    'november': '十一月',\n    'december': '十二月',\n    'jan': '一月',\n    'feb': '二月',\n    'mar': '三月',\n    'apr': '四月',\n    'may': '五月',\n    'jun': '六月',\n    'jul': '七月',\n    'aug': '八月',\n    'sep': '九月',\n    'oct': '十月',\n    'nov': '十一月',\n    'dec': '十二月',\n    'sunday': '星期日',\n    'monday': '星期一',\n    'tuesday': '星期二',\n    'wednesday': '星期三',\n    'thursday': '星期四',\n    'friday': '星期五',\n    'saturday': '星期六',\n    'sun': '星期日',\n    'mon': '星期一',\n    'tue': '星期二',\n    'wed': '星期三',\n    'thu': '星期四',\n    'fri': '星期五',\n    'sat': '星期六',\n    'res': '資源',\n    'dur': '時程',\n    'comp': '達成率',\n    'completion': '達成',\n    'startdate': '起始日期',\n    'planstartdate': '計劃起始日期',\n    'enddate': '截止日期',\n    'planenddate': '計劃截止日期',\n    'cost': '成本',\n    'moreinfo': \"更多資訊\",\n    'nodata': 'No tasks found',\n    'notes': '備註',\n    'format': '格式',\n    'hour': '時',\n    'day': '日',\n    'week': '星期',\n    'month': '月',\n    'quarter': '季',\n    'hours': '小時',\n    'days': '天',\n    'weeks': '週',\n    'months': '月',\n    'quarters': '季',\n    'hr': '小時',\n    'dy': '天',\n    'wk': '週',\n    'mth': '月',\n    'qtr': '季',\n    'hrs': '小時',\n    'dys': '天',\n    'wks': '週',\n    'mths': '月',\n    'qtrs': '季'\n};\nexports.cn = cn;\nvar sv = {\n    'format': 'Filter',\n    'hour': 'Timme',\n    'day': 'Dag',\n    'week': 'Vecka',\n    'month': 'Månad',\n    'quarter': 'Kvartal',\n    'hours': 'Timmar',\n    'days': 'Dagar',\n    'weeks': 'Veckor',\n    'months': 'Månader',\n    'quarters': 'Kvartal',\n    'hr': 'Timme',\n    'dy': 'Dag',\n    'wk': 'Vecka',\n    'mth': 'Månad',\n    'qtr': 'Q',\n    'hrs': 'Timmar',\n    'dys': 'Dagar',\n    'wks': 'Veckor',\n    'mths': 'Månader',\n    'qtrs': 'Q',\n    'res': 'Resurs',\n    'dur': 'Tidsåtgång',\n    'comp': '% klart',\n    'completion': 'Klart',\n    'startdate': 'Startdatum',\n    'planstartdate': 'Planerad startdatum',\n    'enddate': 'Slutdatum',\n    'planenddate': 'Planerad slutdatum',\n    'cost': 'Kostnad',\n    'moreinfo': 'Mer Information',\n    'nodata': 'No tasks found',\n    'notes': 'Notes',\n    'january': 'januari',\n    'february': 'februari',\n    'march': 'mars',\n    'april': 'april',\n    'maylong': 'maj',\n    'june': 'juni',\n    'july': 'juli',\n    'august': 'augusti',\n    'september': 'september',\n    'october': 'oktober',\n    'november': 'november',\n    'december': 'december',\n    'jan': 'jan',\n    'feb': 'feb',\n    'mar': 'mar',\n    'apr': 'apr',\n    'may': 'maj',\n    'jun': 'jun',\n    'jul': 'jul',\n    'aug': 'aug',\n    'sep': 'sep',\n    'oct': 'okt',\n    'nov': 'nov',\n    'dec': 'dec',\n    'sunday': 'söndag',\n    'monday': 'måndag',\n    'tuesday': 'tisdag',\n    'wednesday': 'onsdag',\n    'thursday': 'torsdag',\n    'friday': 'fredag',\n    'saturday': 'lördag',\n    'sun': 'sön',\n    'mon': 'mån',\n    'tue': 'tis',\n    'wed': 'ons',\n    'thu': 'tor',\n    'fri': 'fre',\n    'sat': 'lör'\n};\nexports.sv = sv;\nvar nl = {\n    'format': 'Format',\n    'hour': 'Uur',\n    'day': 'Dag',\n    'week': 'Week',\n    'month': 'Maand',\n    'quarter': 'Kwartaal',\n    'hours': 'Uren',\n    'days': 'Dagen',\n    'weeks': 'Weken',\n    'months': 'Maanden',\n    'quarters': 'Kwartalen',\n    'hr': 'uur',\n    'dy': 'dag',\n    'wk': 'wk',\n    'mth': 'mnd',\n    'qtr': 'kw',\n    'hrs': 'uren',\n    'dys': 'dagen',\n    'wks': 'weken',\n    'mths': 'maanden',\n    'qtrs': 'kwartalen',\n    'res': 'Resource',\n    'dur': 'Doorlooptijd',\n    'comp': '% gereed',\n    'completion': 'Gereed',\n    'startdate': 'Startdatum',\n    'planstartdate': 'Geplande startdatum',\n    'enddate': 'Einddatum',\n    'planenddate': 'Geplande einddatum',\n    'cost': 'Kosten',\n    'moreinfo': 'Meer informatie',\n    'nodata': 'No tasks found',\n    'notes': 'Notities',\n    'january': 'januari',\n    'february': 'februari',\n    'march': 'maart',\n    'april': 'april',\n    'maylong': 'mei',\n    'june': 'juni',\n    'july': 'juli',\n    'august': 'augustus',\n    'september': 'september',\n    'october': 'oktober',\n    'november': 'november',\n    'december': 'december',\n    'jan': 'jan',\n    'feb': 'feb',\n    'mar': 'mrt',\n    'apr': 'apr',\n    'may': 'mei',\n    'jun': 'jun',\n    'jul': 'jul',\n    'aug': 'aug',\n    'sep': 'sep',\n    'oct': 'okt',\n    'nov': 'nov',\n    'dec': 'dec',\n    'sunday': 'zondag',\n    'monday': 'maandag',\n    'tuesday': 'dinsdag',\n    'wednesday': 'woensdag',\n    'thursday': 'donderdag',\n    'friday': 'vrijdag',\n    'saturday': 'zaterdag',\n    'sun': 'zo',\n    'mon': 'ma',\n    'tue': 'di',\n    'wed': 'wo',\n    'thu': 'do',\n    'fri': 'vr',\n    'sat': 'za'\n};\nexports.nl = nl;\nvar id = {\n    'format': 'Format',\n    'hour': 'Jam',\n    'day': 'Hari',\n    'week': 'Minggu',\n    'month': 'Bulan',\n    'quarter': 'Kuartal',\n    'hours': 'Jam',\n    'days': 'Hari',\n    'weeks': 'Minggu',\n    'months': 'Bulan',\n    'quarters': 'Kuartal',\n    'hr': 'Jam',\n    'dy': 'Hari',\n    'wk': 'Min',\n    'mth': 'Bln',\n    'qtr': 'Krtl',\n    'hrs': 'Jam',\n    'dys': 'Hari',\n    'wks': 'Min',\n    'mths': 'Bln',\n    'qtrs': 'Krtl',\n    'res': 'Sumber Daya',\n    'dur': 'Durasi',\n    'comp': '% Penyelesaian',\n    'completion': 'Penyelesaian',\n    'startdate': 'Tanggal Mulai',\n    'planstartdate': 'Perencanaan Tanggal Mulai',\n    'enddate': 'Tanggal Akhir',\n    'planenddate': 'Perencanaan Tanggal Akhir',\n    'cost': 'Biaya',\n    'moreinfo': 'Informasi Lebih Lanjut',\n    'nodata': 'No tasks found',\n    'notes': 'Catatan',\n    'january': 'Januari',\n    'february': 'Februari',\n    'march': 'Maret',\n    'april': 'April',\n    'maylong': 'Mei',\n    'june': 'Juni',\n    'july': 'Juli',\n    'august': 'Agustus',\n    'september': 'September',\n    'october': 'Oktober',\n    'november': 'November',\n    'december': 'Desember',\n    'jan': 'Jan',\n    'feb': 'Feb',\n    'mar': 'Mar',\n    'apr': 'Apr',\n    'may': 'Mei',\n    'jun': 'Jun',\n    'jul': 'Jul',\n    'aug': 'Agu',\n    'sep': 'Sep',\n    'oct': 'Okt',\n    'nov': 'Nov',\n    'dec': 'Des',\n    'sunday': 'Minggu',\n    'monday': 'Senin',\n    'tuesday': 'Selasa',\n    'wednesday': 'Rabu',\n    'thursday': 'Kamis',\n    'friday': 'Jumat',\n    'saturday': 'Sabtu',\n    'sun': 'Min',\n    'mon': 'Sen',\n    'tue': 'Sel',\n    'wed': 'Rab',\n    'thu': 'Kam',\n    'fri': 'Jum',\n    'sat': 'Sab'\n};\nexports.id = id;\nvar tr = {\n    'format': 'Biçim',\n    'hour': 'Saat',\n    'day': 'Gün',\n    'week': 'Hafta',\n    'month': 'Ay',\n    'quarter': 'Çeyrek Yıl',\n    'hours': 'Saat',\n    'days': 'Gün',\n    'weeks': 'Hafta',\n    'months': 'Ay',\n    'quarters': 'Çeyrek Yıl',\n    'hr': 'Saat',\n    'dy': 'Gün',\n    'wk': 'Hft',\n    'mth': 'Ay',\n    'qtr': 'Çyrk',\n    'hrs': 'Saat',\n    'dys': 'Gün',\n    'wks': 'Hft',\n    'mths': 'Ay',\n    'qtrs': 'Çyrk',\n    'res': 'Kaynak',\n    'dur': 'Süre',\n    'comp': '% Tamamlanma.',\n    'completion': 'Tamamlanma',\n    'startdate': 'Başlangıç Tarihi',\n    'planstartdate': 'Plan Başlama Tarihi',\n    'enddate': 'Bitiş Tarihi',\n    'planenddate': 'Plan Bitiş Tarihi',\n    'cost': 'Tutar',\n    'moreinfo': 'Daha Fazla Bilgi',\n    'nodata': 'No tasks found',\n    'notes': 'Notlar',\n    'january': 'Ocak',\n    'february': 'Şubat',\n    'march': 'Mart',\n    'april': 'Nisan',\n    'maylong': 'Mayıs',\n    'june': 'Haziran',\n    'july': 'Temmuz',\n    'august': 'Ağustos',\n    'september': 'Eylül',\n    'october': 'Ekim',\n    'november': 'Kasım',\n    'december': 'Aralık',\n    'jan': 'Oca',\n    'feb': 'Şub',\n    'mar': 'Mar',\n    'apr': 'Nis',\n    'may': 'May',\n    'jun': 'Haz',\n    'jul': 'Tem',\n    'aug': 'Ağu',\n    'sep': 'Eyl',\n    'oct': 'Eki',\n    'nov': 'Kas',\n    'dec': 'Ara',\n    'sunday': 'Pazar',\n    'monday': 'Pazartesi',\n    'tuesday': 'Salı',\n    'wednesday': 'Çarşamba',\n    'thursday': 'Perşembe',\n    'friday': 'Cuma',\n    'saturday': 'Cumartesi',\n    'sun': 'Paz',\n    'mon': 'Pzt',\n    'tue': 'Sal',\n    'wed': 'Çrş',\n    'thu': 'Prş',\n    'fri': 'Cum',\n    'sat': 'Cmt'\n};\nexports.tr = tr;\nvar ja = {\n    'format': 'タイムライン表示',\n    'hour': '時',\n    'day': '日',\n    'week': '週',\n    'month': '月',\n    'quarter': '四半期',\n    'hours': '時間',\n    'days': '日間',\n    'weeks': '週間',\n    'months': '月間',\n    'quarters': '四半期',\n    'hr': '時',\n    'dy': '日',\n    'wk': '週',\n    'mth': '月',\n    'qtr': '四',\n    'hrs': '時間',\n    'dys': '日間',\n    'wks': '週間',\n    'mths': '月間',\n    'qtrs': '四半期',\n    'res': 'リソース',\n    'dur': '期間',\n    'comp': '進捗率',\n    'completion': '進捗率',\n    'startdate': '開始日',\n    'planstartdate': '予定開始日',\n    'enddate': '期日',\n    'planenddate': '予定期日',\n    'cost': 'コスト',\n    'moreinfo': '詳細',\n    'nodata': 'No tasks found',\n    'notes': 'ノート',\n    'january': '1月',\n    'february': '2月',\n    'march': '3月',\n    'april': '4月',\n    'maylong': '5月',\n    'june': '6月',\n    'july': '7月',\n    'august': '8月',\n    'september': '9月',\n    'october': '10月',\n    'november': '11月',\n    'december': '12月',\n    'jan': '1月',\n    'feb': '2月',\n    'mar': '3月',\n    'apr': '4月',\n    'may': '5月',\n    'jun': '6月',\n    'jul': '7月',\n    'aug': '8月',\n    'sep': '9月',\n    'oct': '10月',\n    'nov': '11月',\n    'dec': '12月',\n    'sunday': '日曜日',\n    'monday': '月曜日',\n    'tuesday': '火曜日',\n    'wednesday': '水曜日',\n    'thursday': '木曜日',\n    'friday': '金曜日',\n    'saturday': '土曜日',\n    'sun': '日',\n    'mon': '月',\n    'tue': '火',\n    'wed': '水',\n    'thu': '木',\n    'fri': '金',\n    'sat': '土',\n    'tooltipLoading': 'ローディング中...'\n};\nexports.ja = ja;\nvar cs = {\n    'format': 'Zobrazení',\n    'hour': 'Hodina',\n    'day': 'Den',\n    'week': 'Týden',\n    'month': 'Měsíc',\n    'quarter': 'Kvartál',\n    'hours': 'Hodiny',\n    'days': 'Dni',\n    'weeks': 'Týdny',\n    'months': 'Měsíce',\n    'quarters': 'Kvartály',\n    'hr': 'Ho',\n    'dy': 'Den',\n    'wk': 'Tyd',\n    'mth': 'Měs',\n    'qtr': 'Kvar',\n    'hrs': 'Ho',\n    'dys': 'Dni',\n    'wks': 'Tyd',\n    'mths': 'Měs',\n    'qtrs': 'Kvar',\n    'res': 'Přiřazeno',\n    'dur': 'Trvání',\n    'comp': '% Hotovo',\n    'completion': 'Hotovo',\n    'startdate': 'Start',\n    'planstartdate': 'Plánovaný start',\n    'enddate': 'Konec',\n    'planenddate': 'Plánovaný konec',\n    'cost': 'Náklady',\n    'moreinfo': 'Více informací',\n    'nodata': 'No tasks found',\n    'notes': 'Poznámky',\n    'january': 'Leden',\n    'february': 'Únor',\n    'march': 'Březen',\n    'april': 'Duben',\n    'maylong': 'Květen',\n    'june': 'Červen',\n    'july': 'Červenec',\n    'august': 'Srpen',\n    'september': 'Září',\n    'october': 'Říjen',\n    'november': 'Listopad',\n    'december': 'Prosinec',\n    'jan': 'Led',\n    'feb': 'Úno',\n    'mar': 'Bře',\n    'apr': 'Dub',\n    'may': 'Kvě',\n    'jun': 'Čer',\n    'jul': 'Čvc',\n    'aug': 'Srp',\n    'sep': 'Zář',\n    'oct': 'Říj',\n    'nov': 'Lis',\n    'dec': 'Pro',\n    'sunday': 'Neděle',\n    'monday': 'Pondělí',\n    'tuesday': 'Úterý',\n    'wednesday': 'Středa',\n    'thursday': 'Čtvrtek',\n    'friday': 'Pátek',\n    'saturday': 'Sobota',\n    'sun': 'Ne',\n    'mon': 'Po',\n    'tue': 'Út',\n    'wed': 'St',\n    'thu': 'Čt',\n    'fri': 'Pa',\n    'sat': 'So',\n    'tooltipLoading': 'Nahrávám...'\n};\nexports.cs = cs;\nvar hu = {\n    'format': 'Formátum',\n    'hour': 'Óra',\n    'day': 'Nap',\n    'week': 'Hét',\n    'month': 'Hónap',\n    'quarter': 'Negyedév ',\n    'hours': 'Órák',\n    'days': 'Nap',\n    'weeks': 'Hét',\n    'months': 'Hónap',\n    'quarters': 'Negyedév',\n    'hr': 'Ó',\n    'dy': 'Nap',\n    'wk': 'Hét',\n    'mth': 'Hó',\n    'qtr': 'NÉ',\n    'hrs': 'Óra',\n    'dys': 'Nap',\n    'wks': 'Hét',\n    'mths': 'Hó',\n    'qtrs': 'NÉ',\n    'res': 'Erőforrás',\n    'dur': 'Időtartam',\n    'comp': '% Kész',\n    'completion': 'Elkészült',\n    'startdate': 'Kezdés',\n    'planstartdate': 'Tervezett kezdés',\n    'enddate': 'Befejezés',\n    'planenddate': 'Tervezett befejezés',\n    'cost': 'Költség',\n    'moreinfo': 'További információ',\n    'nodata': 'No tasks found',\n    'notes': 'Jegyzetek',\n    'january': 'Január',\n    'february': 'Február',\n    'march': 'Március',\n    'april': 'Április',\n    'maylong': 'Május',\n    'june': 'Június',\n    'july': 'Július',\n    'august': 'Augusztus',\n    'september': 'Szeptember',\n    'october': 'Október',\n    'november': 'November',\n    'december': 'December',\n    'jan': 'Jan',\n    'feb': 'Feb',\n    'mar': 'Már',\n    'apr': 'Ápr',\n    'may': 'Máj',\n    'jun': 'Jún',\n    'jul': 'Júl',\n    'aug': 'Aug',\n    'sep': 'Szep',\n    'oct': 'Okt',\n    'nov': 'Nov',\n    'dec': 'Dec',\n    'sunday': 'Vasárnap',\n    'monday': 'Hétfő',\n    'tuesday': 'Kedd',\n    'wednesday': 'Szerda',\n    'thursday': 'Csütörtök',\n    'friday': 'Péntek',\n    'saturday': 'Szombat',\n    'sun': 'Vas',\n    'mon': 'Hé',\n    'tue': 'Ke',\n    'wed': 'Sze',\n    'thu': 'Csü',\n    'fri': 'Pén',\n    'sat': 'Szo',\n    'tooltipLoading': 'Belöltés...'\n};\nexports.hu = hu;\nvar ko = {\n    'format': '구분',\n    'hour': '시',\n    'day': '일',\n    'week': '주',\n    'month': '월',\n    'quarter': '분기',\n    'hours': '시',\n    'days': '일',\n    'weeks': '주',\n    'months': '월',\n    'quarters': '분기',\n    'hr': '시',\n    'dy': '일',\n    'wk': '주',\n    'mth': '월',\n    'qtr': '분기',\n    'hrs': '시',\n    'dys': '일',\n    'wks': '주',\n    'mths': '월',\n    'qtrs': '분기',\n    'res': '이름',\n    'dur': '기간',\n    'comp': '% ',\n    'completion': '완료',\n    'startdate': '시작일자',\n    'planstartdate': '계획 시작일자',\n    'enddate': '종료일자',\n    'planenddate': '계획 종료일자',\n    'cost': '비용',\n    'moreinfo': '더 많은 정보',\n    'nodata': 'No tasks found',\n    'notes': '비고',\n    'january': '1월',\n    'february': '2월',\n    'march': '3월',\n    'april': '4월',\n    'maylong': '5월',\n    'june': '6월',\n    'july': '7월',\n    'august': '8월',\n    'september': '9월',\n    'october': '10월',\n    'november': '11월',\n    'december': '12월',\n    'jan': '1',\n    'feb': '2',\n    'mar': '3',\n    'apr': '4',\n    'may': '5',\n    'jun': '6',\n    'jul': '7',\n    'aug': '8',\n    'sep': '9',\n    'oct': '10',\n    'nov': '11',\n    'dec': '12',\n    'sunday': '일요일',\n    'monday': '월요일',\n    'tuesday': '화요일',\n    'wednesday': '수요일',\n    'thursday': '목요일',\n    'friday': '금요일',\n    'saturday': '토요일',\n    'sun': '일',\n    'mon': '월',\n    'tue': '화',\n    'wed': '수',\n    'thu': '목',\n    'fri': '금',\n    'sat': '토',\n    'tooltipLoading': '로딩중...'\n};\nexports.ko = ko;\n//# sourceMappingURL=lang.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.addJSONTask = exports.parseJSONString = exports.parseJSON = void 0;\nvar task_1 = require(\"./task\");\nvar general_utils_1 = require(\"./utils/general_utils\");\n/**\n *\n * @param pFile\n * @param pGanttlet\n */\nexports.parseJSON = function (pFile, pGanttVar, vDebug, redrawAfter) {\n    if (vDebug === void 0) { vDebug = false; }\n    if (redrawAfter === void 0) { redrawAfter = true; }\n    return __awaiter(this, void 0, void 0, function () {\n        var jsonObj, bd, ad;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, general_utils_1.makeRequest(pFile, true, true)];\n                case 1:\n                    jsonObj = _a.sent();\n                    if (vDebug) {\n                        bd = new Date();\n                        console.info('before jsonparse', bd);\n                    }\n                    exports.addJSONTask(pGanttVar, jsonObj);\n                    if (this.vDebug) {\n                        ad = new Date();\n                        console.info('after addJSONTask', ad, (ad.getTime() - bd.getTime()));\n                    }\n                    if (redrawAfter) {\n                        pGanttVar.Draw();\n                    }\n                    return [2 /*return*/, jsonObj];\n            }\n        });\n    });\n};\nexports.parseJSONString = function (pStr, pGanttVar) {\n    exports.addJSONTask(pGanttVar, JSON.parse(pStr));\n};\nexports.addJSONTask = function (pGanttVar, pJsonObj) {\n    for (var index = 0; index < pJsonObj.length; index++) {\n        var id = void 0;\n        var name_1 = void 0;\n        var start = void 0;\n        var end = void 0;\n        var planstart = void 0;\n        var planend = void 0;\n        var itemClass = void 0;\n        var link = '';\n        var milestone = 0;\n        var resourceName = '';\n        var completion = void 0;\n        var group = 0;\n        var parent_1 = void 0;\n        var open_1 = void 0;\n        var dependsOn = '';\n        var caption = '';\n        var notes = '';\n        var cost = void 0;\n        var duration = '';\n        var bartext = '';\n        var additionalObject = {};\n        for (var prop in pJsonObj[index]) {\n            var property = prop;\n            var value = pJsonObj[index][property];\n            switch (property.toLowerCase()) {\n                case 'pid':\n                case 'id':\n                    id = value;\n                    break;\n                case 'pname':\n                case 'name':\n                    name_1 = value;\n                    break;\n                case 'pstart':\n                case 'start':\n                    start = value;\n                    break;\n                case 'pend':\n                case 'end':\n                    end = value;\n                    break;\n                case 'pplanstart':\n                case 'planstart':\n                    planstart = value;\n                    break;\n                case 'pplanend':\n                case 'planend':\n                    planend = value;\n                    break;\n                case 'pclass':\n                case 'class':\n                    itemClass = value;\n                    break;\n                case 'plink':\n                case 'link':\n                    link = value;\n                    break;\n                case 'pmile':\n                case 'mile':\n                    milestone = value;\n                    break;\n                case 'pres':\n                case 'res':\n                    resourceName = value;\n                    break;\n                case 'pcomp':\n                case 'comp':\n                    completion = value;\n                    break;\n                case 'pgroup':\n                case 'group':\n                    group = value;\n                    break;\n                case 'pparent':\n                case 'parent':\n                    parent_1 = value;\n                    break;\n                case 'popen':\n                case 'open':\n                    open_1 = value;\n                    break;\n                case 'pdepend':\n                case 'depend':\n                    dependsOn = value;\n                    break;\n                case 'pcaption':\n                case 'caption':\n                    caption = value;\n                    break;\n                case 'pnotes':\n                case 'notes':\n                    notes = value;\n                    break;\n                case 'pcost':\n                case 'cost':\n                    cost = value;\n                    break;\n                case 'duration':\n                case 'pduration':\n                    duration = value;\n                    break;\n                case 'bartext':\n                case 'pbartext':\n                    bartext = value;\n                    break;\n                default:\n                    additionalObject[property.toLowerCase()] = value;\n            }\n        }\n        //if (id != undefined && !isNaN(parseInt(id)) && isFinite(id) && name && start && end && itemClass && completion != undefined && !isNaN(parseFloat(completion)) && isFinite(completion) && !isNaN(parseInt(parent)) && isFinite(parent)) {\n        pGanttVar.AddTaskItem(new task_1.TaskItem(id, name_1, start, end, itemClass, link, milestone, resourceName, completion, group, parent_1, open_1, dependsOn, caption, notes, pGanttVar, cost, planstart, planend, duration, bartext, additionalObject));\n        //}\n    }\n};\n//# sourceMappingURL=json.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.draw_task_headings = exports.draw_bottom = exports.draw_header = exports.COLUMN_ORDER = void 0;\nvar date_utils_1 = require(\"./utils/date_utils\");\nvar task_1 = require(\"./task\");\nvar events_1 = require(\"./events\");\nvar draw_utils_1 = require(\"./utils/draw_utils\");\nexports.COLUMN_ORDER = [\n    'vShowRes',\n    'vShowDur',\n    'vShowComp',\n    'vShowStartDate',\n    'vShowEndDate',\n    'vShowPlanStartDate',\n    'vShowPlanEndDate',\n    'vShowCost',\n    'vAdditionalHeaders',\n    'vShowAddEntries'\n];\nvar COLUMNS_TYPES = {\n    'vShowRes': 'res',\n    'vShowDur': 'dur',\n    'vShowComp': 'comp',\n    'vShowStartDate': 'startdate',\n    'vShowEndDate': 'enddate',\n    'vShowPlanStartDate': 'planstartdate',\n    'vShowPlanEndDate': 'planenddate',\n    'vShowCost': 'cost',\n    'vShowAddEntries': 'addentries'\n};\nexports.draw_header = function (column, i, vTmpRow, vTaskList, vEditable, vEventsChange, vEvents, vDateTaskTableDisplayFormat, vAdditionalHeaders, vFormat, vLangs, vLang, vResources, Draw) {\n    var vTmpCell, vTmpDiv;\n    if ('vShowRes' === column) {\n        vTmpCell = draw_utils_1.newNode(vTmpRow, 'td', null, 'gres');\n        var text = draw_utils_1.makeInput(vTaskList[i].getResource(), vEditable, 'resource', vTaskList[i].getResource(), vResources);\n        vTmpDiv = draw_utils_1.newNode(vTmpCell, 'div', null, null, text);\n        var callback = function (task, e) { return task.setResource(e.target.value); };\n        events_1.addListenerInputCell(vTmpCell, vEventsChange, callback, vTaskList, i, 'res', Draw, 'change');\n        events_1.addListenerClickCell(vTmpCell, vEvents, vTaskList[i], 'res');\n    }\n    if ('vShowDur' === column) {\n        vTmpCell = draw_utils_1.newNode(vTmpRow, 'td', null, 'gdur');\n        var text = draw_utils_1.makeInput(vTaskList[i].getDuration(vFormat, vLangs[vLang]), vEditable, 'text', vTaskList[i].getDuration());\n        vTmpDiv = draw_utils_1.newNode(vTmpCell, 'div', null, null, text);\n        var callback = function (task, e) { return task.setDuration(e.target.value); };\n        events_1.addListenerInputCell(vTmpCell, vEventsChange, callback, vTaskList, i, 'dur', Draw);\n        events_1.addListenerClickCell(vTmpCell, vEvents, vTaskList[i], 'dur');\n    }\n    if ('vShowComp' === column) {\n        vTmpCell = draw_utils_1.newNode(vTmpRow, 'td', null, 'gcomp');\n        var text = draw_utils_1.makeInput(vTaskList[i].getCompStr(), vEditable, 'percentage', vTaskList[i].getCompVal());\n        vTmpDiv = draw_utils_1.newNode(vTmpCell, 'div', null, null, text);\n        var callback = function (task, e) { task.setComp(e.target.value); task.setCompVal(e.target.value); };\n        events_1.addListenerInputCell(vTmpCell, vEventsChange, callback, vTaskList, i, 'comp', Draw);\n        events_1.addListenerClickCell(vTmpCell, vEvents, vTaskList[i], 'comp');\n    }\n    if ('vShowStartDate' === column) {\n        vTmpCell = draw_utils_1.newNode(vTmpRow, 'td', null, 'gstartdate');\n        var v = date_utils_1.formatDateStr(vTaskList[i].getStartVar(), vDateTaskTableDisplayFormat, vLangs[vLang]);\n        var text = draw_utils_1.makeInput(v, vEditable, 'date', vTaskList[i].getStartVar());\n        vTmpDiv = draw_utils_1.newNode(vTmpCell, 'div', null, null, text);\n        var callback = function (task, e) { return task.setStart(e.target.value); };\n        events_1.addListenerInputCell(vTmpCell, vEventsChange, callback, vTaskList, i, 'start', Draw);\n        events_1.addListenerClickCell(vTmpCell, vEvents, vTaskList[i], 'start');\n    }\n    if ('vShowEndDate' === column) {\n        vTmpCell = draw_utils_1.newNode(vTmpRow, 'td', null, 'genddate');\n        var v = date_utils_1.formatDateStr(vTaskList[i].getEndVar(), vDateTaskTableDisplayFormat, vLangs[vLang]);\n        var text = draw_utils_1.makeInput(v, vEditable, 'date', vTaskList[i].getEndVar());\n        vTmpDiv = draw_utils_1.newNode(vTmpCell, 'div', null, null, text);\n        var callback = function (task, e) { return task.setEnd(e.target.value); };\n        events_1.addListenerInputCell(vTmpCell, vEventsChange, callback, vTaskList, i, 'end', Draw);\n        events_1.addListenerClickCell(vTmpCell, vEvents, vTaskList[i], 'end');\n    }\n    if ('vShowPlanStartDate' === column) {\n        vTmpCell = draw_utils_1.newNode(vTmpRow, 'td', null, 'gplanstartdate');\n        var v = vTaskList[i].getPlanStart() ? date_utils_1.formatDateStr(vTaskList[i].getPlanStart(), vDateTaskTableDisplayFormat, vLangs[vLang]) : '';\n        var text = draw_utils_1.makeInput(v, vEditable, 'date', vTaskList[i].getPlanStart());\n        vTmpDiv = draw_utils_1.newNode(vTmpCell, 'div', null, null, text);\n        var callback = function (task, e) { return task.setPlanStart(e.target.value); };\n        events_1.addListenerInputCell(vTmpCell, vEventsChange, callback, vTaskList, i, 'planstart', Draw);\n        events_1.addListenerClickCell(vTmpCell, vEvents, vTaskList[i], 'planstart');\n    }\n    if ('vShowPlanEndDate' === column) {\n        vTmpCell = draw_utils_1.newNode(vTmpRow, 'td', null, 'gplanenddate');\n        var v = vTaskList[i].getPlanEnd() ? date_utils_1.formatDateStr(vTaskList[i].getPlanEnd(), vDateTaskTableDisplayFormat, vLangs[vLang]) : '';\n        var text = draw_utils_1.makeInput(v, vEditable, 'date', vTaskList[i].getPlanEnd());\n        vTmpDiv = draw_utils_1.newNode(vTmpCell, 'div', null, null, text);\n        var callback = function (task, e) { return task.setPlanEnd(e.target.value); };\n        events_1.addListenerInputCell(vTmpCell, vEventsChange, callback, vTaskList, i, 'planend', Draw);\n        events_1.addListenerClickCell(vTmpCell, vEvents, vTaskList[i], 'planend');\n    }\n    if ('vShowCost' === column) {\n        vTmpCell = draw_utils_1.newNode(vTmpRow, 'td', null, 'gcost');\n        var text = draw_utils_1.makeInput(vTaskList[i].getCost(), vEditable, 'cost');\n        vTmpDiv = draw_utils_1.newNode(vTmpCell, 'div', null, null, text);\n        var callback = function (task, e) { return task.setCost(e.target.value); };\n        events_1.addListenerInputCell(vTmpCell, vEventsChange, callback, vTaskList, i, 'cost', Draw);\n        events_1.addListenerClickCell(vTmpCell, vEvents, vTaskList[i], 'cost');\n    }\n    if ('vAdditionalHeaders' === column && vAdditionalHeaders) {\n        for (var key in vAdditionalHeaders) {\n            var header = vAdditionalHeaders[key];\n            var css = header.class ? header.class : \"gadditional-\" + key;\n            var data = vTaskList[i].getDataObject();\n            vTmpCell = draw_utils_1.newNode(vTmpRow, 'td', null, \"gadditional \" + css);\n            vTmpDiv = draw_utils_1.newNode(vTmpCell, 'div', null, null, data ? data[key] : '');\n            events_1.addListenerClickCell(vTmpCell, vEvents, vTaskList[i], \"additional_\" + key);\n            // const callback = (task, e) => task.setCost(e.target.value);\n            // addListenerInputCell(vTmpCell, vEventsChange, callback, vTaskList, i, 'costdate');\n        }\n    }\n    if ('vShowAddEntries' === column) {\n        vTmpCell = draw_utils_1.newNode(vTmpRow, 'td', null, 'gaddentries');\n        var button = \"<button>+</button>\";\n        vTmpDiv = draw_utils_1.newNode(vTmpCell, 'div', null, null, button);\n        var callback = function (task, e) {\n            task_1.AddTaskItemObject({\n                vParent: task.getParent()\n            });\n        };\n        events_1.addListenerInputCell(vTmpCell, vEventsChange, callback, vTaskList, i, 'addentries', Draw.bind(this));\n        events_1.addListenerClickCell(vTmpCell, vEvents, vTaskList[i], 'addentries');\n    }\n};\nexports.draw_bottom = function (column, vTmpRow, vAdditionalHeaders) {\n    if ('vAdditionalHeaders' === column && vAdditionalHeaders) {\n        for (var key in vAdditionalHeaders) {\n            var header = vAdditionalHeaders[key];\n            var css = header.class ? header.class : \"gadditional-\" + key;\n            draw_utils_1.newNode(vTmpRow, 'td', null, \"gspanning gadditional \" + css, '\\u00A0');\n        }\n    }\n    else {\n        var type = COLUMNS_TYPES[column];\n        draw_utils_1.newNode(vTmpRow, 'td', null, \"gspanning g\" + type, '\\u00A0');\n    }\n};\n// export const draw_list_headings = function (column, vTmpRow, vAdditionalHeaders, vEvents) {\n//   let nodeCreated;\n//   if ('vAdditionalHeaders' === column && vAdditionalHeaders) {\n//     for (const key in vAdditionalHeaders) {\n//       const header = vAdditionalHeaders[key];\n//       const css = header.class ? header.class : `gadditional-${key}`;\n//       newNode(vTmpRow, 'td', null, `gspanning gadditional ${css}`, '\\u00A0');\n//     }\n//   } else {\n//     const type = COLUMNS_TYPES[column];\n//     nodeCreated = newNode(vTmpRow, 'td', null, `gspanning g${type}`, '\\u00A0');\n//     addListenerClickCell(nodeCreated, vEvents, { hader: true, column }, type);\n//   }\n// }\nexports.draw_task_headings = function (column, vTmpRow, vLangs, vLang, vAdditionalHeaders, vEvents) {\n    var nodeCreated;\n    if ('vAdditionalHeaders' === column && vAdditionalHeaders) {\n        for (var key in vAdditionalHeaders) {\n            var header = vAdditionalHeaders[key];\n            var text = header.translate ? vLangs[vLang][header.translate] : header.title;\n            var css = header.class ? header.class : \"gadditional-\" + key;\n            nodeCreated = draw_utils_1.newNode(vTmpRow, 'td', null, \"gtaskheading gadditional \" + css, text);\n        }\n    }\n    else {\n        var type = COLUMNS_TYPES[column];\n        nodeCreated = draw_utils_1.newNode(vTmpRow, 'td', null, \"gtaskheading g\" + type, vLangs[vLang][type]);\n        events_1.addListenerClickCell(nodeCreated, vEvents, { hader: true, column: column }, type);\n    }\n};\n//# sourceMappingURL=draw_columns.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.processRows = exports.ClearTasks = exports.RemoveTaskItem = exports.AddTaskItemObject = exports.AddTaskItem = exports.createTaskInfo = exports.TaskItem = exports.TaskItemObject = exports.sortTasks = exports.taskLink = void 0;\nvar general_utils_1 = require(\"./utils/general_utils\");\nvar draw_utils_1 = require(\"./utils/draw_utils\");\nvar date_utils_1 = require(\"./utils/date_utils\");\n// function to open window to display task link\nexports.taskLink = function (pRef, pWidth, pHeight) {\n    var vWidth, vHeight;\n    if (pWidth)\n        vWidth = pWidth;\n    else\n        vWidth = 400;\n    if (pHeight)\n        vHeight = pHeight;\n    else\n        vHeight = 400;\n    window.open(pRef, 'newwin', 'height=' + vHeight + ',width=' + vWidth); // let OpenWindow = \n};\nexports.sortTasks = function (pList, pID, pIdx) {\n    if (pList.length < 2) {\n        return pIdx;\n    }\n    var sortIdx = pIdx;\n    var sortArr = new Array();\n    for (var i = 0; i < pList.length; i++) {\n        if (pList[i].getParent() == pID)\n            sortArr.push(pList[i]);\n    }\n    if (sortArr.length > 0) {\n        sortArr.sort(function (a, b) {\n            var i = a.getStart().getTime() - b.getStart().getTime();\n            if (i == 0)\n                i = a.getEnd().getTime() - b.getEnd().getTime();\n            if (i == 0)\n                return a.getID() - b.getID();\n            else\n                return i;\n        });\n    }\n    for (var j = 0; j < sortArr.length; j++) {\n        for (var i = 0; i < pList.length; i++) {\n            if (pList[i].getID() == sortArr[j].getID()) {\n                pList[i].setSortIdx(sortIdx++);\n                sortIdx = exports.sortTasks(pList, pList[i].getID(), sortIdx);\n            }\n        }\n    }\n    return sortIdx;\n};\nexports.TaskItemObject = function (object) {\n    var pDataObject = __assign({}, object);\n    general_utils_1.internalProperties.forEach(function (property) {\n        delete pDataObject[property];\n    });\n    return new exports.TaskItem(object.pID, object.pName, object.pStart, object.pEnd, object.pClass, object.pLink, object.pMile, object.pRes, object.pComp, object.pGroup, object.pParent, object.pOpen, object.pDepend, object.pCaption, object.pNotes, object.pGantt, object.pCost, object.pPlanStart, object.pPlanEnd, object.pDuration, object.pBarText, object);\n};\nexports.TaskItem = function (pID, pName, pStart, pEnd, pClass, pLink, pMile, pRes, pComp, pGroup, pParent, pOpen, pDepend, pCaption, pNotes, pGantt, pCost, pPlanStart, pPlanEnd, pDuration, pBarText, pDataObject) {\n    if (pCost === void 0) { pCost = null; }\n    if (pPlanStart === void 0) { pPlanStart = null; }\n    if (pPlanEnd === void 0) { pPlanEnd = null; }\n    if (pDuration === void 0) { pDuration = null; }\n    if (pBarText === void 0) { pBarText = null; }\n    if (pDataObject === void 0) { pDataObject = null; }\n    var vGantt = pGantt ? pGantt : this;\n    var _id = document.createTextNode(pID).data;\n    var vID = general_utils_1.hashKey(document.createTextNode(pID).data);\n    var vName = document.createTextNode(pName).data;\n    var vStart = null;\n    var vEnd = null;\n    var vPlanStart = null;\n    var vPlanEnd = null;\n    var vGroupMinStart = null;\n    var vGroupMinEnd = null;\n    var vGroupMinPlanStart = null;\n    var vGroupMinPlanEnd = null;\n    var vClass = document.createTextNode(pClass).data;\n    var vLink = document.createTextNode(pLink).data;\n    var vMile = parseInt(document.createTextNode(pMile).data);\n    var vRes = document.createTextNode(pRes).data;\n    var vComp = parseFloat(document.createTextNode(pComp).data);\n    var vCost = parseInt(document.createTextNode(pCost).data);\n    var vGroup = parseInt(document.createTextNode(pGroup).data);\n    var vDataObject = pDataObject;\n    var vCompVal;\n    var parent = document.createTextNode(pParent).data;\n    if (parent && parent !== '0') {\n        parent = general_utils_1.hashKey(parent).toString();\n    }\n    var vParent = parent;\n    var vOpen = (vGroup == 2) ? 1 : parseInt(document.createTextNode(pOpen).data);\n    var vDepend = new Array();\n    var vDependType = new Array();\n    var vCaption = document.createTextNode(pCaption).data;\n    var vDuration = pDuration || '';\n    var vBarText = pBarText || '';\n    var vLevel = 0;\n    var vNumKid = 0;\n    var vWeight = 0;\n    var vVisible = 1;\n    var vSortIdx = 0;\n    var vToDelete = false;\n    var x1, y1, x2, y2;\n    var vNotes;\n    var vParItem = null;\n    var vCellDiv = null;\n    var vBarDiv = null;\n    var vTaskDiv = null;\n    var vPlanTaskDiv = null;\n    var vListChildRow = null;\n    var vChildRow = null;\n    var vGroupSpan = null;\n    vNotes = document.createElement('span');\n    vNotes.className = 'gTaskNotes';\n    if (pNotes != null) {\n        vNotes.innerHTML = pNotes;\n        general_utils_1.stripUnwanted(vNotes);\n    }\n    if (pStart != null && pStart != '') {\n        vStart = (pStart instanceof Date) ? pStart : date_utils_1.parseDateStr(document.createTextNode(pStart).data, vGantt.getDateInputFormat());\n        vGroupMinStart = vStart;\n    }\n    if (pEnd != null && pEnd != '') {\n        vEnd = (pEnd instanceof Date) ? pEnd : date_utils_1.parseDateStr(document.createTextNode(pEnd).data, vGantt.getDateInputFormat());\n        vGroupMinEnd = vEnd;\n    }\n    if (pPlanStart != null && pPlanStart != '') {\n        vPlanStart = (pPlanStart instanceof Date) ? pPlanStart : date_utils_1.parseDateStr(document.createTextNode(pPlanStart).data, vGantt.getDateInputFormat());\n        vGroupMinPlanStart = vPlanStart;\n    }\n    if (pPlanEnd != null && pPlanEnd != '') {\n        vPlanEnd = (pPlanEnd instanceof Date) ? pPlanEnd : date_utils_1.parseDateStr(document.createTextNode(pPlanEnd).data, vGantt.getDateInputFormat());\n        vGroupMinPlanEnd = vPlanEnd;\n    }\n    if (pDepend != null) {\n        var vDependStr = pDepend + '';\n        var vDepList = vDependStr.split(',');\n        var n = vDepList.length;\n        for (var k = 0; k < n; k++) {\n            if (vDepList[k].toUpperCase().endsWith('SS')) {\n                vDepend[k] = vDepList[k].substring(0, vDepList[k].length - 2);\n                vDependType[k] = 'SS';\n            }\n            else if (vDepList[k].toUpperCase().endsWith('FF')) {\n                vDepend[k] = vDepList[k].substring(0, vDepList[k].length - 2);\n                vDependType[k] = 'FF';\n            }\n            else if (vDepList[k].toUpperCase().endsWith('SF')) {\n                vDepend[k] = vDepList[k].substring(0, vDepList[k].length - 2);\n                vDependType[k] = 'SF';\n            }\n            else if (vDepList[k].toUpperCase().endsWith('FS')) {\n                vDepend[k] = vDepList[k].substring(0, vDepList[k].length - 2);\n                vDependType[k] = 'FS';\n            }\n            else {\n                vDepend[k] = vDepList[k];\n                vDependType[k] = 'FS';\n            }\n            if (vDepend[k]) {\n                vDepend[k] = general_utils_1.hashKey(vDepend[k]).toString();\n            }\n        }\n    }\n    this.getID = function () { return vID; };\n    this.getOriginalID = function () { return _id; };\n    this.getGantt = function () { return vGantt; };\n    this.getName = function () { return vName; };\n    this.getStart = function () {\n        if (vStart)\n            return vStart;\n        else if (vPlanStart)\n            return vPlanStart;\n        else\n            return new Date();\n    };\n    this.getStartVar = function () {\n        return vStart;\n    };\n    this.getEnd = function () {\n        if (vEnd)\n            return vEnd;\n        else if (vPlanEnd)\n            return vPlanEnd;\n        else if (vStart && vDuration) {\n            var date = new Date(vStart);\n            var vUnits = vDuration.split(' ');\n            var value = parseInt(vUnits[0]);\n            switch (vUnits[1]) {\n                case 'hour':\n                    date.setMinutes(date.getMinutes() + (value * 60));\n                    break;\n                case 'day':\n                    date.setMinutes(date.getMinutes() + (value * 60 * 24));\n                    break;\n                case 'week':\n                    date.setMinutes(date.getMinutes() + (value * 60 * 24 * 7));\n                    break;\n                case 'month':\n                    date.setMonth(date.getMonth() + (value));\n                    break;\n                case 'quarter':\n                    date.setMonth(date.getMonth() + (value * 3));\n                    break;\n            }\n            return date;\n        }\n        else\n            return new Date();\n    };\n    this.getEndVar = function () {\n        return vEnd;\n    };\n    this.getPlanStart = function () { return vPlanStart ? vPlanStart : vStart; };\n    this.getPlanEnd = function () { return vPlanEnd ? vPlanEnd : vEnd; };\n    this.getCost = function () { return vCost; };\n    this.getGroupMinStart = function () { return vGroupMinStart; };\n    this.getGroupMinEnd = function () { return vGroupMinEnd; };\n    this.getGroupMinPlanStart = function () { return vGroupMinPlanStart; };\n    this.getGroupMinPlanEnd = function () { return vGroupMinPlanEnd; };\n    this.getClass = function () { return vClass; };\n    this.getLink = function () { return vLink; };\n    this.getMile = function () { return vMile; };\n    this.getDepend = function () {\n        if (vDepend)\n            return vDepend;\n        else\n            return null;\n    };\n    this.getDataObject = function () { return vDataObject; };\n    this.getDepType = function () { if (vDependType)\n        return vDependType;\n    else\n        return null; };\n    this.getCaption = function () { if (vCaption)\n        return vCaption;\n    else\n        return ''; };\n    this.getResource = function () { if (vRes)\n        return vRes;\n    else\n        return '\\u00A0'; };\n    this.getCompVal = function () { if (vComp)\n        return vComp;\n    else if (vCompVal)\n        return vCompVal;\n    else\n        return 0; };\n    this.getCompStr = function () { if (vComp)\n        return vComp + '%';\n    else if (vCompVal)\n        return vCompVal + '%';\n    else\n        return ''; };\n    this.getCompRestStr = function () { if (vComp)\n        return (100 - vComp) + '%';\n    else if (vCompVal)\n        return (100 - vCompVal) + '%';\n    else\n        return ''; };\n    this.getNotes = function () { return vNotes; };\n    this.getSortIdx = function () { return vSortIdx; };\n    this.getToDelete = function () { return vToDelete; };\n    this.getDuration = function (pFormat, pLang) {\n        if (vMile) {\n            vDuration = '-';\n        }\n        else if (!vEnd && !vStart && vPlanStart && vPlanEnd) {\n            return calculateVDuration(pFormat, pLang, this.getPlanStart(), this.getPlanEnd());\n        }\n        else if (!vEnd && vDuration) {\n            return vDuration;\n        }\n        else {\n            vDuration = calculateVDuration(pFormat, pLang, this.getStart(), this.getEnd());\n        }\n        return vDuration;\n    };\n    function calculateVDuration(pFormat, pLang, start, end) {\n        var vDuration;\n        var vUnits = null;\n        switch (pFormat) {\n            case 'week':\n                vUnits = 'day';\n                break;\n            case 'month':\n                vUnits = 'week';\n                break;\n            case 'quarter':\n                vUnits = 'month';\n                break;\n            default:\n                vUnits = pFormat;\n                break;\n        }\n        // let vTaskEnd = new Date(this.getEnd().getTime());\n        // if ((vTaskEnd.getTime() - (vTaskEnd.getTimezoneOffset() * 60000)) % (86400000) == 0) {\n        //   vTaskEnd = new Date(vTaskEnd.getFullYear(), vTaskEnd.getMonth(), vTaskEnd.getDate() + 1, vTaskEnd.getHours(), vTaskEnd.getMinutes(), vTaskEnd.getSeconds());\n        // }\n        // let tmpPer = (getOffset(this.getStart(), vTaskEnd, 999, vUnits)) / 1000;\n        var hours = (end.getTime() - start.getTime()) / 1000 / 60 / 60;\n        var tmpPer;\n        switch (vUnits) {\n            case 'hour':\n                tmpPer = Math.round(hours);\n                vDuration = tmpPer + ' ' + ((tmpPer != 1) ? pLang['hrs'] : pLang['hr']);\n                break;\n            case 'day':\n                tmpPer = Math.round(hours / 24);\n                vDuration = tmpPer + ' ' + ((tmpPer != 1) ? pLang['dys'] : pLang['dy']);\n                break;\n            case 'week':\n                tmpPer = Math.round(hours / 24 / 7);\n                vDuration = tmpPer + ' ' + ((tmpPer != 1) ? pLang['wks'] : pLang['wk']);\n                break;\n            case 'month':\n                tmpPer = Math.round(hours / 24 / 7 / 4.35);\n                vDuration = tmpPer + ' ' + ((tmpPer != 1) ? pLang['mths'] : pLang['mth']);\n                break;\n            case 'quarter':\n                tmpPer = Math.round(hours / 24 / 7 / 13);\n                vDuration = tmpPer + ' ' + ((tmpPer != 1) ? pLang['qtrs'] : pLang['qtr']);\n                break;\n        }\n        return vDuration;\n    }\n    this.getBarText = function () { return vBarText; };\n    this.getParent = function () { return vParent; };\n    this.getGroup = function () { return vGroup; };\n    this.getOpen = function () { return vOpen; };\n    this.getLevel = function () { return vLevel; };\n    this.getNumKids = function () { return vNumKid; };\n    this.getWeight = function () { return vWeight; };\n    this.getStartX = function () { return x1; };\n    this.getStartY = function () { return y1; };\n    this.getEndX = function () { return x2; };\n    this.getEndY = function () { return y2; };\n    this.getVisible = function () { return vVisible; };\n    this.getParItem = function () { return vParItem; };\n    this.getCellDiv = function () { return vCellDiv; };\n    this.getBarDiv = function () { return vBarDiv; };\n    this.getTaskDiv = function () { return vTaskDiv; };\n    this.getPlanTaskDiv = function () { return vPlanTaskDiv; };\n    this.getChildRow = function () { return vChildRow; };\n    this.getListChildRow = function () { return vListChildRow; };\n    this.getGroupSpan = function () { return vGroupSpan; };\n    this.setName = function (pName) { vName = pName; };\n    this.setNotes = function (pNotes) { vNotes = pNotes; };\n    this.setClass = function (pClass) { vClass = pClass; };\n    this.setCost = function (pCost) { vCost = pCost; };\n    this.setResource = function (pRes) { vRes = pRes; };\n    this.setDuration = function (pDuration) { vDuration = pDuration; };\n    this.setDataObject = function (pDataObject) { vDataObject = pDataObject; };\n    this.setStart = function (pStart) {\n        if (pStart instanceof Date) {\n            vStart = pStart;\n        }\n        else {\n            var temp = new Date(pStart);\n            if (temp instanceof Date && !isNaN(temp.valueOf())) {\n                vStart = temp;\n            }\n        }\n    };\n    this.setEnd = function (pEnd) {\n        if (pEnd instanceof Date) {\n            vEnd = pEnd;\n        }\n        else {\n            var temp = new Date(pEnd);\n            if (temp instanceof Date && !isNaN(temp.valueOf())) {\n                vEnd = temp;\n            }\n        }\n    };\n    this.setPlanStart = function (pPlanStart) {\n        if (pPlanStart instanceof Date)\n            vPlanStart = pPlanStart;\n        else\n            vPlanStart = new Date(pPlanStart);\n    };\n    this.setPlanEnd = function (pPlanEnd) {\n        if (pPlanEnd instanceof Date)\n            vPlanEnd = pPlanEnd;\n        else\n            vPlanEnd = new Date(pPlanEnd);\n    };\n    this.setGroupMinStart = function (pStart) { if (pStart instanceof Date)\n        vGroupMinStart = pStart; };\n    this.setGroupMinEnd = function (pEnd) { if (pEnd instanceof Date)\n        vGroupMinEnd = pEnd; };\n    this.setLevel = function (pLevel) { vLevel = parseInt(document.createTextNode(pLevel).data); };\n    this.setNumKid = function (pNumKid) { vNumKid = parseInt(document.createTextNode(pNumKid).data); };\n    this.setWeight = function (pWeight) { vWeight = parseInt(document.createTextNode(pWeight).data); };\n    this.setCompVal = function (pCompVal) { vCompVal = parseFloat(document.createTextNode(pCompVal).data); };\n    this.setComp = function (pComp) {\n        vComp = parseInt(document.createTextNode(pComp).data);\n    };\n    this.setStartX = function (pX) { x1 = parseInt(document.createTextNode(pX).data); };\n    this.setStartY = function (pY) { y1 = parseInt(document.createTextNode(pY).data); };\n    this.setEndX = function (pX) { x2 = parseInt(document.createTextNode(pX).data); };\n    this.setEndY = function (pY) { y2 = parseInt(document.createTextNode(pY).data); };\n    this.setOpen = function (pOpen) { vOpen = parseInt(document.createTextNode(pOpen).data); };\n    this.setVisible = function (pVisible) { vVisible = parseInt(document.createTextNode(pVisible).data); };\n    this.setSortIdx = function (pSortIdx) { vSortIdx = parseInt(document.createTextNode(pSortIdx).data); };\n    this.setToDelete = function (pToDelete) { if (pToDelete)\n        vToDelete = true;\n    else\n        vToDelete = false; };\n    this.setParItem = function (pParItem) { if (pParItem)\n        vParItem = pParItem; };\n    this.setCellDiv = function (pCellDiv) { if (typeof HTMLDivElement !== 'function' || pCellDiv instanceof HTMLDivElement)\n        vCellDiv = pCellDiv; }; //\"typeof HTMLDivElement !== 'function'\" to play nice with ie6 and 7\n    this.setGroup = function (pGroup) {\n        if (pGroup === true || pGroup === 'true') {\n            vGroup = 1;\n        }\n        else if (pGroup === false || pGroup === 'false') {\n            vGroup = 0;\n        }\n        else {\n            vGroup = parseInt(document.createTextNode(pGroup).data);\n        }\n    };\n    this.setBarText = function (pBarText) { if (pBarText)\n        vBarText = pBarText; };\n    this.setBarDiv = function (pDiv) { if (typeof HTMLDivElement !== 'function' || pDiv instanceof HTMLDivElement)\n        vBarDiv = pDiv; };\n    this.setTaskDiv = function (pDiv) { if (typeof HTMLDivElement !== 'function' || pDiv instanceof HTMLDivElement)\n        vTaskDiv = pDiv; };\n    this.setPlanTaskDiv = function (pDiv) { if (typeof HTMLDivElement !== 'function' || pDiv instanceof HTMLDivElement)\n        vPlanTaskDiv = pDiv; };\n    this.setChildRow = function (pRow) { if (typeof HTMLTableRowElement !== 'function' || pRow instanceof HTMLTableRowElement)\n        vChildRow = pRow; };\n    this.setListChildRow = function (pRow) { if (typeof HTMLTableRowElement !== 'function' || pRow instanceof HTMLTableRowElement)\n        vListChildRow = pRow; };\n    this.setGroupSpan = function (pSpan) { if (typeof HTMLSpanElement !== 'function' || pSpan instanceof HTMLSpanElement)\n        vGroupSpan = pSpan; };\n    this.getAllData = function () {\n        return {\n            pID: vID,\n            pName: vName,\n            pStart: vStart,\n            pEnd: vEnd,\n            pPlanStart: vPlanStart,\n            pPlanEnd: vPlanEnd,\n            pGroupMinStart: vGroupMinStart,\n            pGroupMinEnd: vGroupMinEnd,\n            pClass: vClass,\n            pLink: vLink,\n            pMile: vMile,\n            pRes: vRes,\n            pComp: vComp,\n            pCost: vCost,\n            pGroup: vGroup,\n            pDataObjec: vDataObject\n        };\n    };\n};\n/**\n * @param pTask\n * @param templateStrOrFn template string or function(task). In any case parameters in template string are substituted.\n *        If string - just a static template.\n *        If function(task): string - per task template. Can return null|undefined to fallback to default template.\n *        If function(task): Promise<string>) - async per task template. Tooltip will show 'Loading...' if promise is not yet complete.\n *          Otherwise returned template will be handled in the same manner as in other cases.\n */\nexports.createTaskInfo = function (pTask, templateStrOrFn) {\n    var _this = this;\n    if (templateStrOrFn === void 0) { templateStrOrFn = null; }\n    var vTmpDiv;\n    var vTaskInfoBox = document.createDocumentFragment();\n    var vTaskInfo = draw_utils_1.newNode(vTaskInfoBox, 'div', null, 'gTaskInfo');\n    var setupTemplate = function (template) {\n        vTaskInfo.innerHTML = \"\";\n        if (template) {\n            var allData_1 = pTask.getAllData();\n            general_utils_1.internalProperties.forEach(function (key) {\n                var lang;\n                if (general_utils_1.internalPropertiesLang[key]) {\n                    lang = _this.vLangs[_this.vLang][general_utils_1.internalPropertiesLang[key]];\n                }\n                if (!lang) {\n                    lang = key;\n                }\n                var val = allData_1[key];\n                template = template.replace(\"{{\" + key + \"}}\", val);\n                if (lang) {\n                    template = template.replace(\"{{Lang:\" + key + \"}}\", lang);\n                }\n                else {\n                    template = template.replace(\"{{Lang:\" + key + \"}}\", key);\n                }\n            });\n            draw_utils_1.newNode(vTaskInfo, 'span', null, 'gTtTemplate', template);\n        }\n        else {\n            draw_utils_1.newNode(vTaskInfo, 'span', null, 'gTtTitle', pTask.getName());\n            if (_this.vShowTaskInfoStartDate == 1) {\n                vTmpDiv = draw_utils_1.newNode(vTaskInfo, 'div', null, 'gTILine gTIsd');\n                draw_utils_1.newNode(vTmpDiv, 'span', null, 'gTaskLabel', _this.vLangs[_this.vLang]['startdate'] + ': ');\n                draw_utils_1.newNode(vTmpDiv, 'span', null, 'gTaskText', date_utils_1.formatDateStr(pTask.getStart(), _this.vDateTaskDisplayFormat, _this.vLangs[_this.vLang]));\n            }\n            if (_this.vShowTaskInfoEndDate == 1) {\n                vTmpDiv = draw_utils_1.newNode(vTaskInfo, 'div', null, 'gTILine gTIed');\n                draw_utils_1.newNode(vTmpDiv, 'span', null, 'gTaskLabel', _this.vLangs[_this.vLang]['enddate'] + ': ');\n                draw_utils_1.newNode(vTmpDiv, 'span', null, 'gTaskText', date_utils_1.formatDateStr(pTask.getEnd(), _this.vDateTaskDisplayFormat, _this.vLangs[_this.vLang]));\n            }\n            if (_this.vShowTaskInfoDur == 1 && !pTask.getMile()) {\n                vTmpDiv = draw_utils_1.newNode(vTaskInfo, 'div', null, 'gTILine gTId');\n                draw_utils_1.newNode(vTmpDiv, 'span', null, 'gTaskLabel', _this.vLangs[_this.vLang]['duration'] + ': ');\n                draw_utils_1.newNode(vTmpDiv, 'span', null, 'gTaskText', pTask.getDuration(_this.vFormat, _this.vLangs[_this.vLang]));\n            }\n            if (_this.vShowTaskInfoComp == 1) {\n                vTmpDiv = draw_utils_1.newNode(vTaskInfo, 'div', null, 'gTILine gTIc');\n                draw_utils_1.newNode(vTmpDiv, 'span', null, 'gTaskLabel', _this.vLangs[_this.vLang]['completion'] + ': ');\n                draw_utils_1.newNode(vTmpDiv, 'span', null, 'gTaskText', pTask.getCompStr());\n            }\n            if (_this.vShowTaskInfoRes == 1) {\n                vTmpDiv = draw_utils_1.newNode(vTaskInfo, 'div', null, 'gTILine gTIr');\n                draw_utils_1.newNode(vTmpDiv, 'span', null, 'gTaskLabel', _this.vLangs[_this.vLang]['resource'] + ': ');\n                draw_utils_1.newNode(vTmpDiv, 'span', null, 'gTaskText', pTask.getResource());\n            }\n            if (_this.vShowTaskInfoLink == 1 && pTask.getLink() != '') {\n                vTmpDiv = draw_utils_1.newNode(vTaskInfo, 'div', null, 'gTILine gTIl');\n                var vTmpNode = draw_utils_1.newNode(vTmpDiv, 'span', null, 'gTaskLabel');\n                vTmpNode = draw_utils_1.newNode(vTmpNode, 'a', null, 'gTaskText', _this.vLangs[_this.vLang]['moreinfo']);\n                vTmpNode.setAttribute('href', pTask.getLink());\n            }\n            if (_this.vShowTaskInfoNotes == 1) {\n                vTmpDiv = draw_utils_1.newNode(vTaskInfo, 'div', null, 'gTILine gTIn');\n                draw_utils_1.newNode(vTmpDiv, 'span', null, 'gTaskLabel', _this.vLangs[_this.vLang]['notes'] + ': ');\n                if (pTask.getNotes())\n                    vTmpDiv.appendChild(pTask.getNotes());\n            }\n        }\n    };\n    var callback;\n    if (typeof templateStrOrFn === 'function') {\n        callback = function () {\n            var strOrPromise = templateStrOrFn(pTask);\n            if (!strOrPromise || typeof strOrPromise === 'string') {\n                setupTemplate(strOrPromise);\n            }\n            else if (strOrPromise.then) {\n                setupTemplate(_this.vLangs[_this.vLang]['tooltipLoading'] || _this.vLangs['en']['tooltipLoading']);\n                return strOrPromise.then(setupTemplate);\n            }\n        };\n    }\n    else {\n        setupTemplate(templateStrOrFn);\n    }\n    return { component: vTaskInfoBox, callback: callback };\n};\nexports.AddTaskItem = function (value) {\n    var vExists = false;\n    for (var i = 0; i < this.vTaskList.length; i++) {\n        if (this.vTaskList[i].getID() == value.getID()) {\n            i = this.vTaskList.length;\n            vExists = true;\n        }\n    }\n    if (!vExists) {\n        this.vTaskList.push(value);\n        this.vProcessNeeded = true;\n    }\n};\nexports.AddTaskItemObject = function (object) {\n    if (!object.pGantt) {\n        object.pGantt = this;\n    }\n    return this.AddTaskItem(exports.TaskItemObject(object));\n};\nexports.RemoveTaskItem = function (pID) {\n    // simply mark the task for removal at this point - actually remove it next time we re-draw the chart\n    for (var i = 0; i < this.vTaskList.length; i++) {\n        if (this.vTaskList[i].getID() == pID)\n            this.vTaskList[i].setToDelete(true);\n        else if (this.vTaskList[i].getParent() == pID)\n            this.RemoveTaskItem(this.vTaskList[i].getID());\n    }\n    this.vProcessNeeded = true;\n};\nexports.ClearTasks = function () {\n    var _this = this;\n    this.vTaskList.map(function (task) { return _this.RemoveTaskItem(task.getID()); });\n    this.vProcessNeeded = true;\n};\n// Recursively process task tree ... set min, max dates of parent tasks and identfy task level.\nexports.processRows = function (pList, pID, pRow, pLevel, pOpen, pUseSort, vDebug) {\n    if (vDebug === void 0) { vDebug = false; }\n    var vMinDate = null;\n    var vMaxDate = null;\n    var vMinPlanDate = null;\n    var vMaxPlanDate = null;\n    var vVisible = pOpen;\n    var vCurItem = null;\n    var vCompSum = 0;\n    var vMinSet = 0;\n    var vMaxSet = 0;\n    var vMinPlanSet = 0;\n    var vMaxPlanSet = 0;\n    var vNumKid = 0;\n    var vWeight = 0;\n    var vLevel = pLevel;\n    var vList = pList;\n    var vComb = false;\n    var i = 0;\n    for (i = 0; i < pList.length; i++) {\n        if (pList[i].getToDelete()) {\n            pList.splice(i, 1);\n            i--;\n        }\n        if (i >= 0 && pList[i].getID() == pID)\n            vCurItem = pList[i];\n    }\n    for (i = 0; i < pList.length; i++) {\n        if (pList[i].getParent() == pID) {\n            vVisible = pOpen;\n            pList[i].setParItem(vCurItem);\n            pList[i].setVisible(vVisible);\n            if (vVisible == 1 && pList[i].getOpen() == 0)\n                vVisible = 0;\n            if (pList[i].getMile() && pList[i].getParItem() && pList[i].getParItem().getGroup() == 2) { //remove milestones owned by combined groups\n                pList.splice(i, 1);\n                i--;\n                continue;\n            }\n            pList[i].setLevel(vLevel);\n            if (pList[i].getGroup()) {\n                if (pList[i].getParItem() && pList[i].getParItem().getGroup() == 2)\n                    pList[i].setGroup(2);\n                exports.processRows(vList, pList[i].getID(), i, vLevel + 1, vVisible, 0);\n            }\n            if (pList[i].getStartVar() && (vMinSet == 0 || pList[i].getStartVar() < vMinDate)) {\n                vMinDate = pList[i].getStartVar();\n                vMinSet = 1;\n            }\n            if (pList[i].getEndVar() && (vMaxSet == 0 || pList[i].getEndVar() > vMaxDate)) {\n                vMaxDate = pList[i].getEndVar();\n                vMaxSet = 1;\n            }\n            if (vMinPlanSet == 0 || pList[i].getPlanStart() < vMinPlanDate) {\n                vMinPlanDate = pList[i].getPlanStart();\n                vMinPlanSet = 1;\n            }\n            if (vMaxPlanSet == 0 || pList[i].getPlanEnd() > vMaxPlanDate) {\n                vMaxPlanDate = pList[i].getPlanEnd();\n                vMaxPlanSet = 1;\n            }\n            vNumKid++;\n            vWeight += pList[i].getEnd() - pList[i].getStart() + 1;\n            vCompSum += pList[i].getCompVal() * (pList[i].getEnd() - pList[i].getStart() + 1);\n            pList[i].setSortIdx(i * pList.length);\n        }\n    }\n    if (pRow >= 0) {\n        if (pList[pRow].getGroupMinStart() != null && pList[pRow].getGroupMinStart() < vMinDate) {\n            vMinDate = pList[pRow].getGroupMinStart();\n        }\n        if (pList[pRow].getGroupMinEnd() != null && pList[pRow].getGroupMinEnd() > vMaxDate) {\n            vMaxDate = pList[pRow].getGroupMinEnd();\n        }\n        if (vMinDate) {\n            pList[pRow].setStart(vMinDate);\n        }\n        if (vMaxDate) {\n            pList[pRow].setEnd(vMaxDate);\n        }\n        if (pList[pRow].getGroupMinPlanStart() != null && pList[pRow].getGroupMinPlanStart() < vMinPlanDate) {\n            vMinPlanDate = pList[pRow].getGroupMinPlanStart();\n        }\n        if (pList[pRow].getGroupMinPlanEnd() != null && pList[pRow].getGroupMinPlanEnd() > vMaxPlanDate) {\n            vMaxPlanDate = pList[pRow].getGroupMinPlanEnd();\n        }\n        if (vMinPlanDate) {\n            pList[pRow].setPlanStart(vMinPlanDate);\n        }\n        if (vMaxPlanDate) {\n            pList[pRow].setPlanEnd(vMaxPlanDate);\n        }\n        pList[pRow].setNumKid(vNumKid);\n        pList[pRow].setWeight(vWeight);\n        pList[pRow].setCompVal(Math.ceil(vCompSum / vWeight));\n    }\n    if (pID == 0 && pUseSort == 1) {\n        var bd = void 0;\n        if (vDebug) {\n            bd = new Date();\n            console.info('before afterTasks', bd);\n        }\n        exports.sortTasks(pList, 0, 0);\n        if (vDebug) {\n            var ad = new Date();\n            console.info('after afterTasks', ad, (ad.getTime() - bd.getTime()));\n        }\n        pList.sort(function (a, b) { return a.getSortIdx() - b.getSortIdx(); });\n    }\n    if (pID == 0 && pUseSort != 1) // Need to sort combined tasks regardless\n     {\n        for (i = 0; i < pList.length; i++) {\n            if (pList[i].getGroup() == 2) {\n                vComb = true;\n                var bd = void 0;\n                if (vDebug) {\n                    bd = new Date();\n                    console.info('before sortTasks', bd);\n                }\n                exports.sortTasks(pList, pList[i].getID(), pList[i].getSortIdx() + 1);\n                if (vDebug) {\n                    var ad = new Date();\n                    console.info('after sortTasks', ad, (ad.getTime() - bd.getTime()));\n                }\n            }\n        }\n        if (vComb == true)\n            pList.sort(function (a, b) { return a.getSortIdx() - b.getSortIdx(); });\n    }\n};\n//# sourceMappingURL=task.js.map","import { __decorate, __metadata } from 'tslib';\nimport { ViewChild, ElementRef, Input, Component, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GanttChart } from 'jsgantt-improved';\n\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"ganttEditorContainer\"];\nclass GanttEditorOptions {\n    // public onEditable: (node: GanttEditorTreeNode | {}) => boolean | { field: boolean, value: boolean };\n    // public theme: Number;\n    // public language: String;\n    // public languages: Object;\n    constructor() {\n        // this.escapeUnicode = false;\n        // this.sortObjectKeys = false;\n        // this.history = true;\n    }\n}\n\nlet GanttEditorComponent = class GanttEditorComponent {\n    constructor() {\n        this.id = 'anggantteditor' + Math.floor(Math.random() * 1000000);\n        this.optionsChanged = false;\n        this.formats = ['Hour', 'Day', 'Week', 'Month', 'Quarter'];\n        this.options = new GanttEditorOptions();\n        this.format = 'week';\n    }\n    set data(value) {\n        this._data = value;\n        if (this.editor) {\n            this.destroy();\n            this.ngOnInit();\n        }\n    }\n    ngOnInit() {\n        let optionsBefore = this.options;\n        if (!this.optionsChanged && this.editor) {\n            optionsBefore = this.editor.options;\n        }\n        // document.getElementById('embedded-Gantt')\n        const g = this.editor = new GanttChart(this.ganttEditorContainer.nativeElement, this.format);\n        if (g.getDivId() != null) {\n            // JSGantt.parseJSON('./fixes/data.json', g);\n            g.setOptions(Object.assign({ vCaptionType: 'Complete', vQuarterColWidth: 36, vDateTaskDisplayFormat: 'day dd month yyyy', vDayMajorDateDisplayFormat: 'mon yyyy - Week ww', vWeekMinorDateDisplayFormat: 'dd mon', vShowTaskInfoLink: 1, vShowEndWeekDate: 0, vUseSingleCell: 10000, \n                // Even with setUseSingleCell using Hour format on such a large chart can cause issues in some browsers\n                vFormatArr: this.formats.slice(1) }, optionsBefore));\n            if (this._data && this._data.forEach) {\n                this._data.forEach(row => {\n                    row.pGantt = g;\n                    g.AddTaskItemObject(row);\n                });\n            }\n            g.Draw();\n        }\n    }\n    // public get(): JSON {\n    //   return this.editor.get();\n    // }\n    setOptions(newOptions) {\n        if (this.editor) {\n            this.destroy();\n        }\n        this.optionsChanged = true;\n        this.options = newOptions;\n        this.ngOnInit();\n    }\n    destroy() {\n        // this.editor.destroy();\n    }\n};\nGanttEditorComponent.ɵfac = function GanttEditorComponent_Factory(t) { return new (t || GanttEditorComponent)(); };\nGanttEditorComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: GanttEditorComponent, selectors: [[\"ng-gantt\"]], viewQuery: function GanttEditorComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(_c0, true);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ganttEditorContainer = _t.first);\n    } }, inputs: { options: \"options\", format: \"format\", data: \"data\" }, decls: 2, vars: 1, consts: [[3, \"id\"], [\"ganttEditorContainer\", \"\"]], template: function GanttEditorComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", 0, 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"id\", ctx.id);\n    } }, encapsulation: 2 });\n__decorate([\n    ViewChild('ganttEditorContainer', { static: true }),\n    __metadata(\"design:type\", ElementRef)\n], GanttEditorComponent.prototype, \"ganttEditorContainer\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", GanttEditorOptions)\n], GanttEditorComponent.prototype, \"options\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], GanttEditorComponent.prototype, \"format\", void 0);\n__decorate([\n    Input('data'),\n    __metadata(\"design:type\", Object),\n    __metadata(\"design:paramtypes\", [Object])\n], GanttEditorComponent.prototype, \"data\", null);\nGanttEditorComponent = __decorate([ __metadata(\"design:paramtypes\", [])\n], GanttEditorComponent);\n\nvar NgGanttEditorModule_1;\nlet NgGanttEditorModule = NgGanttEditorModule_1 = class NgGanttEditorModule {\n    static forRoot() {\n        return {\n            ngModule: NgGanttEditorModule_1,\n            providers: []\n        };\n    }\n};\nNgGanttEditorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgGanttEditorModule });\nNgGanttEditorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgGanttEditorModule_Factory(t) { return new (t || NgGanttEditorModule)(); }, imports: [[\n            CommonModule\n        ]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(GanttEditorComponent, [{\n        type: Component,\n        args: [{\n                // tslint:disable-next-line:component-selector\n                selector: 'ng-gantt',\n                template: '<div [id]=\"id\" #ganttEditorContainer></div>'\n            }]\n    }], function () { return []; }, { options: [{\n            type: Input\n        }], format: [{\n            type: Input\n        }], data: [{\n            type: Input,\n            args: ['data']\n        }], ganttEditorContainer: [{\n            type: ViewChild,\n            args: ['ganttEditorContainer', { static: true }]\n        }] }); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgGanttEditorModule, { declarations: function () { return [GanttEditorComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [GanttEditorComponent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgGanttEditorModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule\n                ],\n                declarations: [\n                    GanttEditorComponent\n                ],\n                exports: [\n                    GanttEditorComponent\n                ]\n            }]\n    }], null, null); })();\n\nexport { GanttEditorComponent, GanttEditorOptions, NgGanttEditorModule };\n\n//# sourceMappingURL=ng-gantt.js.map","\"use strict\";\n/*\n    * Copyright (c) 2013-2018, Paul Geldart, Eduardo Rodrigues, Ricardo Cardoso and Mario Mol.\n    *\n    * Redistribution and use in source and binary forms, with or without\n    * modification, are permitted provided that the following conditions are met:\n    *     * Redistributions of source code must retain the above copyright\n    *       notice, this list of conditions and the following disclaimer.\n    *     * Redistributions in binary form must reproduce the above copyright\n    *       notice, this list of conditions and the following disclaimer in the\n    *       documentation and/or other materials provided with the distribution.\n    *     * Neither the name of AUTHORS nor the names of its contributors\n    *       may be used to endorse or promote products derived from this software\n    *       without specific prior written permission.\n    *\n    * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ''AS IS'' AND ANY EXPRESS OR\n    * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n    * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n    * IN NO EVENT SHALL AUTHORS BE LIABLE FOR ANY DIRECT,\n    * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n    * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n    * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n    * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n    * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n    * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n    This project is based on jsGantt 1.2, (which can be obtained from\n    https://code.google.com/p/jsgantt/) and remains under the original BSD license.\n    Copyright (c) 2009, Shlomy Gantz BlueBrick Inc.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JSGantt = void 0;\nvar events_1 = require(\"./events\");\nvar general_utils_1 = require(\"./utils/general_utils\");\nvar xml_1 = require(\"./xml\");\nvar task_1 = require(\"./task\");\nvar draw_1 = require(\"./draw\");\nvar json_1 = require(\"./json\");\nvar date_utils_1 = require(\"./utils/date_utils\");\nif (!exports.JSGantt)\n    exports.JSGantt = {};\nexports.JSGantt.isIE = general_utils_1.isIE;\nexports.JSGantt.TaskItem = task_1.TaskItem;\nexports.JSGantt.GanttChart = draw_1.GanttChart;\nexports.JSGantt.updateFlyingObj = general_utils_1.updateFlyingObj;\nexports.JSGantt.showToolTip = events_1.showToolTip;\nexports.JSGantt.stripIds = general_utils_1.stripIds;\nexports.JSGantt.stripUnwanted = general_utils_1.stripUnwanted;\nexports.JSGantt.delayedHide = general_utils_1.delayedHide;\nexports.JSGantt.hideToolTip = general_utils_1.hideToolTip;\nexports.JSGantt.fadeToolTip = general_utils_1.fadeToolTip;\nexports.JSGantt.moveToolTip = general_utils_1.moveToolTip;\nexports.JSGantt.getZoomFactor = general_utils_1.getZoomFactor;\nexports.JSGantt.getOffset = general_utils_1.getOffset;\nexports.JSGantt.getScrollPositions = general_utils_1.getScrollPositions;\nexports.JSGantt.processRows = task_1.processRows;\nexports.JSGantt.sortTasks = task_1.sortTasks;\n// Used to determine the minimum date of all tasks and set lower bound based on format\nexports.JSGantt.getMinDate = date_utils_1.getMinDate;\n// Used to determine the maximum date of all tasks and set upper bound based on format\nexports.JSGantt.getMaxDate = date_utils_1.getMaxDate;\n// This function finds the document id of the specified object\nexports.JSGantt.findObj = general_utils_1.findObj;\nexports.JSGantt.changeFormat = general_utils_1.changeFormat;\n// Tasks\nexports.JSGantt.folder = events_1.folder;\nexports.JSGantt.hide = events_1.hide;\nexports.JSGantt.show = events_1.show;\nexports.JSGantt.taskLink = task_1.taskLink;\nexports.JSGantt.parseDateStr = date_utils_1.parseDateStr;\nexports.JSGantt.formatDateStr = date_utils_1.formatDateStr;\nexports.JSGantt.parseDateFormatStr = date_utils_1.parseDateFormatStr;\n// XML \nexports.JSGantt.parseXML = xml_1.parseXML;\nexports.JSGantt.parseXMLString = xml_1.parseXMLString;\nexports.JSGantt.findXMLNode = xml_1.findXMLNode;\nexports.JSGantt.getXMLNodeValue = xml_1.getXMLNodeValue;\nexports.JSGantt.AddXMLTask = xml_1.AddXMLTask;\n// JSON\nexports.JSGantt.parseJSON = json_1.parseJSON;\nexports.JSGantt.parseJSONString = json_1.parseJSONString;\nexports.JSGantt.addJSONTask = json_1.addJSONTask;\nexports.JSGantt.benchMark = general_utils_1.benchMark;\nexports.JSGantt.getIsoWeek = date_utils_1.getIsoWeek;\nexports.JSGantt.addListener = events_1.addListener;\nexports.JSGantt.addTooltipListeners = events_1.addTooltipListeners;\nexports.JSGantt.addThisRowListeners = events_1.addThisRowListeners;\nexports.JSGantt.addFolderListeners = events_1.addFolderListeners;\nexports.JSGantt.addFormatListeners = events_1.addFormatListeners;\nexports.JSGantt.addScrollListeners = events_1.addScrollListeners;\nexports.JSGantt.criticalPath = general_utils_1.criticalPath;\n//# sourceMappingURL=jsgantt.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getIsoWeek = exports.parseDateFormatStr = exports.formatDateStr = exports.parseDateStr = exports.coerceDate = exports.getMaxDate = exports.getMinDate = void 0;\n/**\n * DATES\n */\nexports.getMinDate = function (pList, pFormat, pMinDate) {\n    var vDate = new Date();\n    if (pList.length <= 0)\n        return pMinDate || vDate;\n    vDate.setTime((pMinDate && pMinDate.getTime()) || pList[0].getStart().getTime());\n    // Parse all Task Start dates to find min\n    for (var i = 0; i < pList.length; i++) {\n        if (pList[i].getStart().getTime() < vDate.getTime())\n            vDate.setTime(pList[i].getStart().getTime());\n        if (pList[i].getPlanStart() && pList[i].getPlanStart().getTime() < vDate.getTime())\n            vDate.setTime(pList[i].getPlanStart().getTime());\n    }\n    // Adjust min date to specific format boundaries (first of week or first of month)\n    if (pFormat == 'day') {\n        vDate.setDate(vDate.getDate() - 1);\n        while (vDate.getDay() % 7 != 1)\n            vDate.setDate(vDate.getDate() - 1);\n    }\n    else if (pFormat == 'week') {\n        vDate.setDate(vDate.getDate() - 1);\n        while (vDate.getDay() % 7 != 1)\n            vDate.setDate(vDate.getDate() - 1);\n    }\n    else if (pFormat == 'month') {\n        vDate.setDate(vDate.getDate() - 15);\n        while (vDate.getDate() > 1)\n            vDate.setDate(vDate.getDate() - 1);\n    }\n    else if (pFormat == 'quarter') {\n        vDate.setDate(vDate.getDate() - 31);\n        if (vDate.getMonth() == 0 || vDate.getMonth() == 1 || vDate.getMonth() == 2)\n            vDate.setFullYear(vDate.getFullYear(), 0, 1);\n        else if (vDate.getMonth() == 3 || vDate.getMonth() == 4 || vDate.getMonth() == 5)\n            vDate.setFullYear(vDate.getFullYear(), 3, 1);\n        else if (vDate.getMonth() == 6 || vDate.getMonth() == 7 || vDate.getMonth() == 8)\n            vDate.setFullYear(vDate.getFullYear(), 6, 1);\n        else if (vDate.getMonth() == 9 || vDate.getMonth() == 10 || vDate.getMonth() == 11)\n            vDate.setFullYear(vDate.getFullYear(), 9, 1);\n    }\n    else if (pFormat == 'hour') {\n        vDate.setHours(vDate.getHours() - 1);\n        while (vDate.getHours() % 6 != 0)\n            vDate.setHours(vDate.getHours() - 1);\n    }\n    if (pFormat == 'hour')\n        vDate.setMinutes(0, 0);\n    else\n        vDate.setHours(0, 0, 0);\n    return (vDate);\n};\nexports.getMaxDate = function (pList, pFormat, pMaxDate) {\n    var vDate = new Date();\n    if (pList.length <= 0)\n        return pMaxDate || vDate;\n    vDate.setTime((pMaxDate && pMaxDate.getTime()) || pList[0].getEnd().getTime());\n    // Parse all Task End dates to find max\n    for (var i = 0; i < pList.length; i++) {\n        if (pList[i].getEnd().getTime() > vDate.getTime())\n            vDate.setTime(pList[i].getEnd().getTime());\n        if (pList[i].getPlanEnd() && pList[i].getPlanEnd().getTime() > vDate.getTime())\n            vDate.setTime(pList[i].getPlanEnd().getTime());\n    }\n    // Adjust max date to specific format boundaries (end of week or end of month)\n    if (pFormat == 'day') {\n        vDate.setDate(vDate.getDate() + 1);\n        while (vDate.getDay() % 7 != 0)\n            vDate.setDate(vDate.getDate() + 1);\n    }\n    else if (pFormat == 'week') {\n        //For weeks, what is the last logical boundary?\n        vDate.setDate(vDate.getDate() + 1);\n        while (vDate.getDay() % 7 != 0)\n            vDate.setDate(vDate.getDate() + 1);\n    }\n    else if (pFormat == 'month') {\n        // Set to last day of current Month\n        while (vDate.getDate() > 1)\n            vDate.setDate(vDate.getDate() + 1);\n        vDate.setDate(vDate.getDate() - 1);\n    }\n    else if (pFormat == 'quarter') {\n        // Set to last day of current Quarter\n        if (vDate.getMonth() == 0 || vDate.getMonth() == 1 || vDate.getMonth() == 2)\n            vDate.setFullYear(vDate.getFullYear(), 2, 31);\n        else if (vDate.getMonth() == 3 || vDate.getMonth() == 4 || vDate.getMonth() == 5)\n            vDate.setFullYear(vDate.getFullYear(), 5, 30);\n        else if (vDate.getMonth() == 6 || vDate.getMonth() == 7 || vDate.getMonth() == 8)\n            vDate.setFullYear(vDate.getFullYear(), 8, 30);\n        else if (vDate.getMonth() == 9 || vDate.getMonth() == 10 || vDate.getMonth() == 11)\n            vDate.setFullYear(vDate.getFullYear(), 11, 31);\n    }\n    else if (pFormat == 'hour') {\n        if (vDate.getHours() == 0)\n            vDate.setDate(vDate.getDate() + 1);\n        vDate.setHours(vDate.getHours() + 1);\n        while (vDate.getHours() % 6 != 5)\n            vDate.setHours(vDate.getHours() + 1);\n    }\n    return (vDate);\n};\nexports.coerceDate = function (date) {\n    if (date instanceof Date) {\n        return date;\n    }\n    else {\n        var temp = new Date(date);\n        if (temp instanceof Date && !isNaN(temp.valueOf())) {\n            return temp;\n        }\n    }\n};\nexports.parseDateStr = function (pDateStr, pFormatStr) {\n    var vDate = new Date();\n    var vDateParts = pDateStr.split(/[^0-9]/);\n    if (pDateStr.length >= 10 && vDateParts.length >= 3) {\n        while (vDateParts.length < 5)\n            vDateParts.push(0);\n        switch (pFormatStr) {\n            case 'mm/dd/yyyy':\n                vDate = new Date(vDateParts[2], vDateParts[0] - 1, vDateParts[1], vDateParts[3], vDateParts[4]);\n                break;\n            case 'dd/mm/yyyy':\n                vDate = new Date(vDateParts[2], vDateParts[1] - 1, vDateParts[0], vDateParts[3], vDateParts[4]);\n                break;\n            case 'yyyy-mm-dd':\n                vDate = new Date(vDateParts[0], vDateParts[1] - 1, vDateParts[2], vDateParts[3], vDateParts[4]);\n                break;\n            case 'yyyy-mm-dd HH:MI:SS':\n                vDate = new Date(vDateParts[0], vDateParts[1] - 1, vDateParts[2], vDateParts[3], vDateParts[4], vDateParts[5]);\n                break;\n        }\n    }\n    return (vDate);\n};\nexports.formatDateStr = function (pDate, pDateFormatArr, pL) {\n    // Fix on issue #303 - getXMLTask is passing null as pDates\n    if (!pDate) {\n        return;\n    }\n    var vDateStr = '';\n    var vYear2Str = pDate.getFullYear().toString().substring(2, 4);\n    var vMonthStr = (pDate.getMonth() + 1) + '';\n    var vMonthArr = new Array(pL['january'], pL['february'], pL['march'], pL['april'], pL['maylong'], pL['june'], pL['july'], pL['august'], pL['september'], pL['october'], pL['november'], pL['december']);\n    var vDayArr = new Array(pL['sunday'], pL['monday'], pL['tuesday'], pL['wednesday'], pL['thursday'], pL['friday'], pL['saturday']);\n    var vMthArr = new Array(pL['jan'], pL['feb'], pL['mar'], pL['apr'], pL['may'], pL['jun'], pL['jul'], pL['aug'], pL['sep'], pL['oct'], pL['nov'], pL['dec']);\n    var vDyArr = new Array(pL['sun'], pL['mon'], pL['tue'], pL['wed'], pL['thu'], pL['fri'], pL['sat']);\n    for (var i = 0; i < pDateFormatArr.length; i++) {\n        switch (pDateFormatArr[i]) {\n            case 'dd':\n                if (pDate.getDate() < 10)\n                    vDateStr += '0'; // now fall through\n            case 'd':\n                vDateStr += pDate.getDate();\n                break;\n            case 'day':\n                vDateStr += vDyArr[pDate.getDay()];\n                break;\n            case 'DAY':\n                vDateStr += vDayArr[pDate.getDay()];\n                break;\n            case 'mm':\n                if (parseInt(vMonthStr, 10) < 10)\n                    vDateStr += '0'; // now fall through\n            case 'm':\n                vDateStr += vMonthStr;\n                break;\n            case 'mon':\n                vDateStr += vMthArr[pDate.getMonth()];\n                break;\n            case 'month':\n                vDateStr += vMonthArr[pDate.getMonth()];\n                break;\n            case 'yyyy':\n                vDateStr += pDate.getFullYear();\n                break;\n            case 'yy':\n                vDateStr += vYear2Str;\n                break;\n            case 'qq':\n                vDateStr += pL['qtr']; // now fall through\n            case 'q':\n                vDateStr += Math.floor(pDate.getMonth() / 3) + 1;\n                break;\n            case 'hh':\n                if ((((pDate.getHours() % 12) == 0) ? 12 : pDate.getHours() % 12) < 10)\n                    vDateStr += '0'; // now fall through\n            case 'h':\n                vDateStr += ((pDate.getHours() % 12) == 0) ? 12 : pDate.getHours() % 12;\n                break;\n            case 'HH':\n                if ((pDate.getHours()) < 10)\n                    vDateStr += '0'; // now fall through\n            case 'H':\n                vDateStr += (pDate.getHours());\n                break;\n            case 'MI':\n                if (pDate.getMinutes() < 10)\n                    vDateStr += '0'; // now fall through\n            case 'mi':\n                vDateStr += pDate.getMinutes();\n                break;\n            case 'SS':\n                if (pDate.getSeconds() < 10)\n                    vDateStr += '0'; // now fall through\n            case 'ss':\n                vDateStr += pDate.getSeconds();\n                break;\n            case 'pm':\n                vDateStr += ((pDate.getHours()) < 12) ? 'am' : 'pm';\n                break;\n            case 'PM':\n                vDateStr += ((pDate.getHours()) < 12) ? 'AM' : 'PM';\n                break;\n            case 'ww':\n                if (exports.getIsoWeek(pDate) < 10)\n                    vDateStr += '0'; // now fall through\n            case 'w':\n                vDateStr += exports.getIsoWeek(pDate);\n                break;\n            case 'week':\n                var vWeekNum = exports.getIsoWeek(pDate);\n                var vYear = pDate.getFullYear();\n                var vDayOfWeek = (pDate.getDay() == 0) ? 7 : pDate.getDay();\n                if (vWeekNum >= 52 && parseInt(vMonthStr, 10) === 1)\n                    vYear--;\n                if (vWeekNum == 1 && parseInt(vMonthStr, 10) === 12)\n                    vYear++;\n                if (vWeekNum < 10)\n                    vWeekNum = parseInt('0' + vWeekNum, 10);\n                vDateStr += vYear + '-W' + vWeekNum + '-' + vDayOfWeek;\n                break;\n            default:\n                if (pL[pDateFormatArr[i].toLowerCase()])\n                    vDateStr += pL[pDateFormatArr[i].toLowerCase()];\n                else\n                    vDateStr += pDateFormatArr[i];\n                break;\n        }\n    }\n    return vDateStr;\n};\nexports.parseDateFormatStr = function (pFormatStr) {\n    var vComponantStr = '';\n    var vCurrChar = '';\n    var vSeparators = new RegExp('[\\/\\\\ -.,\\'\":]');\n    var vDateFormatArray = new Array();\n    for (var i = 0; i < pFormatStr.length; i++) {\n        vCurrChar = pFormatStr.charAt(i);\n        if ((vCurrChar.match(vSeparators)) || (i + 1 == pFormatStr.length)) // separator or end of string\n         {\n            if ((i + 1 == pFormatStr.length) && (!(vCurrChar.match(vSeparators)))) // at end of string add any non-separator chars to the current component\n             {\n                vComponantStr += vCurrChar;\n            }\n            vDateFormatArray.push(vComponantStr);\n            if (vCurrChar.match(vSeparators))\n                vDateFormatArray.push(vCurrChar);\n            vComponantStr = '';\n        }\n        else {\n            vComponantStr += vCurrChar;\n        }\n    }\n    return vDateFormatArray;\n};\n/**\n * We have to compare against the monday of the first week of the year containing 04 jan *not* 01/01\n * 60*60*24*1000=86400000\n * @param pDate\n */\nexports.getIsoWeek = function (pDate) {\n    var dayMiliseconds = 86400000;\n    var keyDay = new Date(pDate.getFullYear(), 0, 4, 0, 0, 0);\n    var keyDayOfWeek = (keyDay.getDay() == 0) ? 6 : keyDay.getDay() - 1; // define monday as 0\n    var firstMondayYearTime = keyDay.getTime() - (keyDayOfWeek * dayMiliseconds);\n    var thisDate = new Date(pDate.getFullYear(), pDate.getMonth(), pDate.getDate(), 0, 0, 0); // This at 00:00:00\n    var thisTime = thisDate.getTime();\n    var daysFromFirstMonday = Math.round(((thisTime - firstMondayYearTime) / dayMiliseconds));\n    var lastWeek = 99;\n    var thisWeek = 99;\n    var firstMondayYear = new Date(firstMondayYearTime);\n    thisWeek = Math.ceil((daysFromFirstMonday + 1) / 7);\n    if (thisWeek <= 0)\n        thisWeek = exports.getIsoWeek(new Date(pDate.getFullYear() - 1, 11, 31, 0, 0, 0));\n    else if (thisWeek == 53 && (new Date(pDate.getFullYear(), 0, 1, 0, 0, 0)).getDay() != 4 && (new Date(pDate.getFullYear(), 11, 31, 0, 0, 0)).getDay() != 4)\n        thisWeek = 1;\n    return thisWeek;\n};\n//# sourceMappingURL=date_utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.includeGetSet = void 0;\nvar date_utils_1 = require(\"./utils/date_utils\");\nvar draw_columns_1 = require(\"./draw_columns\");\nexports.includeGetSet = function () {\n    /**\n     * SETTERS\n     */\n    this.setOptions = function (options) {\n        var keys = Object.keys(options);\n        for (var i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            var val = options[key];\n            if (key === 'vResources' || key === 'vColumnOrder') {\n                // ev = `this.set${key.substr(1)}(val)`;\n                this['set' + key.substr(1)](val);\n            }\n            else if (val instanceof Array) {\n                // ev = `this.set${key.substr(1)}(...val)`;\n                this['set' + key.substr(1)].apply(this, val);\n            }\n            else {\n                // ev = `this.set${key.substr(1)}(val)`;\n                this['set' + key.substr(1)](val);\n            }\n        }\n    };\n    this.setUseFade = function (pVal) { this.vUseFade = pVal; };\n    this.setUseMove = function (pVal) { this.vUseMove = pVal; };\n    this.setUseRowHlt = function (pVal) { this.vUseRowHlt = pVal; };\n    this.setUseToolTip = function (pVal) { this.vUseToolTip = pVal; };\n    this.setUseSort = function (pVal) { this.vUseSort = pVal; };\n    this.setUseSingleCell = function (pVal) { this.vUseSingleCell = pVal * 1; };\n    this.setFormatArr = function () {\n        var vValidFormats = 'hour day week month quarter';\n        this.vFormatArr = new Array();\n        for (var i = 0, j = 0; i < arguments.length; i++) {\n            if (vValidFormats.indexOf(arguments[i].toLowerCase()) != -1 && arguments[i].length > 1) {\n                this.vFormatArr[j++] = arguments[i].toLowerCase();\n                var vRegExp = new RegExp('(?:^|\\s)' + arguments[i] + '(?!\\S)', 'g');\n                vValidFormats = vValidFormats.replace(vRegExp, '');\n            }\n        }\n    };\n    this.setShowRes = function (pVal) { this.vShowRes = pVal; };\n    this.setShowDur = function (pVal) { this.vShowDur = pVal; };\n    this.setShowComp = function (pVal) { this.vShowComp = pVal; };\n    this.setShowStartDate = function (pVal) { this.vShowStartDate = pVal; };\n    this.setShowEndDate = function (pVal) { this.vShowEndDate = pVal; };\n    this.setShowPlanStartDate = function (pVal) { this.vShowPlanStartDate = pVal; };\n    this.setShowPlanEndDate = function (pVal) { this.vShowPlanEndDate = pVal; };\n    this.setShowCost = function (pVal) { this.vShowCost = pVal; };\n    this.setShowAddEntries = function (pVal) { this.vShowAddEntries = pVal; };\n    this.setShowTaskInfoRes = function (pVal) { this.vShowTaskInfoRes = pVal; };\n    this.setShowTaskInfoDur = function (pVal) { this.vShowTaskInfoDur = pVal; };\n    this.setShowTaskInfoComp = function (pVal) { this.vShowTaskInfoComp = pVal; };\n    this.setShowTaskInfoStartDate = function (pVal) { this.vShowTaskInfoStartDate = pVal; };\n    this.setShowTaskInfoEndDate = function (pVal) { this.vShowTaskInfoEndDate = pVal; };\n    this.setShowTaskInfoNotes = function (pVal) { this.vShowTaskInfoNotes = pVal; };\n    this.setShowTaskInfoLink = function (pVal) { this.vShowTaskInfoLink = pVal; };\n    this.setShowEndWeekDate = function (pVal) { this.vShowEndWeekDate = pVal; };\n    this.setShowWeekends = function (pVal) { this.vShowWeekends = pVal; };\n    this.setShowSelector = function () {\n        var vValidSelectors = 'top bottom';\n        this.vShowSelector = new Array();\n        for (var i = 0, j = 0; i < arguments.length; i++) {\n            if (vValidSelectors.indexOf(arguments[i].toLowerCase()) != -1 && arguments[i].length > 1) {\n                this.vShowSelector[j++] = arguments[i].toLowerCase();\n                var vRegExp = new RegExp('(?:^|\\s)' + arguments[i] + '(?!\\S)', 'g');\n                vValidSelectors = vValidSelectors.replace(vRegExp, '');\n            }\n        }\n    };\n    this.setShowDeps = function (pVal) { this.vShowDeps = pVal; };\n    this.setDateInputFormat = function (pVal) { this.vDateInputFormat = pVal; };\n    this.setDateTaskTableDisplayFormat = function (pVal) { this.vDateTaskTableDisplayFormat = date_utils_1.parseDateFormatStr(pVal); };\n    this.setDateTaskDisplayFormat = function (pVal) { this.vDateTaskDisplayFormat = date_utils_1.parseDateFormatStr(pVal); };\n    this.setHourMajorDateDisplayFormat = function (pVal) { this.vHourMajorDateDisplayFormat = date_utils_1.parseDateFormatStr(pVal); };\n    this.setHourMinorDateDisplayFormat = function (pVal) { this.vHourMinorDateDisplayFormat = date_utils_1.parseDateFormatStr(pVal); };\n    this.setDayMajorDateDisplayFormat = function (pVal) { this.vDayMajorDateDisplayFormat = date_utils_1.parseDateFormatStr(pVal); };\n    this.setDayMinorDateDisplayFormat = function (pVal) { this.vDayMinorDateDisplayFormat = date_utils_1.parseDateFormatStr(pVal); };\n    this.setWeekMajorDateDisplayFormat = function (pVal) { this.vWeekMajorDateDisplayFormat = date_utils_1.parseDateFormatStr(pVal); };\n    this.setWeekMinorDateDisplayFormat = function (pVal) { this.vWeekMinorDateDisplayFormat = date_utils_1.parseDateFormatStr(pVal); };\n    this.setMonthMajorDateDisplayFormat = function (pVal) { this.vMonthMajorDateDisplayFormat = date_utils_1.parseDateFormatStr(pVal); };\n    this.setMonthMinorDateDisplayFormat = function (pVal) { this.vMonthMinorDateDisplayFormat = date_utils_1.parseDateFormatStr(pVal); };\n    this.setQuarterMajorDateDisplayFormat = function (pVal) { this.vQuarterMajorDateDisplayFormat = date_utils_1.parseDateFormatStr(pVal); };\n    this.setQuarterMinorDateDisplayFormat = function (pVal) { this.vQuarterMinorDateDisplayFormat = date_utils_1.parseDateFormatStr(pVal); };\n    this.setCaptionType = function (pType) { this.vCaptionType = pType; };\n    this.setFormat = function (pFormat) {\n        this.vFormat = pFormat;\n        this.Draw();\n    };\n    this.setWorkingDays = function (workingDays) { this.vWorkingDays = workingDays; };\n    this.setMinGpLen = function (pMinGpLen) { this.vMinGpLen = pMinGpLen; };\n    this.setScrollTo = function (pDate) { this.vScrollTo = pDate; };\n    this.setHourColWidth = function (pWidth) { this.vHourColWidth = pWidth; };\n    this.setDayColWidth = function (pWidth) { this.vDayColWidth = pWidth; };\n    this.setWeekColWidth = function (pWidth) { this.vWeekColWidth = pWidth; };\n    this.setMonthColWidth = function (pWidth) { this.vMonthColWidth = pWidth; };\n    this.setQuarterColWidth = function (pWidth) { this.vQuarterColWidth = pWidth; };\n    this.setRowHeight = function (pHeight) { this.vRowHeight = pHeight; };\n    this.setLang = function (pLang) { if (this.vLangs[pLang])\n        this.vLang = pLang; };\n    this.setChartBody = function (pDiv) { if (typeof HTMLDivElement !== 'function' || pDiv instanceof HTMLDivElement)\n        this.vChartBody = pDiv; };\n    this.setChartHead = function (pDiv) { if (typeof HTMLDivElement !== 'function' || pDiv instanceof HTMLDivElement)\n        this.vChartHead = pDiv; };\n    this.setListBody = function (pDiv) { if (typeof HTMLDivElement !== 'function' || pDiv instanceof HTMLDivElement)\n        this.vListBody = pDiv; };\n    this.setChartTable = function (pTable) { if (typeof HTMLTableElement !== 'function' || pTable instanceof HTMLTableElement)\n        this.vChartTable = pTable; };\n    this.setLines = function (pDiv) { if (typeof HTMLDivElement !== 'function' || pDiv instanceof HTMLDivElement)\n        this.vLines = pDiv; };\n    this.setLineOptions = function (lineOptions) { this.vLineOptions = lineOptions; };\n    this.setTimer = function (pVal) { this.vTimer = pVal * 1; };\n    this.setTooltipDelay = function (pVal) { this.vTooltipDelay = pVal * 1; };\n    this.setTooltipTemplate = function (pVal) { this.vTooltipTemplate = pVal; };\n    this.setMinDate = function (pVal) { this.vMinDate = pVal; };\n    this.setMaxDate = function (pVal) { this.vMaxDate = pVal; };\n    this.addLang = function (pLang, pVals) {\n        if (!this.vLangs[pLang]) {\n            this.vLangs[pLang] = new Object();\n            for (var vKey in this.vLangs['en'])\n                this.vLangs[pLang][vKey] = (pVals[vKey]) ? document.createTextNode(pVals[vKey]).data : this.vLangs['en'][vKey];\n        }\n    };\n    this.setTotalHeight = function (pVal) { this.vTotalHeight = pVal; };\n    // EVENTS\n    this.setEvents = function (pEvents) { this.vEvents = pEvents; };\n    this.setEventsChange = function (pEventsChange) { this.vEventsChange = pEventsChange; };\n    this.setEventClickRow = function (fn) { this.vEventClickRow = fn; };\n    this.setEventClickCollapse = function (fn) { this.vEventClickCollapse = fn; };\n    this.setResources = function (resources) { this.vResources = resources; };\n    this.setAdditionalHeaders = function (headers) { this.vAdditionalHeaders = headers; };\n    this.setColumnOrder = function (order) { this.vColumnOrder = order; };\n    this.setEditable = function (editable) { this.vEditable = editable; };\n    this.setDebug = function (debug) { this.vDebug = debug; };\n    /**\n     * GETTERS\n     */\n    this.getDivId = function () { return this.vDivId; };\n    this.getUseFade = function () { return this.vUseFade; };\n    this.getUseMove = function () { return this.vUseMove; };\n    this.getUseRowHlt = function () { return this.vUseRowHlt; };\n    this.getUseToolTip = function () { return this.vUseToolTip; };\n    this.getUseSort = function () { return this.vUseSort; };\n    this.getUseSingleCell = function () { return this.vUseSingleCell; };\n    this.getFormatArr = function () { return this.vFormatArr; };\n    this.getShowRes = function () { return this.vShowRes; };\n    this.getShowDur = function () { return this.vShowDur; };\n    this.getShowComp = function () { return this.vShowComp; };\n    this.getShowStartDate = function () { return this.vShowStartDate; };\n    this.getShowEndDate = function () { return this.vShowEndDate; };\n    this.getShowPlanStartDate = function () { return this.vShowPlanStartDate; };\n    this.getShowPlanEndDate = function () { return this.vShowPlanEndDate; };\n    this.getShowCost = function () { return this.vShowCost; };\n    this.getShowAddEntries = function () { return this.vShowAddEntries; };\n    this.getShowTaskInfoRes = function () { return this.vShowTaskInfoRes; };\n    this.getShowTaskInfoDur = function () { return this.vShowTaskInfoDur; };\n    this.getShowTaskInfoComp = function () { return this.vShowTaskInfoComp; };\n    this.getShowTaskInfoStartDate = function () { return this.vShowTaskInfoStartDate; };\n    this.getShowTaskInfoEndDate = function () { return this.vShowTaskInfoEndDate; };\n    this.getShowTaskInfoNotes = function () { return this.vShowTaskInfoNotes; };\n    this.getShowTaskInfoLink = function () { return this.vShowTaskInfoLink; };\n    this.getShowEndWeekDate = function () { return this.vShowEndWeekDate; };\n    this.getShowWeekends = function () { return this.vShowWeekends; };\n    this.getShowSelector = function () { return this.vShowSelector; };\n    this.getShowDeps = function () { return this.vShowDeps; };\n    this.getDateInputFormat = function () { return this.vDateInputFormat; };\n    this.getDateTaskTableDisplayFormat = function () { return this.vDateTaskTableDisplayFormat; };\n    this.getDateTaskDisplayFormat = function () { return this.vDateTaskDisplayFormat; };\n    this.getHourMajorDateDisplayFormat = function () { return this.vHourMajorDateDisplayFormat; };\n    this.getHourMinorDateDisplayFormat = function () { return this.vHourMinorDateDisplayFormat; };\n    this.getDayMajorDateDisplayFormat = function () { return this.vDayMajorDateDisplayFormat; };\n    this.getDayMinorDateDisplayFormat = function () { return this.vDayMinorDateDisplayFormat; };\n    this.getWeekMajorDateDisplayFormat = function () { return this.vWeekMajorDateDisplayFormat; };\n    this.getWeekMinorDateDisplayFormat = function () { return this.vWeekMinorDateDisplayFormat; };\n    this.getMonthMajorDateDisplayFormat = function () { return this.vMonthMajorDateDisplayFormat; };\n    this.getMonthMinorDateDisplayFormat = function () { return this.vMonthMinorDateDisplayFormat; };\n    this.getQuarterMajorDateDisplayFormat = function () { return this.vQuarterMajorDateDisplayFormat; };\n    this.getQuarterMinorDateDisplayFormat = function () { return this.vQuarterMinorDateDisplayFormat; };\n    this.getCaptionType = function () { return this.vCaptionType; };\n    this.getMinGpLen = function () { return this.vMinGpLen; };\n    this.getScrollTo = function () { return this.vScrollTo; };\n    this.getHourColWidth = function () { return this.vHourColWidth; };\n    this.getDayColWidth = function () { return this.vDayColWidth; };\n    this.getWeekColWidth = function () { return this.vWeekColWidth; };\n    this.getMonthColWidth = function () { return this.vMonthColWidth; };\n    this.getQuarterColWidth = function () { return this.vQuarterColWidth; };\n    this.getRowHeight = function () { return this.vRowHeight; };\n    this.getChartBody = function () { return this.vChartBody; };\n    this.getChartHead = function () { return this.vChartHead; };\n    this.getListBody = function () { return this.vListBody; };\n    this.getChartTable = function () { return this.vChartTable; };\n    this.getLines = function () { return this.vLines; };\n    this.getTimer = function () { return this.vTimer; };\n    this.getMinDate = function () { return this.vMinDate; };\n    this.getMaxDate = function () { return this.vMaxDate; };\n    this.getTooltipDelay = function () { return this.vTooltipDelay; };\n    this.getList = function () { return this.vTaskList; };\n    //EVENTS\n    this.getEventsClickCell = function () { return this.vEvents; };\n    this.getEventsChange = function () { return this.vEventsChange; };\n    this.getEventClickRow = function () { return this.vEventClickRow; };\n    this.getEventClickCollapse = function () { return this.vEventClickCollapse; };\n    this.getResources = function () { return this.vResources; };\n    this.getAdditionalHeaders = function () { return this.vAdditionalHeaders; };\n    this.getColumnOrder = function () { return this.vColumnOrder || draw_columns_1.COLUMN_ORDER; };\n};\n//# sourceMappingURL=options.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.drawSelector = exports.sLine = exports.CalcTaskXY = exports.getArrayLocationByID = exports.newNode = exports.makeInput = void 0;\nvar events_1 = require(\"../events\");\nexports.makeInput = function (formattedValue, editable, type, value, choices) {\n    if (type === void 0) { type = 'text'; }\n    if (value === void 0) { value = null; }\n    if (choices === void 0) { choices = null; }\n    if (!value) {\n        value = formattedValue;\n    }\n    if (editable) {\n        switch (type) {\n            case 'date':\n                // Take timezone into account before converting to ISO String\n                value = value ? new Date(value.getTime() - (value.getTimezoneOffset() * 60000)).toISOString().split('T')[0] : '';\n                return \"<input class=\\\"gantt-inputtable\\\" type=\\\"date\\\" value=\\\"\" + value + \"\\\">\";\n            case 'resource':\n                if (choices) {\n                    var found = choices.filter(function (c) { return c.id == value || c.name == value; });\n                    if (found && found.length > 0) {\n                        value = found[0].id;\n                    }\n                    else {\n                        choices.push({ id: value, name: value });\n                    }\n                    return \"<select>\" + choices.map(function (c) { return \"<option value=\\\"\" + c.id + \"\\\" \" + (value == c.id ? 'selected' : '') + \" >\" + c.name + \"</option>\"; }).join('') + \"</select>\";\n                }\n                else {\n                    return \"<input class=\\\"gantt-inputtable\\\" type=\\\"text\\\" value=\\\"\" + (value ? value : '') + \"\\\">\";\n                }\n            case 'cost':\n                return \"<input class=\\\"gantt-inputtable\\\" type=\\\"number\\\" max=\\\"100\\\" min=\\\"0\\\" value=\\\"\" + (value ? value : '') + \"\\\">\";\n            default:\n                return \"<input class=\\\"gantt-inputtable\\\" value=\\\"\" + (value ? value : '') + \"\\\">\";\n        }\n    }\n    else {\n        return formattedValue;\n    }\n};\nexports.newNode = function (pParent, pNodeType, pId, pClass, pText, pWidth, pLeft, pDisplay, pColspan, pAttribs) {\n    if (pId === void 0) { pId = null; }\n    if (pClass === void 0) { pClass = null; }\n    if (pText === void 0) { pText = null; }\n    if (pWidth === void 0) { pWidth = null; }\n    if (pLeft === void 0) { pLeft = null; }\n    if (pDisplay === void 0) { pDisplay = null; }\n    if (pColspan === void 0) { pColspan = null; }\n    if (pAttribs === void 0) { pAttribs = null; }\n    var vNewNode = pParent.appendChild(document.createElement(pNodeType));\n    if (pAttribs) {\n        for (var i = 0; i + 1 < pAttribs.length; i += 2) {\n            vNewNode.setAttribute(pAttribs[i], pAttribs[i + 1]);\n        }\n    }\n    if (pId)\n        vNewNode.id = pId; // I wish I could do this with setAttribute but older IEs don't play nice\n    if (pClass)\n        vNewNode.className = pClass;\n    if (pWidth)\n        vNewNode.style.width = (isNaN(pWidth * 1)) ? pWidth : pWidth + 'px';\n    if (pLeft)\n        vNewNode.style.left = (isNaN(pLeft * 1)) ? pLeft : pLeft + 'px';\n    if (pText) {\n        if (pText.indexOf && pText.indexOf('<') === -1) {\n            vNewNode.appendChild(document.createTextNode(pText));\n        }\n        else {\n            vNewNode.insertAdjacentHTML('beforeend', pText);\n        }\n    }\n    if (pDisplay)\n        vNewNode.style.display = pDisplay;\n    if (pColspan)\n        vNewNode.colSpan = pColspan;\n    return vNewNode;\n};\nexports.getArrayLocationByID = function (pId) {\n    var vList = this.getList();\n    for (var i = 0; i < vList.length; i++) {\n        if (vList[i].getID() == pId)\n            return i;\n    }\n    return -1;\n};\nexports.CalcTaskXY = function () {\n    var vID;\n    var vList = this.getList();\n    var vBarDiv;\n    var vTaskDiv;\n    var vParDiv;\n    var vLeft, vTop, vWidth;\n    var vHeight = Math.floor((this.getRowHeight() / 2));\n    for (var i = 0; i < vList.length; i++) {\n        vID = vList[i].getID();\n        vBarDiv = vList[i].getBarDiv();\n        vTaskDiv = vList[i].getTaskDiv();\n        if ((vList[i].getParItem() && vList[i].getParItem().getGroup() == 2)) {\n            vParDiv = vList[i].getParItem().getChildRow();\n        }\n        else\n            vParDiv = vList[i].getChildRow();\n        if (vBarDiv) {\n            vList[i].setStartX(vBarDiv.offsetLeft + 1);\n            vList[i].setStartY(vParDiv.offsetTop + vBarDiv.offsetTop + vHeight - 1);\n            vList[i].setEndX(vBarDiv.offsetLeft + vBarDiv.offsetWidth + 1);\n            vList[i].setEndY(vParDiv.offsetTop + vBarDiv.offsetTop + vHeight - 1);\n        }\n    }\n};\nexports.sLine = function (x1, y1, x2, y2, pClass) {\n    var vLeft = Math.min(x1, x2);\n    var vTop = Math.min(y1, y2);\n    var vWid = Math.abs(x2 - x1) + 1;\n    var vHgt = Math.abs(y2 - y1) + 1;\n    var vTmpDiv = document.createElement('div');\n    vTmpDiv.id = this.vDivId + 'line' + this.vDepId++;\n    vTmpDiv.style.position = 'absolute';\n    vTmpDiv.style.overflow = 'hidden';\n    vTmpDiv.style.zIndex = '0';\n    vTmpDiv.style.left = vLeft + 'px';\n    vTmpDiv.style.top = vTop + 'px';\n    vTmpDiv.style.width = vWid + 'px';\n    vTmpDiv.style.height = vHgt + 'px';\n    vTmpDiv.style.visibility = 'visible';\n    if (vWid == 1)\n        vTmpDiv.className = 'glinev';\n    else\n        vTmpDiv.className = 'glineh';\n    if (pClass)\n        vTmpDiv.className += ' ' + pClass;\n    this.getLines().appendChild(vTmpDiv);\n    if (this.vEvents.onLineDraw && typeof this.vEvents.onLineDraw === 'function') {\n        this.vEvents.onLineDraw(vTmpDiv);\n    }\n    return vTmpDiv;\n};\nexports.drawSelector = function (pPos) {\n    var vOutput = document.createDocumentFragment();\n    var vDisplay = false;\n    for (var i = 0; i < this.vShowSelector.length && !vDisplay; i++) {\n        if (this.vShowSelector[i].toLowerCase() == pPos.toLowerCase())\n            vDisplay = true;\n    }\n    if (vDisplay) {\n        var vTmpDiv = exports.newNode(vOutput, 'div', null, 'gselector', this.vLangs[this.vLang]['format'] + ':');\n        if (this.vFormatArr.join().toLowerCase().indexOf('hour') != -1)\n            events_1.addFormatListeners(this, 'hour', exports.newNode(vTmpDiv, 'span', this.vDivId + 'formathour' + pPos, 'gformlabel' + ((this.vFormat == 'hour') ? ' gselected' : ''), this.vLangs[this.vLang]['hour']));\n        if (this.vFormatArr.join().toLowerCase().indexOf('day') != -1)\n            events_1.addFormatListeners(this, 'day', exports.newNode(vTmpDiv, 'span', this.vDivId + 'formatday' + pPos, 'gformlabel' + ((this.vFormat == 'day') ? ' gselected' : ''), this.vLangs[this.vLang]['day']));\n        if (this.vFormatArr.join().toLowerCase().indexOf('week') != -1)\n            events_1.addFormatListeners(this, 'week', exports.newNode(vTmpDiv, 'span', this.vDivId + 'formatweek' + pPos, 'gformlabel' + ((this.vFormat == 'week') ? ' gselected' : ''), this.vLangs[this.vLang]['week']));\n        if (this.vFormatArr.join().toLowerCase().indexOf('month') != -1)\n            events_1.addFormatListeners(this, 'month', exports.newNode(vTmpDiv, 'span', this.vDivId + 'formatmonth' + pPos, 'gformlabel' + ((this.vFormat == 'month') ? ' gselected' : ''), this.vLangs[this.vLang]['month']));\n        if (this.vFormatArr.join().toLowerCase().indexOf('quarter') != -1)\n            events_1.addFormatListeners(this, 'quarter', exports.newNode(vTmpDiv, 'span', this.vDivId + 'formatquarter' + pPos, 'gformlabel' + ((this.vFormat == 'quarter') ? ' gselected' : ''), this.vLangs[this.vLang]['quarter']));\n    }\n    else {\n        exports.newNode(vOutput, 'div', null, 'gselector');\n    }\n    return vOutput;\n};\n//# sourceMappingURL=draw_utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.addListenerDependencies = exports.addListenerInputCell = exports.addListenerClickCell = exports.addScrollListeners = exports.addFormatListeners = exports.addFolderListeners = exports.updateGridHeaderWidth = exports.addThisRowListeners = exports.addTooltipListeners = exports.syncScroll = exports.removeListener = exports.addListener = exports.showToolTip = exports.mouseOut = exports.mouseOver = exports.show = exports.hide = exports.folder = void 0;\nvar general_utils_1 = require(\"./utils/general_utils\");\n// Function to open/close and hide/show children of specified task\nexports.folder = function (pID, ganttObj) {\n    var vList = ganttObj.getList();\n    ganttObj.clearDependencies(); // clear these first so slow rendering doesn't look odd\n    for (var i = 0; i < vList.length; i++) {\n        if (vList[i].getID() == pID) {\n            if (vList[i].getOpen() == 1) {\n                vList[i].setOpen(0);\n                exports.hide(pID, ganttObj);\n                if (general_utils_1.isIE())\n                    vList[i].getGroupSpan().innerText = '+';\n                else\n                    vList[i].getGroupSpan().textContent = '+';\n            }\n            else {\n                vList[i].setOpen(1);\n                exports.show(pID, 1, ganttObj);\n                if (general_utils_1.isIE())\n                    vList[i].getGroupSpan().innerText = '-';\n                else\n                    vList[i].getGroupSpan().textContent = '-';\n            }\n        }\n    }\n    var bd;\n    if (this.vDebug) {\n        bd = new Date();\n        console.info('after drawDependency', bd);\n    }\n    ganttObj.DrawDependencies(this.vDebug);\n    if (this.vDebug) {\n        var ad = new Date();\n        console.info('after drawDependency', ad, (ad.getTime() - bd.getTime()));\n    }\n};\nexports.hide = function (pID, ganttObj) {\n    var vList = ganttObj.getList();\n    var vID = 0;\n    for (var i = 0; i < vList.length; i++) {\n        if (vList[i].getParent() == pID) {\n            vID = vList[i].getID();\n            // it's unlikely but if the task list has been updated since\n            // the chart was drawn some of the rows may not exist\n            if (vList[i].getListChildRow())\n                vList[i].getListChildRow().style.display = 'none';\n            if (vList[i].getChildRow())\n                vList[i].getChildRow().style.display = 'none';\n            vList[i].setVisible(0);\n            if (vList[i].getGroup())\n                exports.hide(vID, ganttObj);\n        }\n    }\n};\n// Function to show children of specified task\nexports.show = function (pID, pTop, ganttObj) {\n    var vList = ganttObj.getList();\n    var vID = 0;\n    var vState = '';\n    for (var i = 0; i < vList.length; i++) {\n        if (vList[i].getParent() == pID) {\n            if (!vList[i].getParItem()) {\n                console.error(\"Cant find parent on who event (maybe problems with Task ID and Parent Id mixes?)\");\n            }\n            if (vList[i].getParItem().getGroupSpan()) {\n                if (general_utils_1.isIE())\n                    vState = vList[i].getParItem().getGroupSpan().innerText;\n                else\n                    vState = vList[i].getParItem().getGroupSpan().textContent;\n            }\n            i = vList.length;\n        }\n    }\n    for (var i = 0; i < vList.length; i++) {\n        if (vList[i].getParent() == pID) {\n            var vChgState = false;\n            vID = vList[i].getID();\n            if (pTop == 1 && vState == '+')\n                vChgState = true;\n            else if (vState == '-')\n                vChgState = true;\n            else if (vList[i].getParItem() && vList[i].getParItem().getGroup() == 2)\n                vList[i].setVisible(1);\n            if (vChgState) {\n                if (vList[i].getListChildRow())\n                    vList[i].getListChildRow().style.display = '';\n                if (vList[i].getChildRow())\n                    vList[i].getChildRow().style.display = '';\n                vList[i].setVisible(1);\n            }\n            if (vList[i].getGroup())\n                exports.show(vID, 0, ganttObj);\n        }\n    }\n};\nexports.mouseOver = function (pObj1, pObj2) {\n    if (this.getUseRowHlt()) {\n        pObj1.className += ' gitemhighlight';\n        pObj2.className += ' gitemhighlight';\n    }\n};\nexports.mouseOut = function (pObj1, pObj2) {\n    if (this.getUseRowHlt()) {\n        pObj1.className = pObj1.className.replace(/(?:^|\\s)gitemhighlight(?!\\S)/g, '');\n        pObj2.className = pObj2.className.replace(/(?:^|\\s)gitemhighlight(?!\\S)/g, '');\n    }\n};\nexports.showToolTip = function (pGanttChartObj, e, pContents, pWidth, pTimer) {\n    var vTtDivId = pGanttChartObj.getDivId() + 'JSGanttToolTip';\n    var vMaxW = 500;\n    var vMaxAlpha = 100;\n    var vShowing = pContents.id;\n    if (pGanttChartObj.getUseToolTip()) {\n        if (pGanttChartObj.vTool == null) {\n            pGanttChartObj.vTool = document.createElement('div');\n            pGanttChartObj.vTool.id = vTtDivId;\n            pGanttChartObj.vTool.className = 'JSGanttToolTip';\n            pGanttChartObj.vTool.vToolCont = document.createElement('div');\n            pGanttChartObj.vTool.vToolCont.id = vTtDivId + 'cont';\n            pGanttChartObj.vTool.vToolCont.className = 'JSGanttToolTipcont';\n            pGanttChartObj.vTool.vToolCont.setAttribute('showing', '');\n            pGanttChartObj.vTool.appendChild(pGanttChartObj.vTool.vToolCont);\n            document.body.appendChild(pGanttChartObj.vTool);\n            pGanttChartObj.vTool.style.opacity = 0;\n            pGanttChartObj.vTool.setAttribute('currentOpacity', 0);\n            pGanttChartObj.vTool.setAttribute('fadeIncrement', 10);\n            pGanttChartObj.vTool.setAttribute('moveSpeed', 10);\n            pGanttChartObj.vTool.style.filter = 'alpha(opacity=0)';\n            pGanttChartObj.vTool.style.visibility = 'hidden';\n            pGanttChartObj.vTool.style.left = Math.floor(((e) ? e.clientX : window.event.clientX) / 2) + 'px';\n            pGanttChartObj.vTool.style.top = Math.floor(((e) ? e.clientY : window.event.clientY) / 2) + 'px';\n            this.addListener('mouseover', function () { clearTimeout(pGanttChartObj.vTool.delayTimeout); }, pGanttChartObj.vTool);\n            this.addListener('mouseout', function () { general_utils_1.delayedHide(pGanttChartObj, pGanttChartObj.vTool, pTimer); }, pGanttChartObj.vTool);\n        }\n        clearTimeout(pGanttChartObj.vTool.delayTimeout);\n        var newHTML = pContents.innerHTML;\n        if (pGanttChartObj.vTool.vToolCont.getAttribute(\"content\") !== newHTML) {\n            pGanttChartObj.vTool.vToolCont.innerHTML = pContents.innerHTML;\n            // as we are allowing arbitrary HTML we should remove any tag ids to prevent duplication\n            general_utils_1.stripIds(pGanttChartObj.vTool.vToolCont);\n            pGanttChartObj.vTool.vToolCont.setAttribute(\"content\", newHTML);\n        }\n        if (pGanttChartObj.vTool.vToolCont.getAttribute('showing') != vShowing || pGanttChartObj.vTool.style.visibility != 'visible') {\n            if (pGanttChartObj.vTool.vToolCont.getAttribute('showing') != vShowing) {\n                pGanttChartObj.vTool.vToolCont.setAttribute('showing', vShowing);\n            }\n            pGanttChartObj.vTool.style.visibility = 'visible';\n            // Rather than follow the mouse just have it stay put\n            general_utils_1.updateFlyingObj(e, pGanttChartObj, pTimer);\n            pGanttChartObj.vTool.style.width = (pWidth) ? pWidth + 'px' : 'auto';\n            if (!pWidth && general_utils_1.isIE()) {\n                pGanttChartObj.vTool.style.width = pGanttChartObj.vTool.offsetWidth;\n            }\n            if (pGanttChartObj.vTool.offsetWidth > vMaxW) {\n                pGanttChartObj.vTool.style.width = vMaxW + 'px';\n            }\n        }\n        if (pGanttChartObj.getUseFade()) {\n            clearInterval(pGanttChartObj.vTool.fadeInterval);\n            pGanttChartObj.vTool.fadeInterval = setInterval(function () { general_utils_1.fadeToolTip(1, pGanttChartObj.vTool, vMaxAlpha); }, pTimer);\n        }\n        else {\n            pGanttChartObj.vTool.style.opacity = vMaxAlpha * 0.01;\n            pGanttChartObj.vTool.style.filter = 'alpha(opacity=' + vMaxAlpha + ')';\n        }\n    }\n};\nexports.addListener = function (eventName, handler, control) {\n    // Check if control is a string\n    if (control === String(control))\n        control = general_utils_1.findObj(control);\n    if (control.addEventListener) //Standard W3C\n     {\n        return control.addEventListener(eventName, handler, false);\n    }\n    else if (control.attachEvent) //IExplore\n     {\n        return control.attachEvent('on' + eventName, handler);\n    }\n    else {\n        return false;\n    }\n};\nexports.removeListener = function (eventName, handler, control) {\n    // Check if control is a string\n    if (control === String(control))\n        control = general_utils_1.findObj(control);\n    if (control.removeEventListener) {\n        //Standard W3C\n        return control.removeEventListener(eventName, handler, false);\n    }\n    else if (control.detachEvent) {\n        //IExplore\n        return control.attachEvent('on' + eventName, handler);\n    }\n    else {\n        return false;\n    }\n};\nexports.syncScroll = function (elements, attrName) {\n    var syncFlags = new Map(elements.map(function (e) { return [e, false]; }));\n    function scrollEvent(e) {\n        if (!syncFlags.get(e.target)) {\n            for (var _i = 0, elements_2 = elements; _i < elements_2.length; _i++) {\n                var el = elements_2[_i];\n                if (el !== e.target) {\n                    syncFlags.set(el, true);\n                    el[attrName] = e.target[attrName];\n                }\n            }\n        }\n        syncFlags.set(e.target, false);\n    }\n    for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\n        var el = elements_1[_i];\n        el.addEventListener('scroll', scrollEvent);\n    }\n};\nexports.addTooltipListeners = function (pGanttChart, pObj1, pObj2, callback) {\n    var isShowingTooltip = false;\n    exports.addListener('mouseover', function (e) {\n        if (isShowingTooltip || !callback) {\n            exports.showToolTip(pGanttChart, e, pObj2, null, pGanttChart.getTimer());\n        }\n        else if (callback) {\n            isShowingTooltip = true;\n            var promise = callback();\n            exports.showToolTip(pGanttChart, e, pObj2, null, pGanttChart.getTimer());\n            if (promise && promise.then) {\n                promise.then(function () {\n                    if (pGanttChart.vTool.vToolCont.getAttribute('showing') === pObj2.id &&\n                        pGanttChart.vTool.style.visibility === 'visible') {\n                        exports.showToolTip(pGanttChart, e, pObj2, null, pGanttChart.getTimer());\n                    }\n                });\n            }\n        }\n    }, pObj1);\n    exports.addListener('mouseout', function (e) {\n        var outTo = e.relatedTarget;\n        if (general_utils_1.isParentElementOrSelf(outTo, pObj1) || (pGanttChart.vTool && general_utils_1.isParentElementOrSelf(outTo, pGanttChart.vTool))) {\n            // not actually out\n        }\n        else {\n            isShowingTooltip = false;\n        }\n        general_utils_1.delayedHide(pGanttChart, pGanttChart.vTool, pGanttChart.getTimer());\n    }, pObj1);\n};\nexports.addThisRowListeners = function (pGanttChart, pObj1, pObj2) {\n    exports.addListener('mouseover', function () { pGanttChart.mouseOver(pObj1, pObj2); }, pObj1);\n    exports.addListener('mouseover', function () { pGanttChart.mouseOver(pObj1, pObj2); }, pObj2);\n    exports.addListener('mouseout', function () { pGanttChart.mouseOut(pObj1, pObj2); }, pObj1);\n    exports.addListener('mouseout', function () { pGanttChart.mouseOut(pObj1, pObj2); }, pObj2);\n};\nexports.updateGridHeaderWidth = function (pGanttChart) {\n    var head = pGanttChart.getChartHead();\n    var body = pGanttChart.getChartBody();\n    if (!head || !body)\n        return;\n    var isScrollVisible = body.scrollHeight > body.clientHeight;\n    if (isScrollVisible) {\n        head.style.width = \"calc(100% - \" + general_utils_1.getScrollbarWidth() + \"px)\";\n    }\n    else {\n        head.style.width = '100%';\n    }\n};\nexports.addFolderListeners = function (pGanttChart, pObj, pID) {\n    exports.addListener('click', function () {\n        exports.folder(pID, pGanttChart);\n        exports.updateGridHeaderWidth(pGanttChart);\n    }, pObj);\n};\nexports.addFormatListeners = function (pGanttChart, pFormat, pObj) {\n    exports.addListener('click', function () { general_utils_1.changeFormat(pFormat, pGanttChart); }, pObj);\n};\nexports.addScrollListeners = function (pGanttChart) {\n    exports.addListener('resize', function () { pGanttChart.getChartHead().scrollLeft = pGanttChart.getChartBody().scrollLeft; }, window);\n    exports.addListener('resize', function () {\n        pGanttChart.getListBody().scrollTop = pGanttChart.getChartBody().scrollTop;\n    }, window);\n};\nexports.addListenerClickCell = function (vTmpCell, vEvents, task, column) {\n    exports.addListener('click', function (e) {\n        if (e.target.classList.contains('gfoldercollapse') === false &&\n            vEvents[column] && typeof vEvents[column] === 'function') {\n            vEvents[column](task, e, vTmpCell, column);\n        }\n    }, vTmpCell);\n};\nexports.addListenerInputCell = function (vTmpCell, vEventsChange, callback, tasks, index, column, draw, event) {\n    if (draw === void 0) { draw = null; }\n    if (event === void 0) { event = 'blur'; }\n    var task = tasks[index];\n    if (vTmpCell.children[0] && vTmpCell.children[0].children && vTmpCell.children[0].children[0]) {\n        var tagName = vTmpCell.children[0].children[0].tagName;\n        var selectInputOrButton = tagName === 'SELECT' || tagName === 'INPUT' || tagName === 'BUTTON';\n        if (selectInputOrButton) {\n            exports.addListener(event, function (e) {\n                if (callback) {\n                    callback(task, e);\n                }\n                if (vEventsChange[column] && typeof vEventsChange[column] === 'function') {\n                    var q = vEventsChange[column](tasks, task, e, vTmpCell, vColumnsNames[column]);\n                    if (q && q.then) {\n                        q.then(function (e) { return draw(); });\n                    }\n                    else {\n                        draw();\n                    }\n                }\n                else {\n                    draw();\n                }\n            }, vTmpCell.children[0].children[0]);\n        }\n    }\n};\nexports.addListenerDependencies = function (vLineOptions) {\n    var elements = document.querySelectorAll('.gtaskbarcontainer');\n    for (var i = 0; i < elements.length; i++) {\n        var taskDiv = elements[i];\n        taskDiv.addEventListener('mouseover', function (e) {\n            toggleDependencies(e, vLineOptions);\n        });\n        taskDiv.addEventListener('mouseout', function (e) {\n            toggleDependencies(e, vLineOptions);\n        });\n    }\n};\nvar toggleDependencies = function (e, vLineOptions) {\n    var target = e.currentTarget;\n    var ids = target.getAttribute('id').split('_');\n    var style = vLineOptions && vLineOptions.borderStyleHover !== undefined ? vLineOptions.hoverStyle : 'groove';\n    if (e.type === 'mouseout') {\n        style = '';\n    }\n    if (ids.length > 1) {\n        var frameZones = Array.from(document.querySelectorAll(\".gDepId\" + ids[1]));\n        frameZones.forEach(function (c) {\n            c.style.borderStyle = style;\n        });\n        // document.querySelectorAll(`.gDepId${ids[1]}`).forEach((c: any) => {\n        // c.style.borderStyle = style;\n        // });\n    }\n};\nvar vColumnsNames = {\n    taskname: 'pName',\n    res: 'pRes',\n    dur: '',\n    comp: 'pComp',\n    start: 'pStart',\n    end: 'pEnd',\n    planstart: 'pPlanStart',\n    planend: 'pPlanEnd',\n    link: 'pLink',\n    cost: 'pCost',\n    mile: 'pMile',\n    group: 'pGroup',\n    parent: 'pParent',\n    open: 'pOpen',\n    depend: 'pDepend',\n    caption: 'pCaption',\n    note: 'pNotes'\n};\n//# sourceMappingURL=events.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.printChart = exports.calculateStartEndFromDepend = exports.makeRequestOldBrowsers = exports.makeRequest = exports.moveToolTip = exports.updateFlyingObj = exports.isParentElementOrSelf = exports.criticalPath = exports.hashKey = exports.hashString = exports.fadeToolTip = exports.hideToolTip = exports.isIE = exports.getOffset = exports.calculateCurrentDateOffset = exports.getScrollbarWidth = exports.getScrollPositions = exports.benchMark = exports.getZoomFactor = exports.delayedHide = exports.stripUnwanted = exports.stripIds = exports.changeFormat = exports.findObj = exports.internalPropertiesLang = exports.internalProperties = void 0;\nexports.internalProperties = ['pID', 'pName', 'pStart', 'pEnd', 'pClass', 'pLink', 'pMile', 'pRes', 'pComp', 'pGroup', 'pParent',\n    'pOpen', 'pDepend', 'pCaption', 'pNotes', 'pGantt', 'pCost', 'pPlanStart', 'pPlanEnd'];\nexports.internalPropertiesLang = {\n    'pID': 'id',\n    'pName': 'name',\n    'pStart': 'startdate',\n    'pEnd': 'enddate',\n    'pLink': 'link',\n    'pMile': 'mile',\n    'pRes': 'resource',\n    'pComp': 'comp',\n    'pGroup': 'group',\n    'pParent': 'parent',\n    'pOpen': 'open',\n    'pDepend': 'depend',\n    'pCaption': 'caption',\n    'pNotes': 'notes',\n    'pCost': 'cost',\n    'pPlanStart': 'planstartdate',\n    'pPlanEnd': 'planenddate'\n};\nexports.findObj = function (theObj, theDoc) {\n    if (theDoc === void 0) { theDoc = null; }\n    var p, i, foundObj;\n    if (!theDoc)\n        theDoc = document;\n    if (document.getElementById)\n        foundObj = document.getElementById(theObj);\n    return foundObj;\n};\nexports.changeFormat = function (pFormat, ganttObj) {\n    if (ganttObj)\n        ganttObj.setFormat(pFormat);\n    else\n        alert('Chart undefined');\n};\nexports.stripIds = function (pNode) {\n    for (var i = 0; i < pNode.childNodes.length; i++) {\n        if ('removeAttribute' in pNode.childNodes[i])\n            pNode.childNodes[i].removeAttribute('id');\n        if (pNode.childNodes[i].hasChildNodes())\n            exports.stripIds(pNode.childNodes[i]);\n    }\n};\nexports.stripUnwanted = function (pNode) {\n    var vAllowedTags = new Array('#text', 'p', 'br', 'ul', 'ol', 'li', 'div', 'span', 'img');\n    for (var i = 0; i < pNode.childNodes.length; i++) {\n        /* versions of IE<9 don't support indexOf on arrays so add trailing comma to the joined array and lookup value to stop substring matches */\n        if ((vAllowedTags.join().toLowerCase() + ',').indexOf(pNode.childNodes[i].nodeName.toLowerCase() + ',') == -1) {\n            pNode.replaceChild(document.createTextNode(pNode.childNodes[i].outerHTML), pNode.childNodes[i]);\n        }\n        if (pNode.childNodes[i].hasChildNodes())\n            exports.stripUnwanted(pNode.childNodes[i]);\n    }\n};\nexports.delayedHide = function (pGanttChartObj, pTool, pTimer) {\n    var vDelay = pGanttChartObj.getTooltipDelay() || 1500;\n    if (pTool)\n        pTool.delayTimeout = setTimeout(function () { exports.hideToolTip(pGanttChartObj, pTool, pTimer); }, vDelay);\n};\nexports.getZoomFactor = function () {\n    var vFactor = 1;\n    if (document.body.getBoundingClientRect) {\n        // rect is only in physical pixel size in IE before version 8\n        var vRect = document.body.getBoundingClientRect();\n        var vPhysicalW = vRect.right - vRect.left;\n        var vLogicalW = document.body.offsetWidth;\n        // the zoom level is always an integer percent value\n        vFactor = Math.round((vPhysicalW / vLogicalW) * 100) / 100;\n    }\n    return vFactor;\n};\nexports.benchMark = function (pItem) {\n    var vEndTime = new Date().getTime();\n    alert(pItem + ': Elapsed time: ' + ((vEndTime - this.vBenchTime) / 1000) + ' seconds.');\n    this.vBenchTime = new Date().getTime();\n};\nexports.getScrollPositions = function () {\n    var vScrollLeft = window.pageXOffset;\n    var vScrollTop = window.pageYOffset;\n    if (!('pageXOffset' in window)) // Internet Explorer before version 9\n     {\n        var vZoomFactor = exports.getZoomFactor();\n        vScrollLeft = Math.round(document.documentElement.scrollLeft / vZoomFactor);\n        vScrollTop = Math.round(document.documentElement.scrollTop / vZoomFactor);\n    }\n    return { x: vScrollLeft, y: vScrollTop };\n};\nvar scrollbarWidth = undefined;\nexports.getScrollbarWidth = function () {\n    if (scrollbarWidth)\n        return scrollbarWidth;\n    var outer = document.createElement('div');\n    outer.className = 'gscrollbar-calculation-container';\n    document.body.appendChild(outer);\n    // Creating inner element and placing it in the container\n    var inner = document.createElement('div');\n    outer.appendChild(inner);\n    // Calculating difference between container's full width and the child width\n    scrollbarWidth = (outer.offsetWidth - inner.offsetWidth);\n    // Removing temporary elements from the DOM\n    outer.parentNode.removeChild(outer);\n    return scrollbarWidth;\n};\nexports.calculateCurrentDateOffset = function (curTaskStart, curTaskEnd) {\n    var tmpTaskStart = Date.UTC(curTaskStart.getFullYear(), curTaskStart.getMonth(), curTaskStart.getDate(), curTaskStart.getHours(), 0, 0);\n    var tmpTaskEnd = Date.UTC(curTaskEnd.getFullYear(), curTaskEnd.getMonth(), curTaskEnd.getDate(), curTaskEnd.getHours(), 0, 0);\n    return (tmpTaskEnd - tmpTaskStart);\n};\nexports.getOffset = function (pStartDate, pEndDate, pColWidth, pFormat, pShowWeekends) {\n    var DAY_CELL_MARGIN_WIDTH = 3; // Cell margin for 'day' format\n    var WEEK_CELL_MARGIN_WIDTH = 3; // Cell margin for 'week' format\n    var MONTH_CELL_MARGIN_WIDTH = 3; // Cell margin for 'month' format\n    var QUARTER_CELL_MARGIN_WIDTH = 3; // Cell margin for 'quarter' format\n    var HOUR_CELL_MARGIN_WIDTH = 3; // Cell margin for 'hour' format\n    var vMonthDaysArr = new Array(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31);\n    var curTaskStart = new Date(pStartDate.getTime());\n    var curTaskEnd = new Date(pEndDate.getTime());\n    var vTaskRightPx = 0;\n    // Length of task in hours\n    var oneHour = 3600000;\n    var vTaskRight = exports.calculateCurrentDateOffset(curTaskStart, curTaskEnd) / oneHour;\n    var vPosTmpDate;\n    if (pFormat == 'day') {\n        if (!pShowWeekends) {\n            var start = curTaskStart;\n            var end = curTaskEnd;\n            var countWeekends = 0;\n            while (start < end) {\n                var day = start.getDay();\n                if (day === 6 || day == 0) {\n                    countWeekends++;\n                }\n                start = new Date(start.getTime() + 24 * oneHour);\n            }\n            vTaskRight -= countWeekends * 24;\n        }\n        vTaskRightPx = Math.ceil((vTaskRight / 24) * (pColWidth + DAY_CELL_MARGIN_WIDTH) - 1);\n    }\n    else if (pFormat == 'week') {\n        vTaskRightPx = Math.ceil((vTaskRight / (24 * 7)) * (pColWidth + WEEK_CELL_MARGIN_WIDTH) - 1);\n    }\n    else if (pFormat == 'month') {\n        var vMonthsDiff = (12 * (curTaskEnd.getFullYear() - curTaskStart.getFullYear())) + (curTaskEnd.getMonth() - curTaskStart.getMonth());\n        vPosTmpDate = new Date(curTaskEnd.getTime());\n        vPosTmpDate.setDate(curTaskStart.getDate());\n        var vDaysCrctn = (curTaskEnd.getTime() - vPosTmpDate.getTime()) / (86400000);\n        vTaskRightPx = Math.ceil((vMonthsDiff * (pColWidth + MONTH_CELL_MARGIN_WIDTH)) + (vDaysCrctn * (pColWidth / vMonthDaysArr[curTaskEnd.getMonth()])) - 1);\n    }\n    else if (pFormat == 'quarter') {\n        var vMonthsDiff = (12 * (curTaskEnd.getFullYear() - curTaskStart.getFullYear())) + (curTaskEnd.getMonth() - curTaskStart.getMonth());\n        vPosTmpDate = new Date(curTaskEnd.getTime());\n        vPosTmpDate.setDate(curTaskStart.getDate());\n        var vDaysCrctn = (curTaskEnd.getTime() - vPosTmpDate.getTime()) / (86400000);\n        vTaskRightPx = Math.ceil((vMonthsDiff * ((pColWidth + QUARTER_CELL_MARGIN_WIDTH) / 3)) + (vDaysCrctn * (pColWidth / 90)) - 1);\n    }\n    else if (pFormat == 'hour') {\n        // can't just calculate sum because of daylight savings changes\n        vPosTmpDate = new Date(curTaskEnd.getTime());\n        vPosTmpDate.setMinutes(curTaskStart.getMinutes(), 0);\n        var vMinsCrctn = (curTaskEnd.getTime() - vPosTmpDate.getTime()) / (3600000);\n        vTaskRightPx = Math.ceil((vTaskRight * (pColWidth + HOUR_CELL_MARGIN_WIDTH)) + (vMinsCrctn * (pColWidth)));\n    }\n    return vTaskRightPx;\n};\nexports.isIE = function () {\n    if (typeof document.all != 'undefined') {\n        if ('pageXOffset' in window)\n            return false; // give IE9 and above the benefit of the doubt!\n        else\n            return true;\n    }\n    else\n        return false;\n};\nexports.hideToolTip = function (pGanttChartObj, pTool, pTimer) {\n    if (pGanttChartObj.getUseFade()) {\n        clearInterval(pTool.fadeInterval);\n        pTool.fadeInterval = setInterval(function () { exports.fadeToolTip(-1, pTool, 0); }, pTimer);\n    }\n    else {\n        pTool.style.opacity = 0;\n        pTool.style.filter = 'alpha(opacity=0)';\n        pTool.style.visibility = 'hidden';\n        pTool.vToolCont.setAttribute(\"showing\", null);\n    }\n};\nexports.fadeToolTip = function (pDirection, pTool, pMaxAlpha) {\n    var vIncrement = parseInt(pTool.getAttribute('fadeIncrement'));\n    var vAlpha = pTool.getAttribute('currentOpacity');\n    var vCurAlpha = parseInt(vAlpha);\n    if ((vCurAlpha != pMaxAlpha && pDirection == 1) || (vCurAlpha != 0 && pDirection == -1)) {\n        var i = vIncrement;\n        if (pMaxAlpha - vCurAlpha < vIncrement && pDirection == 1) {\n            i = pMaxAlpha - vCurAlpha;\n        }\n        else if (vAlpha < vIncrement && pDirection == -1) {\n            i = vCurAlpha;\n        }\n        vAlpha = vCurAlpha + (i * pDirection);\n        pTool.style.opacity = vAlpha * 0.01;\n        pTool.style.filter = 'alpha(opacity=' + vAlpha + ')';\n        pTool.setAttribute('currentOpacity', vAlpha);\n    }\n    else {\n        clearInterval(pTool.fadeInterval);\n        if (pDirection == -1) {\n            pTool.style.opacity = 0;\n            pTool.style.filter = 'alpha(opacity=0)';\n            pTool.style.visibility = 'hidden';\n            pTool.vToolCont.setAttribute(\"showing\", null);\n        }\n    }\n};\nexports.hashString = function (key) {\n    if (!key) {\n        key = 'default';\n    }\n    key += '';\n    var hash = 5381;\n    for (var i = 0; i < key.length; i++) {\n        if (key.charCodeAt) {\n            // tslint:disable-next-line:no-bitwise\n            hash = (hash << 5) + hash + key.charCodeAt(i);\n        }\n        // tslint:disable-next-line:no-bitwise\n        hash = hash & hash;\n    }\n    // tslint:disable-next-line:no-bitwise\n    return hash >>> 0;\n};\nexports.hashKey = function (key) {\n    return this.hashString(key);\n};\nexports.criticalPath = function (tasks) {\n    var path = {};\n    // calculate duration\n    tasks.forEach(function (task) {\n        task.duration = new Date(task.pEnd).getTime() - new Date(task.pStart).getTime();\n    });\n    tasks.forEach(function (task) {\n        if (!path[task.pID]) {\n            path[task.pID] = task;\n        }\n        if (!path[task.pParent]) {\n            path[task.pParent] = {\n                childrens: []\n            };\n        }\n        if (!path[task.pID].childrens) {\n            path[task.pID].childrens = [];\n        }\n        path[task.pParent].childrens.push(task);\n        var max = path[task.pParent].childrens[0].duration;\n        path[task.pParent].childrens.forEach(function (t) {\n            if (t.duration > max) {\n                max = t.duration;\n            }\n        });\n        path[task.pParent].duration = max;\n    });\n    var finalNodes = { 0: path[0] };\n    var node = path[0];\n    var _loop_1 = function () {\n        if (node.childrens.length > 0) {\n            var found_1 = node.childrens[0];\n            var max_1 = found_1.duration;\n            node.childrens.forEach(function (c) {\n                if (c.duration > max_1) {\n                    found_1 = c;\n                    max_1 = c.duration;\n                }\n            });\n            finalNodes[found_1.pID] = found_1;\n            node = found_1;\n        }\n        else {\n            node = null;\n        }\n    };\n    while (node) {\n        _loop_1();\n    }\n};\nfunction isParentElementOrSelf(child, parent) {\n    while (child) {\n        if (child === parent)\n            return true;\n        child = child.parentElement;\n    }\n}\nexports.isParentElementOrSelf = isParentElementOrSelf;\nexports.updateFlyingObj = function (e, pGanttChartObj, pTimer) {\n    var vCurTopBuf = 3;\n    var vCurLeftBuf = 5;\n    var vCurBotBuf = 3;\n    var vCurRightBuf = 15;\n    var vMouseX = (e) ? e.clientX : window.event.clientX;\n    var vMouseY = (e) ? e.clientY : window.event.clientY;\n    var vViewportX = document.documentElement.clientWidth || document.getElementsByTagName('body')[0].clientWidth;\n    var vViewportY = document.documentElement.clientHeight || document.getElementsByTagName('body')[0].clientHeight;\n    var vNewX = vMouseX;\n    var vNewY = vMouseY;\n    var screenX = screen.availWidth || window.innerWidth;\n    var screenY = screen.availHeight || window.innerHeight;\n    var vOldX = parseInt(pGanttChartObj.vTool.style.left);\n    var vOldY = parseInt(pGanttChartObj.vTool.style.top);\n    if (navigator.appName.toLowerCase() == 'microsoft internet explorer') {\n        // the clientX and clientY properties include the left and top borders of the client area\n        vMouseX -= document.documentElement.clientLeft;\n        vMouseY -= document.documentElement.clientTop;\n        var vZoomFactor = exports.getZoomFactor();\n        if (vZoomFactor != 1) { // IE 7 at non-default zoom level\n            vMouseX = Math.round(vMouseX / vZoomFactor);\n            vMouseY = Math.round(vMouseY / vZoomFactor);\n        }\n    }\n    var vScrollPos = exports.getScrollPositions();\n    /* Code for positioned right of the mouse by default*/\n    /*\n    if (vMouseX+vCurRightBuf+pGanttChartObj.vTool.offsetWidth>vViewportX)\n    {\n        if (vMouseX-vCurLeftBuf-pGanttChartObj.vTool.offsetWidth<0) vNewX=vScrollPos.x;\n        else vNewX=vMouseX+vScrollPos.x-vCurLeftBuf-pGanttChartObj.vTool.offsetWidth;\n    }\n    else vNewX=vMouseX+vScrollPos.x+vCurRightBuf;\n    */\n    /* Code for positioned left of the mouse by default */\n    if (vMouseX - vCurLeftBuf - pGanttChartObj.vTool.offsetWidth < 0) {\n        if (vMouseX + vCurRightBuf + pGanttChartObj.vTool.offsetWidth > vViewportX)\n            vNewX = vScrollPos.x;\n        else\n            vNewX = vMouseX + vScrollPos.x + vCurRightBuf;\n    }\n    else\n        vNewX = vMouseX + vScrollPos.x - vCurLeftBuf - pGanttChartObj.vTool.offsetWidth;\n    /* Code for positioned below the mouse by default */\n    if (vMouseY + vCurBotBuf + pGanttChartObj.vTool.offsetHeight > vViewportY) {\n        if (vMouseY - vCurTopBuf - pGanttChartObj.vTool.offsetHeight < 0)\n            vNewY = vScrollPos.y;\n        else\n            vNewY = vMouseY + vScrollPos.y - vCurTopBuf - pGanttChartObj.vTool.offsetHeight;\n    }\n    else\n        vNewY = vMouseY + vScrollPos.y + vCurBotBuf;\n    /* Code for positioned above the mouse by default */\n    /*\n    if (vMouseY-vCurTopBuf-pGanttChartObj.vTool.offsetHeight<0)\n    {\n        if (vMouseY+vCurBotBuf+pGanttChartObj.vTool.offsetHeight>vViewportY) vNewY=vScrollPos.y;\n        else vNewY=vMouseY+vScrollPos.y+vCurBotBuf;\n    }\n    else vNewY=vMouseY+vScrollPos.y-vCurTopBuf-pGanttChartObj.vTool.offsetHeight;\n    */\n    var outViewport = Math.abs(vOldX - vNewX) > screenX || Math.abs(vOldY - vNewY) > screenY;\n    if (pGanttChartObj.getUseMove() && !outViewport) {\n        clearInterval(pGanttChartObj.vTool.moveInterval);\n        pGanttChartObj.vTool.moveInterval = setInterval(function () { exports.moveToolTip(vNewX, vNewY, pGanttChartObj.vTool, pTimer); }, pTimer);\n    }\n    else {\n        pGanttChartObj.vTool.style.left = vNewX + 'px';\n        pGanttChartObj.vTool.style.top = vNewY + 'px';\n    }\n};\nexports.moveToolTip = function (pNewX, pNewY, pTool, timer) {\n    var vSpeed = parseInt(pTool.getAttribute('moveSpeed'));\n    var vOldX = parseInt(pTool.style.left);\n    var vOldY = parseInt(pTool.style.top);\n    if (pTool.style.visibility != 'visible') {\n        pTool.style.left = pNewX + 'px';\n        pTool.style.top = pNewY + 'px';\n        clearInterval(pTool.moveInterval);\n    }\n    else {\n        if (pNewX != vOldX && pNewY != vOldY) {\n            vOldX += Math.ceil((pNewX - vOldX) / vSpeed);\n            vOldY += Math.ceil((pNewY - vOldY) / vSpeed);\n            pTool.style.left = vOldX + 'px';\n            pTool.style.top = vOldY + 'px';\n        }\n        else {\n            clearInterval(pTool.moveInterval);\n        }\n    }\n};\nexports.makeRequest = function (pFile, json, vDebug) {\n    if (json === void 0) { json = true; }\n    if (vDebug === void 0) { vDebug = false; }\n    if (window.fetch) {\n        var f = fetch(pFile);\n        if (json) {\n            return f.then(function (res) { return res.json(); });\n        }\n        else {\n            return f;\n        }\n    }\n    else {\n        return exports.makeRequestOldBrowsers(pFile, vDebug)\n            .then(function (xhttp) {\n            if (json) {\n                var jsonObj = JSON.parse(xhttp.response);\n                return jsonObj;\n            }\n            else {\n                var xmlDoc = xhttp.responseXML;\n                return xmlDoc;\n            }\n        });\n    }\n};\nexports.makeRequestOldBrowsers = function (pFile, vDebug) {\n    if (vDebug === void 0) { vDebug = false; }\n    return new Promise(function (resolve, reject) {\n        var bd;\n        if (vDebug) {\n            bd = new Date();\n            console.info('before jsonparse', bd);\n        }\n        var xhttp;\n        if (window.XMLHttpRequest) {\n            xhttp = new XMLHttpRequest();\n        }\n        else { // IE 5/6\n            xhttp = new window.ActiveXObject('Microsoft.XMLHTTP');\n        }\n        xhttp.open('GET', pFile, true);\n        xhttp.send(null);\n        xhttp.onload = function (e) {\n            if (xhttp.readyState === 4) {\n                if (xhttp.status === 200) {\n                    // resolve(xhttp.responseText);\n                }\n                else {\n                    console.error(xhttp.statusText);\n                }\n                if (vDebug) {\n                    bd = new Date();\n                    console.info('before jsonparse', bd);\n                }\n                resolve(xhttp);\n            }\n        };\n        xhttp.onerror = function (e) {\n            reject(xhttp.statusText);\n        };\n    });\n};\nexports.calculateStartEndFromDepend = function (tasksList) {\n};\nexports.printChart = function (width, height, css) {\n    if (css === void 0) { css = undefined; }\n    if (css === undefined) {\n        css = // Default injected CSS\n            \"@media print {\\n        @page {\\n          size: \" + width + \"mm \" + height + \"mm;\\n        }\\n        /* set gantt container to the same width as the page */\\n        .gchartcontainer {\\n            width: \" + width + \"mm;\\n        }\\n    };\";\n    }\n    var $container = document.querySelector('.gchartcontainer');\n    $container.insertAdjacentHTML('afterbegin', \"<style>\" + css + \"</style>\");\n    // Remove the print CSS when the print dialog is closed\n    window.addEventListener('afterprint', function () {\n        $container.removeChild($container.children[0]);\n    }, { 'once': true });\n    // Trigger the print\n    window.print();\n};\n//# sourceMappingURL=general_utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JSGantt = void 0;\nvar jsGantt = require(\"./src/jsgantt\");\nmodule.exports = jsGantt.JSGantt;\nexports.JSGantt = jsGantt.JSGantt;\n//# sourceMappingURL=index.js.map"],"sourceRoot":"webpack:///"}