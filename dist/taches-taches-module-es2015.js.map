{"version":3,"sources":["./src/app/features/demarrage-projet-renovation/taches/update-taches/update-taches.component.scss","./src/app/features/demarrage-projet-renovation/taches/taches.component.ts","./src/app/features/demarrage-projet-renovation/taches/taches.component.html","./src/app/features/demarrage-projet-renovation/taches/update-taches/update-taches.component.ts","./src/app/features/demarrage-projet-renovation/taches/taches.module.ts","./src/app/features/demarrage-projet-renovation/taches/update-taches/update-taches.component.html","./src/app/features/demarrage-projet-renovation/taches/taches.component.scss","./src/app/features/demarrage-projet-renovation/taches/gestion-taches.services.ts"],"names":[],"mappings":"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","file":"taches-taches-module-es2015.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ1cGRhdGUtdGFjaGVzLmNvbXBvbmVudC5zY3NzIn0= */\";","import { GestionTachesComponent } from './gestion-taches/gestion-taches.component';\r\nimport { ListTacheService } from './../projet-user/user-projet.service';\r\nimport { AvancerTache, ProjetRenauvation } from './../../../shared/models/demarrage-projet/projet-renovation.model';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Route } from '@angular/compiler/src/core';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { Settings } from 'src/app/app.settings.model';\r\nimport { Tache } from 'src/app/shared/models/demarrage-projet/projet-renovation.model';\r\nimport { SnackBarService } from 'src/app/shared/services/SnackBar';\r\nimport { AppConfirmService } from 'src/app/shared/utils/app-confirm/app-confirm.service';\r\nimport { GestionTacheService } from './gestion-taches.services';\r\nimport { UpdateTachesComponent } from './update-taches/update-taches.component';\r\nimport { environment } from 'src/environments/environment';\r\nimport { DemarrageProjetRenovationComponent } from '../demarrage-projet-renovation.component';\r\nimport { TokenStorageService } from '../../login/_helper/localStorage';\r\nimport { ProjetStorageService } from 'src/app/shared/services/ProjetRenovation.localStorage';\r\nimport { blockTransition } from 'src/app/theme/utils/app-animation';\r\n\r\n@Component({\r\n  selector: 'app-taches',\r\n  templateUrl: './taches.component.html',\r\n  styleUrls: ['./taches.component.scss'],\r\n  providers: [ListTacheService],\r\n  animations: [ blockTransition ],\r\n  host: {\r\n    '[@blockTransition]': ''\r\n  }\r\n})\r\nexport class TachesComponent implements OnInit {\r\n  tacheList: Tache[] = [];\r\n  evolution= [0,25,50,75,100];\r\n  aFaire: Tache[] = [];\r\n  aReFaire: Tache[] = [];\r\n  valider: Tache[] = [];\r\n  enCours: Tache[] = [];\r\n  pourcentage:number;\r\n\r\n  id: number;\r\n  projet: ProjetRenauvation;\r\n  rechercheGeneral = '';\r\n  isLoadingResults = false;\r\n  public settings: Settings;\r\n  Gerant: number;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  displayedColumns =['appellation', 'description','status', 'dateD', 'DateF', 'user',  'action'];\r\n  dataSources = new MatTableDataSource<Tache>(this.tacheList);\r\n  constructor(private appSettings: AppSettings,private route: ActivatedRoute,\r\n    private userTache: ListTacheService,private projetStorage: ProjetStorageService,\r\n     private tacheService: GestionTacheService,private router: Router,private tokenService: TokenStorageService,\r\n    public dialog: MatDialog, private confirm: AppConfirmService, private snackBar: SnackBarService) {\r\n    this.settings = this.appSettings.settings; \r\n    this.projet = DemarrageProjetRenovationComponent.projetRenovation;\r\n    this.Gerant = parseInt(projetStorage.getGestionTache());\r\n    // this.id = this.route.snapshot.params.id;\r\n    // console.log(this.route.snapshot.parent)\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.aFaire= [];\r\n    this.aReFaire = [];\r\n    this.valider = [];\r\n    this.enCours= [];\r\n    if(this.Gerant ==1)\r\n    {\r\n      this.elementGerant();\r\n    }\r\n    else{\r\n      this.elementUser();\r\n    }\r\n  }\r\n  elementUser(){\r\n    this.isLoadingResults = true;\r\n    this.userTache.gettachess(this.projet.id).subscribe((data)=>{\r\n      this.tacheList = data;\r\n      this.dataSources = new MatTableDataSource<Tache>(this.tacheList);\r\n      this.tacheList.forEach((tache, index)=>{\r\n        if(tache.niveauAvancer == 'VALIDER')\r\n        {\r\n          this.valider.push(tache);\r\n        }\r\n        else if(tache.niveauAvancer === 'ENCOURS')\r\n        {\r\n          this.enCours.push(tache);\r\n        }\r\n        else if(tache.niveauAvancer == 'AREFAIRE')\r\n        {\r\n          this.aReFaire.push(tache);\r\n        }\r\n        else{\r\n          this.aFaire.push(tache);\r\n        }\r\n      })\r\n      //console.log(this.dataSources);\r\n      this.isLoadingResults = false;\r\n      this.dataSources.paginator = this.paginator;\r\n      this.dataSources.sort = this.sort;\r\n    },(error:HttpErrorResponse)=>{\r\n      if(error.status>300)\r\n      {\r\n        this.router.navigate([environment.FRONTEND_ROUTES.DASHBOARD]);\r\n      }\r\n      \r\n    })\r\n  }\r\n\r\nnombreJour(tache: Tache): number\r\n{\r\n    let temps = new Date(tache.dateFinition).getTime() - new Date(tache.dateDemarrage).getTime();\r\n    return temps/(1000*60*60*24);\r\n}\r\n\r\n  elementGerant(){\r\n    this.isLoadingResults = true;\r\n    this.tacheService.gettachess(this.projet.id).subscribe((data)=>{\r\n      this.tacheList = data;\r\n      this.dataSources = new MatTableDataSource<Tache>(this.tacheList);\r\n      this.tacheList.forEach((tache, index)=>{\r\n        if(tache.niveauAvancer == 'VALIDER')\r\n        {\r\n          this.valider.push(tache);\r\n        }\r\n        else if(tache.niveauAvancer == 'ENCOURS')\r\n        {\r\n          this.enCours.push(tache);\r\n        }\r\n        else if(tache.niveauAvancer == 'AREFAIRE')\r\n        {\r\n          this.aReFaire.push(tache);\r\n        }\r\n        else{\r\n          this.aFaire.push(tache);\r\n        }\r\n      })\r\n      //console.log(this.dataSources);\r\n      this.isLoadingResults = false;\r\n      this.dataSources.paginator = this.paginator;\r\n      this.dataSources.sort = this.sort;\r\n    },(error:HttpErrorResponse)=>{\r\n      if(error.status>300)\r\n      {\r\n        this.router.navigate([environment.FRONTEND_ROUTES.DASHBOARD]);\r\n      }\r\n      \r\n    })\r\n  }\r\n\r\n  drop(event: CdkDragDrop<string[]>, types) {\r\n    console.log(event.currentIndex)\r\n    this.isLoadingResults = true;\r\n    let tache: Tache;\r\n    if (event.previousContainer === event.container) {\r\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\r\n    } else {\r\n      \r\n      transferArrayItem(event.previousContainer.data,\r\n                        event.container.data,\r\n                        event.previousIndex,\r\n                        event.currentIndex);\r\n      if(types=='VALIDER')\r\n      {\r\n        tache = this.valider[event.currentIndex];\r\n      }\r\n      else if(types=='ENCOURS')\r\n      {\r\n        tache = this.enCours[event.currentIndex];\r\n      }\r\n      else if(types=='AREFAIRE')\r\n      {\r\n        tache =this.aReFaire[event.currentIndex];\r\n      }\r\n      else{\r\n        tache = this.aFaire[event.currentIndex];\r\n      }\r\n     // if(this.tokenService.getMenu()==tache.utilisateur.utilisateurs.id || tache.utilisateur.utilisateurs.profile.libelle.substil )\r\n\r\n      tache.niveauAvancer = types;\r\n      this.userTache.updatetaches(tache.id, tache).subscribe((data)=>{\r\n        console.log(data);\r\n      },(error:HttpErrorResponse)=>{\r\n        if(error.status<300)\r\n        {\r\n          this.isLoadingResults = false;\r\n          this.snackBar.openSnackBar(\"status de la tache changer avec success\", \"OK\",3000);\r\n        }\r\n        else{\r\n          this.isLoadingResults = false;\r\n          this.snackBar.openSnackBar(\"status de la tache non changer\", \"OK\",3000);\r\n          this.ngOnInit();\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  onChangePourcentage(event, tache: Tache)\r\n  {\r\n    console.log(event);\r\n    if(event>0)\r\n    {\r\n      if(String(event) === '100')\r\n      {\r\n        tache.niveauAvancer = 'VALIDER';\r\n        this.supprimerAndAssigneElemet(tache,this.enCours, this.valider);\r\n      }\r\n      this.userTache.updatetaches(tache.id, tache).subscribe((data)=>{\r\n      },(error:HttpErrorResponse)=>{\r\n        if(error.status<300)\r\n        {\r\n          this.snackBar.openSnackBar(\"status de la tache changer avec success\", \"OK\",3000);\r\n        }\r\n        else{\r\n          this.snackBar.openSnackBar(\"status de la tache non changer\", \"OK\",3000);\r\n          this.ngOnInit();\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  public supprimerAndAssigneElemet(element : Tache, tab1: Tache[], tab2:Tache[])\r\n  {\r\n    tab1.forEach((t, index) => {\r\n        if(t.id = element.id)\r\n        {\r\n          console.log(index);\r\n          tab1.splice(index,1);\r\n        }\r\n    });\r\n    tab2.push(element);\r\n  }\r\n\r\n  recherche() {\r\n    this.dataSources.filter = this.rechercheGeneral.trim().toLowerCase();\r\n  }\r\n\r\n  annulerRechercheGeneral()\r\n  {\r\n    this.rechercheGeneral = '';\r\n    this.recherche();\r\n  }\r\n\r\n  openDialog(tache): void {\r\n    const dialogRef = this.dialog.open(UpdateTachesComponent, {\r\n      width: '600px',\r\n      data: {tache: tache},\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result ==null)\r\n      {\r\n        this.ngOnInit();\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  voirPlus(tache): void {\r\n    const dialogRef = this.dialog.open(GestionTachesComponent, {\r\n      width: '600px',\r\n      data: {tache: tache},\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result ==null)\r\n      {\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  supprimerRenovation(index){\r\n    this.confirm.confirm({\r\n      title:\"Confirmation\",\r\n      message:`Voulez-vous supprimer cette taches ? `\r\n    }).subscribe(($choix)=> {\r\n\r\n      if($choix) {\r\n        this.isLoadingResults=true;\r\n        this.tacheService.deletetaches(index).subscribe(()=>{\r\n          \r\n        },\r\n        (error: HttpErrorResponse) => {\r\n              this.isLoadingResults=false;\r\n              if(error.status<300)\r\n              {\r\n                this.snackBar.openSnackBar(\"Element supprimé avec succès\", \"OK\",3000);\r\n                this.ngOnInit();\r\n              }\r\n              else{\r\n                this.snackBar.openSnackBar(\"Element non supprimer \", \"OK\",3000);\r\n              }\r\n              \r\n          });\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"\\r\\n    \\r\\n    <mat-tab-group mat-stretch-tabs class=\\\"header-card mat-elevation-z4 block p-0\\\">\\r\\n        <mat-tab label=\\\"Liste des taches\\\" *ngIf=\\\"Gerant==1\\\">\\r\\n            <div fxLayout=\\\"row wrap\\\" class=\\\" button-add\\\">\\r\\n                <div class=\\\"table-bouton-ajout\\\" >\\r\\n                    <div *ngIf=\\\"isLoadingResults\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"user-spinner mat-elevation-z8\\\">   \\r\\n                        <mat-spinner color=\\\"primary\\\"></mat-spinner>\\r\\n                      </div>\\r\\n                    <mat-button-toggle-group appearance=\\\"legacy\\\" >\\r\\n                        <mat-button-toggle (click)=\\\"openDialog(null)\\\" class=\\\"bg-primary\\\">\\r\\n                            <mat-icon>add_circle_outline</mat-icon>\\r\\n                        </mat-button-toggle>\\r\\n                    </mat-button-toggle-group>\\r\\n                </div>\\r\\n                    <div class=\\\"recherche\\\">\\r\\n                        <mat-form-field class=\\\"recherche\\\">\\r\\n                            <input matInput [(ngModel)]=\\\"rechercheGeneral\\\" placeholder=\\\"Rechercher generale...\\\" autocomplete=\\\"off\\\" (keyup)=\\\"recherche()\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                            <mat-icon matSuffix (click)=\\\"rechercheGeneral = ''; recherche()\\\" class=\\\"sycad-element-clickable\\\">clear</mat-icon>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n              </div>\\r\\n              <div fxLayout=\\\"row wrap\\\">\\r\\n                  <div fxFlex=\\\"100\\\" class=\\\"flex-p\\\"> \\r\\n                      <div class=\\\"example-container mat-elevation-z8\\\">\\r\\n                          <table mat-table [dataSource]=\\\"dataSources\\\" matSort>\\r\\n                        \\r\\n                            <!-- Name Column -->\\r\\n                            <ng-container matColumnDef=\\\"appellation\\\">\\r\\n                              <th mat-header-cell *matHeaderCellDef mat-sort-header> Appellation </th>\\r\\n                              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.appellation}} </td>\\r\\n                            </ng-container>\\r\\n                        \\r\\n                            <!-- Position Column -->\\r\\n                            <ng-container matColumnDef=\\\"description\\\">\\r\\n                              <th mat-header-cell *matHeaderCellDef mat-sort-header> Description </th>\\r\\n                              <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                                <button [matMenuTriggerFor]=\\\"descri\\\" mat-button color=\\\"warn\\\">Voir description</button>\\r\\n                                <mat-menu #descri=\\\"matMenu\\\">\\r\\n                                  <mat-list>\\r\\n                                      <mat-list-item>{{element.description}}</mat-list-item>\\r\\n                                  </mat-list>\\r\\n                                </mat-menu>\\r\\n                              </td>\\r\\n                            </ng-container>\\r\\n                        \\r\\n                            <!-- Weight Column -->\\r\\n                            <ng-container matColumnDef=\\\"status\\\">\\r\\n                              <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\\r\\n                              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.niveauAvancer}} </td>\\r\\n                            </ng-container>\\r\\n              \\r\\n                            <ng-container matColumnDef=\\\"dateD\\\">\\r\\n                              <th mat-header-cell *matHeaderCellDef > Date debut </th>\\r\\n                              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.dateDemarrage | date : 'dd LLLL yyyy'}} </td>\\r\\n                            </ng-container>\\r\\n                        \\r\\n                            <!-- Symbol Column -->\\r\\n                            <ng-container matColumnDef=\\\"DateF\\\">\\r\\n                              <th mat-header-cell *matHeaderCellDef> Date Fin </th>\\r\\n                              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.dateFinition | date : 'dd LLLL yyyy'}} </td>\\r\\n                            </ng-container>\\r\\n              \\r\\n                            <ng-container matColumnDef=\\\"user\\\">\\r\\n                              <th mat-header-cell *matHeaderCellDef mat-sort-header> user </th>\\r\\n                              <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                                  <button [matMenuTriggerFor]=\\\"user\\\" mat-icon-button>Voir+</button>\\r\\n                                  <mat-menu #user=\\\"matMenu\\\">\\r\\n                                    <mat-list>\\r\\n                                        <mat-list-item>Email: {{element.utilisateur.utilisateurs.email}}</mat-list-item>\\r\\n                                        <mat-list-item>Nom: {{element.utilisateur.utilisateurs.civilite}} {{element.utilisateur.utilisateurs.nom}} {{element.utilisateur.utilisateurs.prenom}}</mat-list-item>\\r\\n                                    </mat-list>\\r\\n                                  </mat-menu>\\r\\n                            </td>\\r\\n                            </ng-container>\\r\\n\\r\\n                            <ng-container matColumnDef=\\\"projet\\\">\\r\\n                              <th mat-header-cell *matHeaderCellDef> Projet </th>\\r\\n                              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id }} </td>\\r\\n                            </ng-container>\\r\\n                            \\r\\n                            <!-- Star Column -->\\r\\n                            <ng-container matColumnDef=\\\"action\\\" stickyEnd>\\r\\n                              <th mat-header-cell *matHeaderCellDef>Action</th>\\r\\n                              <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                                  <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" aria-label=\\\"Example icon-button with a menu\\\">\\r\\n                                      <mat-icon>more_vert</mat-icon>\\r\\n                                    </button>\\r\\n                                    <mat-menu #menu=\\\"matMenu\\\">\\r\\n                                      <button mat-menu-item (click)=\\\"openDialog(element)\\\">\\r\\n                                        <mat-icon>edite</mat-icon>\\r\\n                                        <span>Modifier</span>\\r\\n                                      </button>\\r\\n                                      <button mat-menu-item color=\\\"warn\\\" (click)=\\\"supprimerRenovation(element.id)\\\">\\r\\n                                        <mat-icon>delete</mat-icon>\\r\\n                                        <span>Supprimer</span>\\r\\n                                      </button>\\r\\n                                    </mat-menu>\\r\\n                              </td>\\r\\n                            </ng-container>\\r\\n                        \\r\\n                            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n                          </table>\\r\\n                          <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n                        </div>\\r\\n                  </div>\\r\\n              </div>\\r\\n        </mat-tab>\\r\\n        <mat-tab label=\\\"Gestion des taches\\\">\\r\\n          \\r\\n                <div fxLayout=\\\"row\\\"  fxLayout.lt-md=\\\"row wrap\\\">\\r\\n                  <div *ngIf=\\\"isLoadingResults\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"user-spinner mat-elevation-z8\\\">   \\r\\n                    <mat-spinner color=\\\"primary\\\"></mat-spinner>\\r\\n                  </div>\\r\\n              <mat-card\\r\\n              [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" \\r\\n              [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n              <mat-card-header fxLayoutAlign=\\\"center center\\\">\\r\\n                  <mat-card-title>\\r\\n                      Travail A Realiser\\r\\n                  </mat-card-title>\\r\\n              </mat-card-header>\\r\\n                  <mat-card-content>\\r\\n                      <div\\r\\n                        cdkDropList\\r\\n                        #aFaireList=\\\"cdkDropList\\\"\\r\\n                        [cdkDropListData]=\\\"aFaire\\\"\\r\\n                        [cdkDropListConnectedTo]=\\\"[encoursList,refaireList, validerList]\\\"\\r\\n                        class=\\\"example-list\\\"\\r\\n                        (cdkDropListDropped)=\\\"drop($event, 'AFAIRE')\\\">\\r\\n                          <div class=\\\"example-box init\\\" *ngFor=\\\"let item of aFaire\\\" fxLayout=\\\"column\\\" cdkDrag>\\r\\n                            <h4>{{item.appellation}}</h4>\\r\\n                            <p  class=\\\"w-100\\\"><i>date demarrage</i> : {{item.dateDemarrage | date : 'dd LLLL yyyy'}}</p>\\r\\n                            <p  class=\\\"w-100\\\"><i>Date finition </i>: {{item.dateFinition | date : 'dd LLLL yyyy'}} </p>\\r\\n                            <p class=\\\"w-100\\\"><i>Nombre de jour</i> : {{nombreJour(item)}} Jours</p>\\r\\n                            <p class=\\\"w-100\\\"><i>Assigné à</i> : {{item.utilisateur.utilisateurs.nom | uppercase}} {{item.utilisateur.utilisateurs.nom}}</p>\\r\\n                            <span fxLayoutAlign=\\\"end center\\\">\\r\\n                              <button mat-icon-button (click)=\\\"voirPlus(item)\\\">\\r\\n                                  voir+\\r\\n                              </button>\\r\\n                          </span>\\r\\n                          </div>\\r\\n                          <div class=\\\"example-box init\\\">\\r\\n                            \\r\\n                          </div>\\r\\n                      </div>\\r\\n                  </mat-card-content>\\r\\n              </mat-card>\\r\\n              <mat-card\\r\\n              [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" \\r\\n              [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n              <mat-card-header fxLayoutAlign=\\\"center center\\\">\\r\\n                  <mat-card-title>\\r\\n                      Travail En Cours\\r\\n                  </mat-card-title>\\r\\n              </mat-card-header>\\r\\n                  <mat-card-content>\\r\\n                    <div\\r\\n                        cdkDropList\\r\\n                        #encoursList=\\\"cdkDropList\\\"\\r\\n                        [cdkDropListData]=\\\"enCours\\\"\\r\\n                        [cdkDropListConnectedTo]=\\\"[aFaireList,refaireList, validerList]\\\"\\r\\n                        class=\\\"example-list\\\"\\r\\n                        (cdkDropListDropped)=\\\"drop($event, 'ENCOURS')\\\">\\r\\n                          <div class=\\\"example-box encours\\\" *ngFor=\\\"let item of enCours\\\" fxLayout=\\\"column\\\" cdkDrag>\\r\\n                            <h4>{{item.appellation}}</h4>\\r\\n                            <ng-select class=\\\"w-100\\\" [items]=\\\"evolution\\\"\\r\\n                            [(ngModel)]=\\\"item.tauxProgression\\\"\\r\\n                            (change)=\\\"onChangePourcentage($event,item)\\\"\\r\\n                            placeholder=\\\"Evolution de la tache\\\"\\r\\n                            >\\r\\n\\r\\n                            </ng-select>\\r\\n                            <p class=\\\"w-100\\\"><i>date demarrage</i> : {{item.dateDemarrage | date : 'dd LLLL yyyy'}}</p>\\r\\n                            <p class=\\\"w-100\\\"><i>Date finition </i>: {{item.dateFinition | date : 'dd LLLL yyyy'}} </p>\\r\\n                            <p class=\\\"w-100\\\"><i>Nombre de jour</i> : {{nombreJour(item)}} Jours</p>\\r\\n                            <p class=\\\"w-100\\\"><i>Assigné à</i> : {{item.utilisateur.utilisateurs.nom | uppercase}} {{item.utilisateur.utilisateurs.nom}}</p>\\r\\n                            <span fxLayoutAlign=\\\"end center\\\">\\r\\n                              <button mat-icon-button (click)=\\\"voirPlus(item)\\\">\\r\\n                                  voir+\\r\\n                              </button>\\r\\n                              </span>\\r\\n                          </div>\\r\\n\\r\\n                          <div class=\\\"example-box encours\\\">\\r\\n                            \\r\\n                          </div>\\r\\n                      </div>\\r\\n                  </mat-card-content>\\r\\n              </mat-card>\\r\\n\\r\\n              <mat-card\\r\\n              [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" \\r\\n              [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n              <mat-card-header fxLayoutAlign=\\\"center center\\\">\\r\\n                  <mat-card-title>\\r\\n                      Travail A Refaire\\r\\n                  </mat-card-title>\\r\\n              </mat-card-header>\\r\\n                  <mat-card-content>\\r\\n                    <div\\r\\n                    cdkDropList\\r\\n                    #refaireList=\\\"cdkDropList\\\"\\r\\n                    [cdkDropListData]=\\\"aReFaire\\\"\\r\\n                    [cdkDropListConnectedTo]=\\\"[aFaireList, encoursList, validerList]\\\"\\r\\n                    class=\\\"example-list\\\"\\r\\n                    (cdkDropListDropped)=\\\"drop($event, 'AREFAIRE')\\\">\\r\\n                      <div class=\\\"example-box revoir\\\" *ngFor=\\\"let item of aReFaire\\\" fxLayout=\\\"column\\\" cdkDrag>\\r\\n                        <h4>{{item.appellation}}</h4>\\r\\n                            <p class=\\\"w-100\\\"><i>date demarrage</i> : {{item.dateDemarrage | date : 'dd LLLL yyyy'}}</p>\\r\\n                            <p class=\\\"w-100\\\"><i>Date finition </i>: {{item.dateFinition | date : 'dd LLLL yyyy'}} </p>\\r\\n                            <p class=\\\"w-100\\\"><i>Nombre de jour</i> : {{nombreJour(item)}} Jours</p>\\r\\n                            <p class=\\\"w-100\\\"><i>Assigné à</i> : {{item.utilisateur.utilisateurs.nom | uppercase}} {{item.utilisateur.utilisateurs.nom}}</p>\\r\\n                            <span fxLayoutAlign=\\\"end center\\\">\\r\\n                              <button mat-icon-button (click)=\\\"voirPlus(item)\\\">\\r\\n                                  voir+\\r\\n                              </button>\\r\\n                            </span>\\r\\n                      </div>\\r\\n                      <div class=\\\"example-box revoir\\\">\\r\\n                            \\r\\n                      </div>\\r\\n                  </div>\\r\\n                  </mat-card-content>\\r\\n              </mat-card>\\r\\n\\r\\n              <mat-card\\r\\n              [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" \\r\\n              [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                  <mat-card-header fxLayoutAlign=\\\"center center\\\">\\r\\n                      <mat-card-title>\\r\\n                          Travail Valider\\r\\n                      </mat-card-title>\\r\\n                  </mat-card-header>\\r\\n                  <mat-card-content>\\r\\n                    <div\\r\\n                    cdkDropList\\r\\n                    #validerList=\\\"cdkDropList\\\"\\r\\n                    [cdkDropListData]=\\\"valider\\\"\\r\\n                    [cdkDropListConnectedTo]=\\\"[aFaireList, encoursList,refaireList]\\\"\\r\\n                    class=\\\"example-list\\\"\\r\\n                    (cdkDropListDropped)=\\\"drop($event, 'VALIDER')\\\">\\r\\n                      <div class=\\\"example-box valider\\\" *ngFor=\\\"let item of valider\\\" fxLayout=\\\"column\\\" cdkDrag>\\r\\n                        <h4>{{item.appellation}}</h4>\\r\\n                            <p class=\\\"w-100\\\"><i>date demarrage</i> : {{item.dateDemarrage | date : 'dd LLLL yyyy'}}</p>\\r\\n                            <p class=\\\"w-100\\\"><i>Date finition </i>: {{item.dateFinition | date : 'dd LLLL yyyy'}} </p>\\r\\n                            <p class=\\\"w-100\\\"><i>Nombre de jour</i> : {{nombreJour(item)}} Jours</p>\\r\\n                            <p class=\\\"w-100\\\"><i>Assigné à</i> : {{item.utilisateur.utilisateurs.nom | uppercase}} {{item.utilisateur.utilisateurs.nom}}</p>\\r\\n                            <span fxLayoutAlign=\\\"end center\\\">\\r\\n                              <button mat-icon-button (click)=\\\"voirPlus(item)\\\">\\r\\n                                  voir+\\r\\n                              </button>\\r\\n                           </span>\\r\\n                      </div>\\r\\n                      <div class=\\\"example-box valider\\\">\\r\\n                            \\r\\n                      </div>\\r\\n                  </div>\\r\\n                  </mat-card-content>\\r\\n              </mat-card>\\r\\n      </div>\\r\\n        </mat-tab>\\r\\n      </mat-tab-group>\\r\\n\";","import { Tache, UserAffecterProjet } from 'src/app/shared/models/demarrage-projet/projet-renovation.model';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { UserAffecterProjetRenovationServices } from 'src/app/features/user-affecter-projet-renovation/user-affecter-projet.service';\r\nimport { SnackBarService } from 'src/app/shared/services/SnackBar';\r\nimport { DemarrageProjetRenovationComponent } from '../../demarrage-projet-renovation.component';\r\nimport { GestionTacheService } from '../gestion-taches.services';\r\nimport { AppConfirmService } from 'src/app/shared/utils/app-confirm/app-confirm.service';\r\n\r\n@Component({\r\n  selector: 'app-update-taches',\r\n  templateUrl: './update-taches.component.html',\r\n  styleUrls: ['./update-taches.component.scss'],\r\n  providers: [UserAffecterProjetRenovationServices]\r\n})\r\nexport class UpdateTachesComponent implements OnInit {\r\n  tacheForm : FormGroup;\r\n  userList: UserAffecterProjet[] =[];\r\n  isLoadingResults=false;\r\n  constructor(private confirm: AppConfirmService,public dialogRef: MatDialogRef<UpdateTachesComponent>,private snackBar: SnackBarService,\r\n    public dialog: MatDialog, @Inject(MAT_DIALOG_DATA) public data: any,private fb: FormBuilder, private tacheService: GestionTacheService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.isLoadingResults=true;\r\n    this.tacheService.getUser(DemarrageProjetRenovationComponent.projetRenovation.id).subscribe((data)=>{\r\n      this.userList = data;\r\n      this.isLoadingResults=false;\r\n    });\r\n    this.init();\r\n  }\r\n\r\n  init(){\r\n      if(this.data.tache){\r\n        this.tacheForm = this.fb.group({\r\n          id:[this.data.tache.id],\r\n          appellation: [this.data.tache.appellation, Validators.required],\r\n          description: [this.data.tache.description, Validators.required],\r\n          dateDemarrage: [this.data.tache.dateDemarrage, Validators.required],\r\n          dateFinition: [this.data.tache.dateFinition, Validators.required],\r\n          utilisateur: [this.data.tache.utilisateur, Validators.required],\r\n          enregistre: [null],\r\n          niveauAvancer: this.data.tache.niveauAvancer,\r\n          sommeTache:[this.data.tache.sommeTache, Validators.required],\r\n          projetRenovation: [DemarrageProjetRenovationComponent.projetRenovation,],\r\n    })\r\n    }\r\n    else{\r\n      \r\n        this.tacheForm = this.fb.group({\r\n          id:[null],\r\n          appellation: [null, Validators.required],\r\n          description: [null, Validators.required],\r\n          dateDemarrage: [null, Validators.required],\r\n          dateFinition: [null, Validators.required],\r\n          utilisateur: [null, Validators.required],\r\n          enregistre: [null],\r\n          niveauAvancer: null,\r\n          sommeTache:[null, Validators.required],\r\n          projetRenovation: [DemarrageProjetRenovationComponent.projetRenovation,],\r\n    })\r\n    }\r\n  }\r\n\r\n  onSubmit(){\r\n    this.isLoadingResults=true;\r\n    this.tacheService.verifierTaches(this.tacheForm.value).subscribe((data)=>{\r\n       var list: Tache[] = data;\r\n      console.log(data);\r\n      if(list.length>0)\r\n      {\r\n        this.TachesExisteDeja();\r\n      }\r\n      else{\r\n        this.enregistrer();\r\n      }\r\n    },(error:HttpErrorResponse)=>{\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  TachesExisteDeja(){\r\n    this.confirm.confirm({\r\n      title:\"Conflit de Taches\",\r\n      message:\"Il y a deja une tache en cours selon la date choisi. Voulez-vous continuer ? \"\r\n    }).subscribe(($choix)=> {\r\n\r\n      if($choix) {\r\n        this.Remeniation();\r\n      }\r\n      else{\r\n        this.isLoadingResults=false;\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  Remeniation(){\r\n    this.confirm.confirm({\r\n      title:\"Comment Enregistrer la tache\",\r\n      message:` doit-on enregistrer la tache parallelement ou decaller les dates? `,\r\n      buttun1: `Enregistré simplement`,\r\n      buttun2:`Enregistré avec decallage`\r\n    }).subscribe(($choix)=> {\r\n\r\n      if($choix) {\r\n        this.tacheForm.get('enregistre').setValue(\"Decaller\");\r\n      }\r\n      else{\r\n        this.tacheForm.get('enregistre').setValue(\"Parallele\");\r\n      }\r\n      console.log(this.tacheForm.value)\r\n      this.enregistrer();\r\n    });\r\n  }\r\n\r\n\r\nenregistrer(){\r\n  if(this.data.tache){\r\n      this.tacheService.updatetaches(this.data.tache.id, this.tacheForm.value).subscribe( (data)=>{\r\n        this.isLoadingResults=false;\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n            this.isLoadingResults=false;\r\n            if(error.status<300)\r\n            {\r\n              this.dialogRef.close();\r\n              this.snackBar.openSnackBar(\"Element modifier  avec succès\", \"OK\",3000);\r\n            }\r\n            else{\r\n              this.snackBar.openSnackBar(\"Element non Ajouter car tache existe deja\", \"OK\",3000);\r\n            }\r\n            \r\n            \r\n        });\r\n    }\r\n    else{\r\n      this.tacheService.addtaches(this.tacheForm.value).subscribe( (data)=>{\r\n        //console.log(data);\r\n        this.isLoadingResults=false;\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n            this.isLoadingResults=false;\r\n            if(error.status<300)\r\n            {\r\n              this.dialogRef.close();\r\n              this.snackBar.openSnackBar(\"Element Ajouter  avec succès\", \"OK\",3000);\r\n            }\r\n            else{\r\n              this.snackBar.openSnackBar(\"Element non Ajouter car tache existe deja\", \"OK\",3000);\r\n            }\r\n            \r\n        });\r\n    }\r\n}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TachesComponent } from './taches.component';\r\nimport { UpdateTachesComponent } from './update-taches/update-taches.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { DropzoneModule } from 'ngx-dropzone-wrapper';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { DragulaModule } from 'ng2-dragula';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport { GestionTachesComponent } from './gestion-taches/gestion-taches.component';\r\nimport { GestionTacheService } from './gestion-taches.services';\r\n\r\nexport const routes = [\r\n  { path: '', component: TachesComponent, data: { breadcrumb: 'taches' } },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [TachesComponent, UpdateTachesComponent, GestionTachesComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    DropzoneModule,\r\n    NgxPaginationModule,\r\n    NgSelectModule,\r\n    DragDropModule\r\n  ],\r\n  providers: [\r\n    GestionTacheService\r\n  ],\r\n  exports:[\r\n    GestionTachesComponent\r\n  ]\r\n})\r\nexport class TachesModule { }\r\n","export default \"<div *ngIf=\\\"isLoadingResults\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"user-spinner\\\">   \\r\\n    <mat-spinner color=\\\"primary\\\"></mat-spinner>\\r\\n  </div>\\r\\n\\r\\n<div class=\\\"header\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" mat-dialog-title color=\\\"primary\\\">\\r\\n    <h3 *ngIf=\\\"data.tache\\\">Modifier Une tache</h3>\\r\\n    <h3 *ngIf=\\\"!data.tache\\\">AJouter Une tache</h3>\\r\\n</div>\\r\\n<div mat-dialog-content *ngIf=\\\"!isLoadingResults\\\">\\r\\n    <form [formGroup]=\\\"tacheForm\\\">\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start\\\" fxLayout.lt-md=\\\"row wrap\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                <mat-label>appellation de la tache</mat-label>\\r\\n                <input matInput #input  placeholder=\\\"Ex. Nougat\\\"  formControlName=\\\"appellation\\\">\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n            \\r\\n\\r\\n            <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                \\r\\n                    <mat-label>date de debut et de fin</mat-label>\\r\\n                    <mat-date-range-input [rangePicker]=\\\"picker\\\">\\r\\n                      <input matStartDate formControlName=\\\"dateDemarrage\\\" placeholder=\\\"Start date\\\">\\r\\n                      <input matEndDate formControlName=\\\"dateFinition\\\" placeholder=\\\"End date\\\">\\r\\n                    </mat-date-range-input>\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n                    <mat-date-range-picker #picker></mat-date-range-picker>\\r\\n                  \\r\\n                    <!-- <mat-error *ngIf=\\\"range.controls.dateDemarrage.hasError('matStartDateInvalid')\\\">Invalid start date</mat-error>\\r\\n                    <mat-error *ngIf=\\\"range.controls.dateFinition.hasError('matEndDateInvalid')\\\">Invalid end date</mat-error> -->\\r\\n            </mat-form-field>\\r\\n\\r\\n            <ng-select class=\\\"select\\\"  [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"100\\\" [fxFlex.xl]=\\\"100\\\" [items]=\\\"userList\\\"\\r\\n                   bindLabel=\\\"utilisateurs.email\\\"\\r\\n                   placeholder=\\\"Selectionner l'utilisateur pour la tache\\\"\\r\\n                   formControlName=\\\"utilisateur\\\">\\r\\n                   <ng-template ng-loadingspinner-tmp>\\r\\n                    <div class=\\\"lds-ellipsis\\\">\\r\\n                        <div></div>\\r\\n                        <div></div>\\r\\n                        <div></div>\\r\\n                        <div></div>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </ng-select>\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                <mat-label>Description de la tache</mat-label>\\r\\n                <textarea matInput placeholder=\\\"Description de la tache\\\" formControlName=\\\"description\\\" maxlength=\\\"300\\\"></textarea>\\r\\n                \\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                <mat-label>Budget reserver pour la tache</mat-label>\\r\\n                <input matInput type=\\\"number\\\" #input formControlName=\\\"sommeTache\\\" max=\\\"80000000\\\" min=\\\"0\\\">\\r\\n                <span matSuffix ><b>euros</b></span>\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\\r\\n<div mat-dialog-actions align=\\\"end\\\">\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n        <button mat-raised-button color=\\\"warn\\\" [mat-dialog-close]=\\\"tacheForm.value\\\" >Annuler</button>\\r\\n        <button mat-raised-button (click)=\\\"onSubmit()\\\" [disabled]=\\\"tacheForm.invalid\\\" color=\\\"primary\\\" >Enregistrer</button>\\r\\n    </div>\\r\\n</div>\";","export default \".example-container {\\n  width: 400px;\\n  max-width: 100%;\\n  margin: 0 25px 25px 0;\\n  display: inline-block;\\n  vertical-align: top;\\n}\\n\\n.containe {\\n  width: 100%;\\n}\\n\\n.example-list {\\n  border: solid 1px #ccc;\\n  min-height: 60px;\\n  background: white;\\n  border-radius: 4px;\\n  overflow: hidden;\\n  display: block;\\n  width: 100%;\\n}\\n\\n.example-box {\\n  padding: 20px 10px;\\n  border-bottom: solid 1px #ccc;\\n  color: rgba(0, 0, 0, 0.87);\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  justify-content: space-between;\\n  box-sizing: border-box;\\n  cursor: move;\\n  background: white;\\n  font-size: 14px;\\n}\\n\\n.cdk-drag-preview {\\n  box-sizing: border-box;\\n  border-radius: 4px;\\n  box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2), 0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12);\\n}\\n\\n.cdk-drag-placeholder {\\n  opacity: 0;\\n}\\n\\n.cdk-drag-animating {\\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\\n}\\n\\n.example-box:last-child {\\n  border: none;\\n}\\n\\n.example-list.cdk-drop-list-dragging .example-box:not(.cdk-drag-placeholder) {\\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\\n}\\n\\n.valider {\\n  border-left: 6px solid #09ac73;\\n  color: #09ac73;\\n  margin-bottom: 5px;\\n  font-weight: bold;\\n}\\n\\n.init {\\n  border-left: 6px solid #2206c2;\\n  color: #2206c2;\\n  margin-bottom: 5px;\\n  font-weight: bold;\\n}\\n\\n.encours {\\n  border-left: 6px solid #ec8b0b;\\n  color: #ec8b0b;\\n  margin-bottom: 5px;\\n  font-weight: bold;\\n}\\n\\n.revoir {\\n  border-left: 6px solid #ec0b69;\\n  color: #ec0b69;\\n  margin-bottom: 5px;\\n  font-weight: bold;\\n}\\n\\n.header-card {\\n  width: 100%;\\n}\\n\\n.example-container {\\n  width: 100%;\\n  max-width: 100%;\\n  overflow: auto;\\n}\\n\\ntable {\\n  width: 100%;\\n}\\n\\ntd.mat-column-star {\\n  width: 20px;\\n  padding-right: 8px;\\n}\\n\\nth.mat-column-position, td.mat-column-position {\\n  padding-left: 8px;\\n}\\n\\n.mat-table-sticky-border-elem-right {\\n  border-left: 1px solid #e0e0e0;\\n}\\n\\n.mat-table-sticky-border-elem-left {\\n  border-right: 1px solid #e0e0e0;\\n}\\n\\n.user-name {\\n  padding: 0 12px;\\n  font-weight: 400;\\n}\\n\\n.user-content {\\n  padding: 10px;\\n}\\n\\n.user-content .user-img {\\n  position: relative;\\n}\\n\\n.user-content .user-img img {\\n  border-radius: 50%;\\n  width: 80px;\\n  height: 80px;\\n}\\n\\n.user-content .user-img img.blocked {\\n  opacity: 0.5;\\n}\\n\\n.user-content .user-img .mat-icon {\\n  position: absolute;\\n  top: -8px;\\n  left: -8px;\\n  font-size: 96px;\\n  height: 96px;\\n  width: 96px;\\n}\\n\\n.user-content .mat-slide-toggle {\\n  margin-top: 15px;\\n}\\n\\n.user-content .user-details span {\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n}\\n\\n.user-content .user-details .mat-icon {\\n  padding: 2px 10px;\\n}\\n\\n.user-content .user-details.blocked {\\n  opacity: 0.5;\\n}\\n\\n.user-search {\\n  width: 0;\\n  overflow: hidden;\\n  transition: 0.3s;\\n}\\n\\n.user-search .mat-form-field {\\n  width: 100% !important;\\n  text-align: center !important;\\n  height: 36px;\\n}\\n\\n.user-search .mat-form-field-infix {\\n  padding: 5px;\\n}\\n\\n.user-search .mat-input-element {\\n  text-align: center;\\n}\\n\\n.user-search.show {\\n  width: 100%;\\n  overflow: visible;\\n}\\n\\n.example-full-width {\\n  width: 60%;\\n  cursor: pointer;\\n}\\n\\n.mat-row:nth-child(even) {\\n  background-color: rgba(8, 106, 235, 0.247);\\n}\\n\\n.mat-row:nth-child(odd) {\\n  background-color: rgba(252, 249, 249, 0.116);\\n}\\n\\nth.mat-sort-header-sorted {\\n  color: red;\\n}\\n\\n.recherche {\\n  width: 80%;\\n}\\n\\n.button-add {\\n  padding: 20px;\\n}\\n\\np {\\n  text-align: left;\\n  font-size: 10px;\\n  padding: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\";","import { UserAffecterProjet } from './../../../shared/models/demarrage-projet/projet-renovation.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Renovation } from 'src/app/shared/models/Renovation';\r\nimport { Tache } from 'src/app/shared/models/demarrage-projet/projet-renovation.model';\r\n\r\n@Injectable()\r\nexport class GestionTacheService {\r\n    \r\n    constructor(public http:HttpClient) { }\r\n    \r\n    gettachess(id): Observable<Tache[]> {\r\n        return this.http.get<Tache[]>(environment.BACK_END.DEMARRAGERENAUVATION.GESTION_TACHE+\"\"+id);\r\n    }\r\n    addtaches(taches){\t    \r\n        return this.http.post(environment.BACK_END.DEMARRAGERENAUVATION.GESTION_TACHE, taches);\r\n    }\r\n\r\n    deletetaches(id: number) {\r\n        return this.http.delete(environment.BACK_END.DEMARRAGERENAUVATION.GESTION_TACHE + \"\" + id);\r\n    } \r\n\r\n    updatetaches( id, taches){\t    \r\n        return this.http.put(environment.BACK_END.DEMARRAGERENAUVATION.GESTION_TACHE+\"\"+id, taches);\r\n    }\r\n\r\n    verifierTaches(taches) : Observable<Tache[]>{\t    \r\n        return this.http.post<Tache[]>(environment.BACK_END.DEMARRAGERENAUVATION.GESTION_TACHE+\"verifierTache\", taches);\r\n    }\r\n\r\n    getUser(id): Observable<UserAffecterProjet[]>\r\n    {\r\n        return this.http.get<UserAffecterProjet[]>(environment.BACK_END.DEMARRAGERENAUVATION.AGENDA_SYSTEM+\"user-projet/\"+id);\r\n    }\r\n} "],"sourceRoot":"webpack:///"}