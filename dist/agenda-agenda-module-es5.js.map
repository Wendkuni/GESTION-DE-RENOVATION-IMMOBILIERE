{"version":3,"sources":["webpack:///src/app/features/demarrage-projet-renovation/agenda/agenda.system.service.ts","webpack:///src/app/features/demarrage-projet-renovation/agenda/view-agenda/view-agenda.component.ts","webpack:///src/app/features/demarrage-projet-renovation/agenda/agenda.component.ts","webpack:///src/app/features/demarrage-projet-renovation/agenda/update-agenda/update-agenda.component.scss","webpack:///src/app/features/demarrage-projet-renovation/agenda/update-agenda/update-agenda.component.ts","webpack:///src/app/features/demarrage-projet-renovation/agenda/agenda.module.ts","webpack:///src/app/features/demarrage-projet-renovation/agenda/view-agenda/view-agenda.component.html","webpack:///src/app/features/demarrage-projet-renovation/agenda/agenda.component.html","webpack:///src/app/features/demarrage-projet-renovation/agenda/view-agenda/view-agenda.component.scss","webpack:///src/app/features/demarrage-projet-renovation/agenda/agenda.component.scss","webpack:///src/app/features/demarrage-projet-renovation/agenda/update-agenda/update-agenda.component.html"],"names":["GestionAgendaService","http","id","get","BACK_END","DEMARRAGERENAUVATION","AGENDA_SYSTEM","agenda","post","put","AGENDA_USER","ViewAgendaComponent","data","event","selector","template","colors","red","primary","secondary","blue","yellow","AgendaComponent","appSettings","userTache","dialog","snackService","confirm","projetStorage","agendaSrvice","snackBar","view","viewDate","Date","activeDayIsOpen","isLoadingResults","tacheList","actions","label","onClick","openScheduleDialog","supprimerElement","listeAgenda","openScheduleView","actionsUser","actionsTache","console","log","voirPlusTache","events","refresh","projet","projetRenovation","isGestion","settings","getGestionAgenda","getElementGestion","getuserAgenda","elementUser","getAgendas","subscribe","viewAgenda","getAgendaUser","gettachess","error","forEach","element","index","dateD","dateTranslate","dateDemarrage","dateF","dateFinition","push","start","end","title","motif","color","niveauAvancer","appellation","date","length","tache","dialogRef","open","width","afterClosed","result","message","$choix","deleteAgenda","status","openSnackBar","ngOnInit","selectElement","dateFormat","animations","host","UpdateAgendaComponent","formBuilder","agendaService","userList","form","group","required","getUser","patchValue","description","utilisateurs","updateAgenda","value","close","addAgenda","routes","path","component","breadcrumb","AgendaModule","declarations","imports","forChild","providers"],"mappings":"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","file":"agenda-agenda-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Agenda, Tache, UserAffecterProjet } from 'src/app/shared/models/demarrage-projet/projet-renovation.model';\r\n\r\n@Injectable()\r\nexport class GestionAgendaService {\r\n    \r\n    constructor(public http:HttpClient) { }\r\n    \r\n    getAgendas(id): Observable<Agenda[]> {\r\n        return this.http.get<Agenda[]>(environment.BACK_END.DEMARRAGERENAUVATION.AGENDA_SYSTEM+\"\"+id);\r\n    }\r\n    addAgenda(agenda){\t    \r\n        return this.http.post(environment.BACK_END.DEMARRAGERENAUVATION.AGENDA_SYSTEM, agenda);\r\n    }\r\n\r\n    deleteAgenda(id: number) {\r\n        return this.http.delete(environment.BACK_END.DEMARRAGERENAUVATION.AGENDA_SYSTEM + \"\" + id);\r\n    } \r\n\r\n    updateAgenda( id, agenda){\t    \r\n        return this.http.put(environment.BACK_END.DEMARRAGERENAUVATION.AGENDA_SYSTEM+\"\"+id, agenda);\r\n    }\r\n\r\n    getUser(id): Observable<UserAffecterProjet[]>\r\n    {\r\n        return this.http.get<UserAffecterProjet[]>(environment.BACK_END.DEMARRAGERENAUVATION.AGENDA_SYSTEM+\"user-projet/\"+id);\r\n    }\r\n\r\n    getAgendaUser(id): Observable<Agenda[]> {\r\n        return this.http.get<Agenda[]>(environment.BACK_END.DEMARRAGERENAUVATION.AGENDA_USER+\"\"+id);\r\n    }\r\n\r\n} ","import { Agenda } from 'src/app/shared/models/demarrage-projet/projet-renovation.model';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-view-agenda',\r\n  templateUrl: './view-agenda.component.html',\r\n  styleUrls: ['./view-agenda.component.scss']\r\n})\r\nexport class ViewAgendaComponent implements OnInit {\r\n\r\n  event: Agenda;\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n  ngOnInit(): void {\r\n    this.event = this.data.agenda;\r\n  }\r\n  \r\n}\r\n","import { ViewAgendaComponent } from './view-agenda/view-agenda.component';\r\nimport { SnackBarService } from 'src/app/shared/services/SnackBar';\r\nimport { DemarrageProjetRenovationComponent } from './../demarrage-projet-renovation.component';\r\nimport { Agenda, ProjetRenauvation, Tache } from 'src/app/shared/models/demarrage-projet/projet-renovation.model';\r\nimport { GestionAgendaService } from './agenda.system.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { CalendarEvent, CalendarEventAction, CalendarEventTimesChangedEvent } from 'angular-calendar';\r\nimport { startOfDay, endOfDay, subDays, addDays, endOfMonth, isSameDay, isSameMonth, addHours } from 'date-fns';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\nimport { Subject } from 'rxjs';\r\nimport { blockTransition } from 'src/app/theme/utils/app-animation';\r\nimport { Settings } from 'src/app/app.settings.model';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { UpdateAgendaComponent } from './update-agenda/update-agenda.component';\r\nimport { AppConfirmService } from 'src/app/shared/utils/app-confirm/app-confirm.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { ListTacheService } from '../projet-user/user-projet.service';\r\nimport { GestionTachesComponent } from '../taches/gestion-taches/gestion-taches.component';\r\nimport { ProjetStorageService } from 'src/app/shared/services/ProjetRenovation.localStorage';\r\n\r\nconst colors: any = {\r\n  red: {\r\n    primary: '#1e90ff',\r\n    secondary: '#1e90ff'\r\n  },\r\n  blue: {\r\n    primary: '#1e90ff',\r\n    secondary: '#D1E8FF'\r\n  },\r\n  yellow: {\r\n    primary: '#e3bc08',\r\n    secondary: '#FDF1BA'\r\n  }\r\n};\r\n\r\n@Component({\r\n  selector: 'app-agenda',\r\n  templateUrl: './agenda.component.html',\r\n  styleUrls: ['./agenda.component.scss'],\r\n  animations: [ blockTransition ],\r\n  host: {\r\n    '[@blockTransition]': ''\r\n  }\r\n})\r\nexport class AgendaComponent implements OnInit {\r\n  view: string = 'month';\r\n  viewDate: Date = new Date();\r\n  activeDayIsOpen: boolean = true;\r\n  isLoadingResults = false;\r\n  tacheList: Tache[]=[];\r\n  actions: CalendarEventAction[] = [{\r\n      label: '<i class=\"material-icons icon-sm white\">edit</i>',\r\n      onClick: ({event}: {event: CalendarEvent}): void => {\r\n          this.openScheduleDialog(event);\r\n      }\r\n  }, {\r\n      label: '<i class=\"material-icons icon-sm white\">close</i>',\r\n      onClick: ({event}: {event: CalendarEvent}): void => {\r\n          this.supprimerElement(this.listeAgenda[event.id].id);\r\n      }\r\n  },{\r\n    label: '<i class=\"white\">voir+</i>',\r\n      onClick: ({event}: {event: CalendarEvent}): void => {\r\n          this.openScheduleView(event);\r\n      }\r\n  }];\r\n\r\n  actionsUser: CalendarEventAction[] = [{\r\n  label: '<i class=\"white\">voir+</i>',\r\n    onClick: ({event}: {event: CalendarEvent}): void => {\r\n        this.openScheduleView(event);\r\n    }\r\n}];\r\n\r\n\r\n\r\n\r\n  actionsTache: CalendarEventAction[] = [{\r\n      label: '<i class=\"white\">voir+</i>',\r\n        onClick: ({event}: {event: CalendarEvent}): void => {\r\n          console.log(this.tacheList[event.id]);\r\n          this.voirPlusTache(this.tacheList[event.id]);\r\n        }\r\n    }];\r\n\r\n\r\n  events: CalendarEvent[] = [];\r\n  refresh: Subject<any> = new Subject();\r\n\r\n\r\n  public settings: Settings;\r\n  projet: ProjetRenauvation = DemarrageProjetRenovationComponent.projetRenovation;\r\n  listeAgenda: Agenda[] = [];\r\n  isGestion = 0;\r\n  constructor(public appSettings:AppSettings, \r\n              private userTache: ListTacheService,\r\n              public dialog: MatDialog,\r\n              private snackService: SnackBarService,\r\n              private confirm: AppConfirmService,\r\n              private projetStorage: ProjetStorageService,\r\n              private agendaSrvice: GestionAgendaService,\r\n              public snackBar: MatSnackBar){\r\n      this.settings = this.appSettings.settings; \r\n      this.isGestion = projetStorage.getGestionAgenda();\r\n  }\r\n\r\n  ngOnInit() {\r\n    if(this.isGestion>0)\r\n    {\r\n      this.getElementGestion()\r\n    }\r\n    else{\r\n      this.getuserAgenda();\r\n    }\r\n    this.elementUser();\r\n  }\r\n\r\n  getElementGestion(){\r\n    this.isLoadingResults = true;\r\n    this.agendaSrvice.getAgendas(this.projet.id).subscribe((data)=>{\r\n      this.listeAgenda = data;\r\n      this.viewAgenda();\r\n      this.isLoadingResults = false;\r\n      console.log(this.events);\r\n    })\r\n  }\r\n  getuserAgenda(){\r\n    \r\n    this.isLoadingResults = true;\r\n    this.agendaSrvice.getAgendaUser(this.projet.id).subscribe((data)=>{\r\n      this.listeAgenda = data;\r\n      this.viewAgenda();\r\n      this.isLoadingResults = false;\r\n      console.log(this.events);\r\n    })\r\n  }\r\n\r\n\r\n  elementUser(){\r\n    this.userTache.gettachess(this.projet.id).subscribe((data)=>{\r\n      this.tacheList = data;\r\n    },(error:HttpErrorResponse)=>{\r\n      \r\n    })\r\n  }\r\n\r\n  viewAgenda(){\r\n    if(this.isGestion>0)\r\n    {\r\n      this.events = [];\r\n      this.listeAgenda.forEach((element, index)=>{\r\n        let dateD: Date =this.dateTranslate(element.dateDemarrage);\r\n        let dateF: Date = this.dateTranslate(element.dateFinition);\r\n        this.events.push({\r\n          id: index,\r\n          start: dateD,\r\n          end:  dateF,\r\n          title: element.motif,\r\n          color: {\r\n            primary: element.color,\r\n            secondary: element.color\r\n          },\r\n          actions: this.actions\r\n        })\r\n      })\r\n    }\r\n    else{\r\n      this.events = [];\r\n      this.listeAgenda.forEach((element, index)=>{\r\n        let dateD: Date =this.dateTranslate(element.dateDemarrage);\r\n        let dateF: Date = this.dateTranslate(element.dateFinition);\r\n        this.events.push({\r\n          id: index,\r\n          start: dateD,\r\n          end:  dateF,\r\n          title: element.motif,\r\n          color: {\r\n            primary: element.color,\r\n            secondary: element.color\r\n          },\r\n          actions: this.actionsUser\r\n        })\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  viewTache()\r\n  {\r\n    this.events = [];\r\n    this.tacheList.forEach((element, index)=>{\r\n      if(element.niveauAvancer == 'VALIDER')\r\n      {\r\n        let dateD: Date =this.dateTranslate(element.dateDemarrage);\r\n        let dateF: Date = this.dateTranslate(element.dateFinition);\r\n        this.events.push({\r\n          id: index,\r\n          start: dateD,\r\n          end:  dateF,\r\n          title: element.appellation,\r\n          color: {\r\n            primary: 'rgb(9, 172, 115)',\r\n            secondary: 'rgb(9, 172, 115)'\r\n          },\r\n          actions: this.actionsTache\r\n        })\r\n      }\r\n      else if(element.niveauAvancer === 'ENCOURS')\r\n      {\r\n        let dateD: Date =this.dateTranslate(element.dateDemarrage);\r\n        let dateF: Date = this.dateTranslate(element.dateFinition);\r\n        this.events.push({\r\n          id: index,\r\n          start: dateD,\r\n          end:  dateF,\r\n          title: element.appellation,\r\n          color: {\r\n            primary: 'rgb(236, 139, 11)',\r\n            secondary: 'rgb(236, 139, 11)'\r\n          },\r\n          actions: this.actionsTache\r\n        })\r\n      }\r\n      else if(element.niveauAvancer == 'AREFAIRE')\r\n      {\r\n        let dateD: Date =this.dateTranslate(element.dateDemarrage);\r\n        let dateF: Date = this.dateTranslate(element.dateFinition);\r\n        this.events.push({\r\n          id: index,\r\n          start: dateD,\r\n          end:  dateF,\r\n          title: element.appellation,\r\n          color: {\r\n            primary: 'rgb(236, 11, 105)',\r\n            secondary: 'rgb(236, 11, 105)'\r\n          },\r\n          actions: this.actionsTache\r\n        })\r\n      }\r\n      else{\r\n        let dateD: Date =this.dateTranslate(element.dateDemarrage);\r\n        let dateF: Date = this.dateTranslate(element.dateFinition);\r\n        this.events.push({\r\n          id: index,\r\n          start: dateD,\r\n          end:  dateF,\r\n          title: element.appellation,\r\n          color: {\r\n            primary: 'rgb(34, 6, 194)',\r\n            secondary: 'rgb(34, 6, 194)'\r\n          },\r\n          actions: this.actionsTache\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  dayClicked({date, events}: {date: Date, events: CalendarEvent[]}): void {    \r\n    if (isSameMonth(date, this.viewDate)) {\r\n      if ((isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) || events.length === 0) {\r\n        this.activeDayIsOpen = false;\r\n      } else {\r\n        this.activeDayIsOpen = true;\r\n        this.viewDate = date;\r\n      }\r\n    }\r\n  }\r\n\r\n  \r\n  voirPlusTache(tache): void {\r\n    const dialogRef = this.dialog.open(GestionTachesComponent, {\r\n      width: '600px',\r\n      data: {tache: tache},\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result ==null)\r\n      {\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  supprimerElement(index){\r\n    this.confirm.confirm({\r\n      title:\"Confirmation\",\r\n      message:`Voulez-vous supprimer cet evenement ? `\r\n    }).subscribe(($choix)=> {\r\n\r\n      if($choix) {\r\n        this.isLoadingResults=true;\r\n        this.agendaSrvice.deleteAgenda(index).subscribe(()=>{\r\n          \r\n        },\r\n        (error: HttpErrorResponse) => {\r\n              this.isLoadingResults=false;\r\n              if(error.status<300)\r\n              {\r\n                this.snackService.openSnackBar(\"Element supprimé avec succès\", \"OK\",3000);\r\n                this.ngOnInit();\r\n              }\r\n              else{\r\n                this.snackService.openSnackBar(\"Element non supprimer \", \"OK\",3000);\r\n              }\r\n              \r\n          });\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  openScheduleDialog(event){\r\n    let selectElement = null;\r\n    if(event !=null)\r\n      selectElement = this.listeAgenda[event.id];\r\n    let dialogRef = this.dialog.open(UpdateAgendaComponent, {\r\n      data: {agenda: selectElement}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result ==null)\r\n      {\r\n        this.ngOnInit();\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  openScheduleView(event){\r\n    let selectElement = null;\r\n    if(event !=null)\r\n      selectElement = this.listeAgenda[event.id];\r\n    let dialogRef = this.dialog.open(ViewAgendaComponent, {\r\n      data: {agenda: selectElement}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      \r\n    });\r\n  }\r\n\r\n\r\n  dateTranslate(date: Date): Date{\r\n    let dateFormat = new Date(date);\r\n    return dateFormat;\r\n  }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ1cGRhdGUtYWdlbmRhLmNvbXBvbmVudC5zY3NzIn0= */\";","import { UserAffecterProjet, ProjetRenauvation } from 'src/app/shared/models/demarrage-projet/projet-renovation.model';\r\nimport { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormGroup, FormBuilder, Validators} from '@angular/forms';\r\nimport { GestionAgendaService } from '../agenda.system.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { SnackBarService } from 'src/app/shared/services/SnackBar';\r\nimport { DemarrageProjetRenovationComponent } from '../../demarrage-projet-renovation.component';\r\n\r\n@Component({\r\n  selector: 'app-update-agenda',\r\n  templateUrl: './update-agenda.component.html',\r\n  styleUrls: ['./update-agenda.component.scss']\r\n})\r\nexport class UpdateAgendaComponent implements OnInit {\r\n  public form:FormGroup;\r\n  userList: UserAffecterProjet[]=[];\r\n  projet: ProjetRenauvation = DemarrageProjetRenovationComponent.projetRenovation;\r\n  isLoadingResults = false;\r\n  constructor(public dialogRef: MatDialogRef<UpdateAgendaComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: any,private snackBar: SnackBarService,\r\n              public formBuilder: FormBuilder, private agendaService: GestionAgendaService) {\r\n    this.form = this.formBuilder.group({ \r\n      'id': null,\r\n      'motif': ['', Validators.required],      \r\n      'color': null,      \r\n      'dateDemarrage': ['', Validators.required], \r\n      'dateFinition': '',\r\n      'description':'',\r\n      'projetRenovation': this.projet,\r\n      'utilisateurs' : null\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.isLoadingResults = true;\r\n    this.agendaService.getUser(this.projet.id).subscribe((data)=>{\r\n      this.userList = data;\r\n      this.isLoadingResults = false;\r\n    })\r\n    if (this.data.agenda){\r\n      this.form.patchValue({\r\n        'id': this.data.agenda.id,\r\n        'motif': this.data.agenda.motif,\r\n        'color': this.data.agenda.color,\r\n        'dateDemarrage': this.data.agenda.dateDemarrage,\r\n        'dateFinition': this.data.agenda.dateFinition,\r\n        'description':this.data.agenda.description,\r\n        'projetRenovation': this.data.agenda.projetRenovation,\r\n        'utilisateurs' : this.data.agenda.utilisateurs\r\n      })\r\n    }\r\n  }\r\n\r\n    enregistrer(){\r\n      \r\n      this.isLoadingResults = true;\r\n      if(this.data.agenda){\r\n          this.agendaService.updateAgenda(this.data.agenda.id, this.form.value).subscribe( (data)=>{\r\n            this.isLoadingResults=false;\r\n          },\r\n          (error: HttpErrorResponse) => {\r\n                this.isLoadingResults=false;\r\n                if(error.status<300)\r\n                {\r\n                  this.dialogRef.close();\r\n                  this.snackBar.openSnackBar(\"Evemenent modifier  avec succès\", \"OK\",3000);\r\n                }\r\n                else{\r\n                  this.isLoadingResults = false;\r\n                  this.snackBar.openSnackBar(\"Element non modifier car evemenent deja programmer a cette date\", \"OK\",5000);\r\n                }\r\n                \r\n                \r\n            });\r\n        }\r\n        else{\r\n          this.agendaService.addAgenda(this.form.value).subscribe( (data)=>{\r\n            //console.log(data);\r\n            this.isLoadingResults=false;\r\n          },\r\n          (error: HttpErrorResponse) => {\r\n                this.isLoadingResults=false;\r\n                if(error.status<300)\r\n                {\r\n                  this.dialogRef.close();\r\n                  this.snackBar.openSnackBar(\"Evemenent Ajouter  avec succès\", \"OK\",3000);\r\n                }\r\n                else{\r\n                  this.isLoadingResults = false;\r\n                  this.snackBar.openSnackBar(\"Element non ajouter car evemenent deja programmer a cette date\", \"OK\",5000);\r\n                }\r\n                \r\n            });\r\n        }\r\n    }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","import { GestionAgendaService } from './agenda.system.service';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AgendaComponent } from './agenda.component';\r\nimport { UpdateAgendaComponent } from './update-agenda/update-agenda.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { DropzoneModule } from 'ngx-dropzone-wrapper';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { CalendarModule } from 'angular-calendar';\r\nimport { ViewAgendaComponent } from './view-agenda/view-agenda.component';\r\n\r\nexport const routes = [\r\n  { path: '', component: AgendaComponent, data: { breadcrumb: 'Agenda' } },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [AgendaComponent, UpdateAgendaComponent, ViewAgendaComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    DropzoneModule,\r\n    NgxPaginationModule,\r\n    NgSelectModule,\r\n    CalendarModule,\r\n  ],providers :[GestionAgendaService]\r\n})\r\nexport class AgendaModule { }\r\n","export default \"<div class=\\\"header\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" mat-dialog-title color=\\\"primary\\\">\\r\\n    <h3 fxLayoutAlign=\\\"center center\\\" mat-dialog-title >Evenement : {{event.motif}}</h3>\\r\\n</div>\\r\\n<div mat-dialog-content>\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n        <div \\r\\n        [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" \\r\\n        [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"100\\\" [fxFlex.xl]=\\\"100\\\">\\r\\n        <b><i>Durée :</i> {{event.dateDemarrage | date : 'dd LLLL yyyy HH:mm'}} - {{event.dateFinition | date : 'dd LLLL yyyy HH:mm'}}</b>\\r\\n        </div>\\r\\n    </div><br/>\\r\\n\\r\\n    <div fxLayout=\\\"column\\\"  mat-dialog-title color=\\\"primary\\\">\\r\\n        <h5 fxLayoutAlign=\\\"center center\\\">Utilisateurs Assignés à l'evenement</h5>\\r\\n        <div [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" \\r\\n        [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"100\\\" [fxFlex.xl]=\\\"100\\\">\\r\\n        <span *ngFor=\\\"let user of event.utilisateurs\\\">\\r\\n            <h6>utilisateur <i> : </i>{{user.utilisateurs.nom | uppercase}} {{user.utilisateurs.prenom}} ({{user.utilisateurs.email}})</h6>\\r\\n        </span>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n        <div \\r\\n        [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" \\r\\n        [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n            <p><b><i>Description :</i></b> <br/> {{event.description}}</p>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div mat-dialog-actions align=\\\"end\\\">\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n        <button mat-raised-button color=\\\"warn\\\" mat-dialog-close>Fermer</button>\\r\\n    </div>\\r\\n</div>\";","export default \"\\r\\n<div *ngIf=\\\"isLoadingResults\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"user-spinner\\\">   \\r\\n    <mat-spinner color=\\\"primary\\\"></mat-spinner>\\r\\n</div>\\r\\n<div fxLayout=\\\"row wrap\\\" *ngIf=\\\"!isLoadingResults\\\" >\\r\\n    <div fxFlex=\\\"100\\\" class=\\\"flex-p\\\"> \\r\\n        <mat-card class=\\\"block p-0\\\">\\r\\n            <div class=\\\"bg-primary\\\">\\r\\n                <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"space-between center\\\"  class=\\\"w-100\\\">            \\r\\n                    <div class=\\\"\\\">                \\r\\n                        <button mat-icon-button mwlCalendarPreviousView [view]=\\\"view\\\" [(viewDate)]=\\\"viewDate\\\">\\r\\n                            <mat-icon *ngIf=\\\"!settings.rtl\\\">chevron_left</mat-icon>\\r\\n                            <mat-icon *ngIf=\\\"settings.rtl\\\">chevron_right</mat-icon>\\r\\n                        </button>\\r\\n                        <button mat-icon-button mwlCalendarToday [(viewDate)]=\\\"viewDate\\\">\\r\\n                            <mat-icon>today</mat-icon>\\r\\n                        </button>\\r\\n                        <button mat-icon-button mwlCalendarNextView [view]=\\\"view\\\" [(viewDate)]=\\\"viewDate\\\">\\r\\n                            <mat-icon *ngIf=\\\"settings.rtl\\\">chevron_left</mat-icon>\\r\\n                            <mat-icon *ngIf=\\\"!settings.rtl\\\">chevron_right</mat-icon>\\r\\n                        </button>\\r\\n                    </div>\\r\\n                    <h2>{{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}</h2>\\r\\n                    <div class=\\\"\\\">\\r\\n                        <button \\r\\n                        matTooltip=\\\"Afficher la liste des taches sur l'agenda\\\"\\r\\n                        matTooltipClass=\\\"example-tooltip-red\\\"\\r\\n                        aria-label=\\\"Button that shows a red tooltip\\\"\\r\\n                        mat-icon-button (click)=\\\"viewTache()\\\">\\r\\n                            <mat-icon>ballot</mat-icon>\\r\\n                        </button>\\r\\n                        <button \\r\\n                        matTooltip=\\\"Afficher la liste de evenements\\\"\\r\\n                        matTooltipClass=\\\"example-tooltip-red\\\"\\r\\n                        aria-label=\\\"Button that shows a red tooltip\\\"\\r\\n                        mat-icon-button (click)=\\\"viewAgenda()\\\">\\r\\n                            <mat-icon>event_note</mat-icon>\\r\\n                        </button>\\r\\n                        <button mat-icon-button\\r\\n                        matTooltip=\\\"Afficher en fonction des mois\\\"\\r\\n                        matTooltipClass=\\\"example-tooltip-red\\\"\\r\\n                        aria-label=\\\"Button that shows a red tooltip\\\"\\r\\n                        (click)=\\\"view = 'month'\\\">\\r\\n                            <mat-icon>view_comfy</mat-icon>\\r\\n                        </button>\\r\\n                        <button mat-icon-button\\r\\n                        matTooltip=\\\"Afficher en fonction de la semaine\\\"\\r\\n                        matTooltipClass=\\\"example-tooltip-red\\\"\\r\\n                        aria-label=\\\"Button that shows a red tooltip\\\"\\r\\n                        (click)=\\\"view = 'week'\\\">\\r\\n                            <mat-icon>view_week</mat-icon>\\r\\n                        </button>\\r\\n                        <button \\r\\n                        matTooltip=\\\"Afficher en fonction du jour\\\"\\r\\n                        matTooltipClass=\\\"example-tooltip-red\\\"\\r\\n                        aria-label=\\\"Button that shows a red tooltip\\\"\\r\\n                        mat-icon-button (click)=\\\"view = 'day'\\\">\\r\\n                            <mat-icon>view_day</mat-icon>\\r\\n                        </button>\\r\\n                        <button *ngIf=\\\"isGestion>0\\\" mat-icon-button (click)=\\\"openScheduleDialog(null)\\\">\\r\\n                            <mat-icon>add</mat-icon>\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </div>            \\r\\n            </div>\\r\\n\\r\\n            <div [ngSwitch]=\\\"view\\\">\\r\\n                <mwl-calendar-month-view\\r\\n                    *ngSwitchCase=\\\"'month'\\\"\\r\\n                    [viewDate]=\\\"viewDate\\\"\\r\\n                    [events]=\\\"events\\\"\\r\\n                    [refresh]=\\\"refresh\\\"\\r\\n                    [activeDayIsOpen]=\\\"activeDayIsOpen\\\"\\r\\n                    (dayClicked)=\\\"dayClicked($event.day)\\\">\\r\\n                </mwl-calendar-month-view>\\r\\n                <mwl-calendar-week-view\\r\\n                    *ngSwitchCase=\\\"'week'\\\"\\r\\n                    [viewDate]=\\\"viewDate\\\"\\r\\n                    [events]=\\\"events\\\"\\r\\n                    [refresh]=\\\"refresh\\\">\\r\\n                </mwl-calendar-week-view>\\r\\n                <mwl-calendar-day-view\\r\\n                    *ngSwitchCase=\\\"'day'\\\"\\r\\n                    [viewDate]=\\\"viewDate\\\"\\r\\n                    [events]=\\\"events\\\"\\r\\n                    [refresh]=\\\"refresh\\\">\\r\\n                </mwl-calendar-day-view>\\r\\n            </div>\\r\\n\\r\\n       </mat-card>\\r\\n    </div>\\r\\n</div>\";","export default \".header {\\n  color: #380ba0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXHZpZXctYWdlbmRhLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksY0FBQTtBQUNKIiwiZmlsZSI6InZpZXctYWdlbmRhLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmhlYWRlcntcclxuICAgIGNvbG9yOiByZ2IoNTYsIDExLCAxNjApXHJcbn0iXX0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhZ2VuZGEuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"<h3 mat-dialog-title><span *ngIf=\\\"!data.agenda\\\">Ajouter un</span><span *ngIf=\\\"data.agenda\\\">Modifier l'</span> Evenement</h3>\\r\\n\\r\\n<div *ngIf=\\\"isLoadingResults\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"user-spinner\\\">   \\r\\n  <mat-spinner color=\\\"primary\\\"></mat-spinner>\\r\\n</div>\\r\\n<div mat-dialog-content *ngIf=\\\"!isLoadingResults\\\">\\r\\n    <form [formGroup]=\\\"form\\\">\\r\\n        <mat-form-field class=\\\"w-100\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Titre</mat-label>\\r\\n          <input matInput placeholder=\\\"Title\\\" formControlName=\\\"motif\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"w-100\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Date debut</mat-label>\\r\\n          <input matInput type=\\\"datetime-local\\\" placeholder=\\\"Start Date\\\" formControlName=\\\"dateDemarrage\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"w-100\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Date fin</mat-label>\\r\\n          <input matInput type=\\\"datetime-local\\\" placeholder=\\\"End Date\\\" formControlName=\\\"dateFinition\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"w-100\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>coleur representant l'evenement</mat-label>\\r\\n          <input matInput placeholder=\\\"coleur representant l'evenement\\\" type=\\\"color\\\" formControlName=\\\"color\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <ng-select class=\\\"select\\\" class=\\\"w-100\\\" [items]=\\\"userList\\\"\\r\\n                bindLabel=\\\"utilisateurs.email\\\"\\r\\n                [multiple]=\\\"true\\\"\\r\\n                placeholder=\\\"Selectionner l'utilisateur pour la tache\\\"\\r\\n                formControlName=\\\"utilisateurs\\\">\\r\\n                <ng-template ng-loadingspinner-tmp>\\r\\n                <div class=\\\"lds-ellipsis\\\">\\r\\n                    <div></div>\\r\\n                    <div></div>\\r\\n                    <div></div>\\r\\n                    <div></div>\\r\\n                </div>\\r\\n            </ng-template>\\r\\n        </ng-select>\\r\\n        \\r\\n        <mat-form-field class=\\\"w-100\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Description de la racontre</mat-label>\\r\\n            <textarea matInput placeholder=\\\"Description de la racontre\\\" formControlName=\\\"description\\\" maxlength=\\\"300\\\"></textarea>\\r\\n        </mat-form-field>\\r\\n    </form>\\r\\n</div>\\r\\n<div mat-dialog-actions fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\" *ngIf=\\\"!isLoadingResults\\\">\\r\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"enregistrer()\\\" [disabled]=\\\"!form.valid\\\"><span *ngIf=\\\"!data.agenda\\\">Save</span><span *ngIf=\\\"data.agenda\\\">Update</span></button>\\r\\n    <button mat-raised-button color=\\\"warn\\\" [mat-dialog-close]=\\\"form.value\\\">Cancel</button>\\r\\n</div>\";"]}