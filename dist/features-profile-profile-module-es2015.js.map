{"version":3,"sources":["./src/app/features/profile/update-profile/update-client/update-client.component.html","./src/app/features/profile/profile.component.scss","./src/app/features/profile/profile-view/client-view/client-view.component.ts","./src/app/features/profile/update-profile/autre-personne/autre-personne.component.scss","./src/app/features/profile/profile-view/personnel-entreprise/personnel-entreprise.component.ts","./src/app/features/profile/profile-view/personnel-entreprise/personnel-entreprise.component.html","./src/app/features/profile/profile-view/artisan-view/artisan-view.component.html","./src/app/features/profile/profile-view/artisan-view/artisan-view.component.scss","./src/app/features/profile/profile-view/autre-user/autre-user.component.scss","./src/app/features/profile/update-profile/update-artisan/update-artisan.component.scss","./src/app/features/profile/update-profile/update-artisan/update-artisan.component.html","./src/app/features/profile/profile-view/artisan-view/artisan-view.component.ts","./src/app/features/profile/update-profile/update-artisan/update-artisan.component.ts","./src/app/features/profile/update-profile/update-personnel-entreprise/update-personnel-entreprise.component.scss","./src/app/features/profile/profile-view/client-view/client-view.component.scss","./src/app/features/profile/update-profile/update-client/update-client.component.scss","./src/app/features/profile/update-profile/update-personnel-entreprise/update-personnel-entreprise.component.ts","./src/app/features/profile/profile-view/personnel-entreprise/personnel-entreprise.component.scss","./src/app/features/profile/profile-view/autre-user/autre-user.component.ts","./src/app/features/profile/profile-view/autre-user/autre-user.component.html","./src/app/features/profile/update-profile/autre-personne/autre-personne.component.ts","./src/app/features/profile/update-profile/autre-personne/autre-personne.component.html","./src/app/features/profile/profile.component.html","./src/app/features/profile/update-profile/update-personnel-entreprise/update-personnel-entreprise.component.html","./src/app/features/profile/profile.component.ts","./src/app/features/profile/profile-view/client-view/client-view.component.html","./src/app/shared/models/utilisateeur.ts","./src/app/features/profile/profile.module.ts","./src/app/features/profile/update-profile/update-client/update-client.component.ts"],"names":[],"mappings":"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","file":"features-profile-profile-module-es2015.js","sourcesContent":["export default \"<div *ngIf=\\\"isLoadingResults\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"user-spinner\\\">   \\r\\n    <mat-spinner color=\\\"primary\\\"></mat-spinner>\\r\\n  </div>\\r\\n\\r\\n<div class=\\\"header\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" mat-dialog-title color=\\\"primary\\\">\\r\\n        <h2>Modifier Le Profile</h2>\\r\\n    </div>\\r\\n    <div mat-dialog-content *ngIf=\\\"!isLoadingResults\\\">\\r\\n        <form [formGroup]=\\\"clientForm\\\" enctype=\\\"multipart/form-data\\\" >\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n                <div *ngIf=\\\"image\\\">\\r\\n                    <img class=\\\"profile-img\\\" src=\\\"{{image}}\\\" alt=\\\"user-image\\\" width=\\\"100\\\" class=\\\"rounded mat-elevation-z6\\\">\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayout.lt-md=\\\"row wrap\\\">\\r\\n                <input mat-raised-button type=\\\"file\\\" (change)=\\\"onSelect($event)\\\" placeholder=\\\"Changer sa photo de profile\\\">\\r\\n            </div>\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start\\\" fxLayout.lt-md=\\\"row wrap\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                    <mat-label>Email</mat-label>\\r\\n                    <input matInput #input maxlength=\\\"10\\\" placeholder=\\\"Ex. Nougat\\\" [value]=\\\"client.email\\\" readonly>\\r\\n                    \\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                    <mat-label>Nom</mat-label>\\r\\n                    <input matInput #input placeholder=\\\"Ex. Nougat\\\" formControlName=\\\"nom\\\" required>\\r\\n                    <mat-error *ngIf=\\\"clientForm.get('nom').touched && clientForm.get('nom').invalid\\\" >\\r\\n                        <p>Champs obligatoire, cet champs doit pas etre vide</p>\\r\\n                      </mat-error> \\r\\n                  </mat-form-field>\\r\\n                  <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                    <mat-label>Prenom</mat-label>\\r\\n                    <input matInput #input placeholder=\\\"Ex. Nougat\\\" formControlName=\\\"prenom\\\" required>\\r\\n                    <mat-error *ngIf=\\\"clientForm.get('prenom').touched && clientForm.get('prenom').invalid\\\">\\r\\n                        <p>Champs obligatoire, cet champs doit pas etre vide</p>\\r\\n                      </mat-error> \\r\\n                  </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                    <mat-label>Sociéte</mat-label>\\r\\n                    <input matInput #input placeholder=\\\"Ex. Nougat\\\" formControlName=\\\"societe\\\">\\r\\n                    \\r\\n                </mat-form-field>\\r\\n                <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                    <mat-label>Contact</mat-label>\\r\\n                    <span matPrefix>+33 &nbsp;</span>\\r\\n                    <input matInput #input type=\\\"number\\\" placeholder=\\\"Ex. Nougat\\\" formControlName=\\\"contact\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n                  <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                        <mat-label>Status Familiale</mat-label>\\r\\n                        <mat-select disableRipple formControlName=\\\"statusFamiliale\\\" required>\\r\\n                            <mat-option >--SELECT--</mat-option>\\r\\n                            <mat-option value=\\\"Mr\\\">Mr</mat-option>\\r\\n                            <mat-option value=\\\"Mme\\\">Mme</mat-option>\\r\\n                            <mat-option value=\\\"Mesdamoiselle\\\">Mesdamoiselle</mat-option>\\r\\n                        </mat-select>\\r\\n                   </mat-form-field>\\r\\n                  <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                        <mat-label>Heure à Joindre</mat-label>\\r\\n                        <mat-select formControlName=\\\"heureAContacter\\\">\\r\\n                          <mat-option >Je sais pas</mat-option>\\r\\n                          <mat-option value=\\\"Tout Moment\\\">Tout Moment</mat-option>\\r\\n                          <mat-option value=\\\"MATIN\\\">Matin</mat-option>\\r\\n                          <mat-option value=\\\"APRES MIDI\\\">Apres Midi</mat-option>\\r\\n                          <mat-option value=\\\"FIN DE JOURNEE\\\">Fin de Journée</mat-option>\\r\\n                        </mat-select>\\r\\n                  </mat-form-field>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"100\\\" [fxFlex.xl]=\\\"100\\\">\\r\\n                      <mat-label>Adresse du client</mat-label>\\r\\n                      <input matInput formControlName=\\\"adresse\\\">\\r\\n                </mat-form-field>\\r\\n          </div>\\r\\n        </form>\\r\\n    </div>\\r\\n    <div mat-dialog-actions align=\\\"end\\\" *ngIf=\\\"!isLoadingResults\\\">\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n            <button mat-raised-button color=\\\"warn\\\" [mat-dialog-close]=\\\"clientForm.value\\\" >Annuler</button>\\r\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onSubmit()\\\" >Enregistrer</button>\\r\\n        </div>\\r\\n    </div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9maWxlLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Client } from 'src/app/shared/models/utilisateeur';\r\nimport { UpdateClientComponent } from '../../update-profile/update-client/update-client.component';\r\n\r\n@Component({\r\n  selector: 'app-client-view',\r\n  templateUrl: './client-view.component.html',\r\n  styleUrls: ['./client-view.component.scss']\r\n})\r\nexport class ClientViewComponent implements OnInit {\r\n\r\n  @Input('client')\r\n  client: Client ;\r\n  constructor(public dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n    //console.log(this.client);\r\n  }\r\n\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(UpdateClientComponent, {\r\n      width: '600px',\r\n      data: {client: this.client},\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result ==null)\r\n      {\r\n        location.reload();\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhdXRyZS1wZXJzb25uZS5jb21wb25lbnQuc2NzcyJ9 */\";","import { UpdatePersonnelEntrepriseComponent } from './../../update-profile/update-personnel-entreprise/update-personnel-entreprise.component';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { PersonnelSociete } from 'src/app/shared/models/utilisateeur';\r\n\r\n@Component({\r\n  selector: 'app-personnel-entreprise',\r\n  templateUrl: './personnel-entreprise.component.html',\r\n  styleUrls: ['./personnel-entreprise.component.scss']\r\n})\r\nexport class PersonnelEntrepriseComponent implements OnInit {\r\n\r\n  @Input('user')\r\n  user: PersonnelSociete ;\r\n  constructor(public dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n    //console.log(this.user);\r\n  }\r\n\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(UpdatePersonnelEntrepriseComponent, {\r\n      width: '600px',\r\n      data: {user: this.user},\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result ==null)\r\n      {\r\n        location.reload();\r\n      }\r\n    });\r\n  }\r\n}\r\n","export default \"<div class=\\\"toolbar-dropdown-menu user-menu\\\">\\r\\n    <!--<span (mouseleave)=\\\"userMenuTrigger.closeMenu()\\\">-->\\r\\n        <mat-toolbar color=\\\"primary\\\">\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\" >\\r\\n                <img *ngIf=\\\"user.imgUrl\\\" class=\\\"profile-img\\\" src=\\\"{{user.imgUrl}}\\\" alt=\\\"user-image\\\" width=\\\"100px\\\" class=\\\"rounded\\\">\\r\\n                <p><b>{{user.email}}</b></p>\\r\\n            </div>  \\r\\n        </mat-toolbar>\\r\\n        <mat-card class=\\\"information\\\">\\r\\n            <p fxLayout=\\\"row\\\"  class=\\\"infor\\\">\\r\\n                <mat-icon>accessibility</mat-icon>  \\r\\n                <span> <strong><i>Civilité :</i> {{user.civilite}}</strong></span>\\r\\n            </p>\\r\\n            <p fxLayout=\\\"row\\\"  class=\\\"infor\\\">\\r\\n                <mat-icon>perm_identity</mat-icon>  \\r\\n                <span> <strong><i>Nom :</i> {{user.nom}}</strong></span>\\r\\n            </p>\\r\\n            <p fxLayout=\\\"row\\\" class=\\\"infor\\\">\\r\\n                <mat-icon>face</mat-icon>  \\r\\n                <span> <strong><i>Prenom : </i> {{user.prenom}}</strong></span>\\r\\n            </p>\\r\\n            <p fxLayout=\\\"row\\\" class=\\\"infor\\\">\\r\\n                <mat-icon> call</mat-icon>  \\r\\n                <span> <strong><i>Contact : </i> {{user.contact}}</strong></span>\\r\\n            </p>\\r\\n            <div class=\\\"divider\\\"></div>\\r\\n            <mat-card-actions align=\\\"end\\\" class=\\\"action-modif\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\" (click)=\\\"openDialog()\\\" >Modifier</button>\\r\\n            </mat-card-actions>\\r\\n\\r\\n        </mat-card>\\r\\n    <!--</span>-->\\r\\n</div>\\r\\n\\r\\n\\r\\n\";","export default \"<p>artisan-view works!</p>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcnRpc2FuLXZpZXcuY29tcG9uZW50LnNjc3MifQ== */\";","export default \".user-menu .mat-toolbar, .user-menu .mat-toolbar-row {\\n  height: 100px !important;\\n}\\n.user-menu .user-info {\\n  width: 230px;\\n}\\n.user-menu .user-info p {\\n  font-size: 16px;\\n  line-height: 22px;\\n  text-align: center;\\n}\\n.user-menu .user-info p .profile-img {\\n  padding-right: 10px;\\n}\\n.user-menu .mat-menu-item {\\n  height: 36px;\\n  line-height: 36px;\\n}\\n.information {\\n  width: 100%;\\n}\\n.information .infor {\\n  font-size: 15px;\\n  padding: 10px;\\n}\\n.information .infor mat-icon {\\n  margin-right: 10px;\\n}\\n.action-modif {\\n  padding: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXGF1dHJlLXVzZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0k7RUFDSSx3QkFBQTtBQUFSO0FBRUk7RUFDSSxZQUFBO0FBQVI7QUFDUTtFQUNJLGVBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0FBQ1o7QUFBWTtFQUNJLG1CQUFBO0FBRWhCO0FBRUk7RUFDSSxZQUFBO0VBQ0EsaUJBQUE7QUFBUjtBQUlBO0VBQ0ksV0FBQTtBQURKO0FBRUk7RUFDSSxlQUFBO0VBQ0EsYUFBQTtBQUFSO0FBQ1E7RUFDSSxrQkFBQTtBQUNaO0FBSUE7RUFDSSxhQUFBO0FBREoiLCJmaWxlIjoiYXV0cmUtdXNlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi51c2VyLW1lbnV7XHJcbiAgICAubWF0LXRvb2xiYXIsIC5tYXQtdG9vbGJhci1yb3d7XHJcbiAgICAgICAgaGVpZ2h0OiAxMDBweCAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG4gICAgLnVzZXItaW5mb3tcclxuICAgICAgICB3aWR0aDogMjMwcHg7XHJcbiAgICAgICAgcHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMjJweDtcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgICAucHJvZmlsZS1pbWd7XHJcbiAgICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAxMHB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLm1hdC1tZW51LWl0ZW17XHJcbiAgICAgICAgaGVpZ2h0OiAzNnB4O1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAzNnB4O1xyXG4gICAgfVxyXG59XHJcblxyXG4uaW5mb3JtYXRpb257XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIC5pbmZvcntcclxuICAgICAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgICAgICAgcGFkZGluZzogMTBweDtcclxuICAgICAgICBtYXQtaWNvbntcclxuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuLmFjdGlvbi1tb2RpZntcclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbn1cclxuIl19 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ1cGRhdGUtYXJ0aXNhbi5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<p>update-artisan works!</p>\\r\\n\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-artisan-view',\r\n  templateUrl: './artisan-view.component.html',\r\n  styleUrls: ['./artisan-view.component.scss']\r\n})\r\nexport class ArtisanViewComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-update-artisan',\r\n  templateUrl: './update-artisan.component.html',\r\n  styleUrls: ['./update-artisan.component.scss']\r\n})\r\nexport class UpdateArtisanComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ1cGRhdGUtcGVyc29ubmVsLWVudHJlcHJpc2UuY29tcG9uZW50LnNjc3MifQ== */\";","export default \".user-menu .mat-toolbar, .user-menu .mat-toolbar-row {\\n  height: 100px !important;\\n}\\n.user-menu .user-info {\\n  width: 230px;\\n}\\n.user-menu .user-info p {\\n  font-size: 16px;\\n  line-height: 22px;\\n  text-align: center;\\n}\\n.user-menu .user-info p .profile-img {\\n  padding-right: 10px;\\n}\\n.user-menu .mat-menu-item {\\n  height: 36px;\\n  line-height: 36px;\\n}\\n.information {\\n  width: 100%;\\n}\\n.information .infor {\\n  font-size: 15px;\\n  padding: 10px;\\n}\\n.information .infor mat-icon {\\n  margin-right: 10px;\\n}\\n.action-modif {\\n  padding: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXGNsaWVudC12aWV3LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNJO0VBQ0ksd0JBQUE7QUFBUjtBQUVJO0VBQ0ksWUFBQTtBQUFSO0FBQ1E7RUFDSSxlQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtBQUNaO0FBQVk7RUFDSSxtQkFBQTtBQUVoQjtBQUVJO0VBQ0ksWUFBQTtFQUNBLGlCQUFBO0FBQVI7QUFJQTtFQUNJLFdBQUE7QUFESjtBQUVJO0VBQ0ksZUFBQTtFQUNBLGFBQUE7QUFBUjtBQUNRO0VBQ0ksa0JBQUE7QUFDWjtBQUlBO0VBQ0ksYUFBQTtBQURKIiwiZmlsZSI6ImNsaWVudC12aWV3LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnVzZXItbWVudXtcclxuICAgIC5tYXQtdG9vbGJhciwgLm1hdC10b29sYmFyLXJvd3tcclxuICAgICAgICBoZWlnaHQ6IDEwMHB4ICFpbXBvcnRhbnQ7XHJcbiAgICB9XHJcbiAgICAudXNlci1pbmZve1xyXG4gICAgICAgIHdpZHRoOiAyMzBweDtcclxuICAgICAgICBwe1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAyMnB4O1xyXG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgIC5wcm9maWxlLWltZ3tcclxuICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAubWF0LW1lbnUtaXRlbXtcclxuICAgICAgICBoZWlnaHQ6IDM2cHg7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDM2cHg7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5pbmZvcm1hdGlvbntcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgLmluZm9ye1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTVweDtcclxuICAgICAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgICAgIG1hdC1pY29ue1xyXG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4uYWN0aW9uLW1vZGlme1xyXG4gICAgcGFkZGluZzogMjBweDtcclxufVxyXG4iXX0= */\";","export default \".header {\\n  color: rgba(28, 28, 29, 0.808);\\n  font-weight: bold;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXHVwZGF0ZS1jbGllbnQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSw4QkFBQTtFQUNBLGlCQUFBO0FBQ0oiLCJmaWxlIjoidXBkYXRlLWNsaWVudC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5oZWFkZXJ7XHJcbiAgICBjb2xvcjogcmdiYSgyOCwgMjgsIDI5LCAwLjgwOCk7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxufSJdfQ== */\";","import { environment } from './../../../../../environments/environment';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { SnackBarService } from 'src/app/shared/services/SnackBar';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { AutresUser } from 'src/app/shared/models/utilisateeur';\r\n\r\n@Component({\r\n  selector: 'app-update-personnel-entreprise',\r\n  templateUrl: './update-personnel-entreprise.component.html',\r\n  styleUrls: ['./update-personnel-entreprise.component.scss']\r\n})\r\nexport class UpdatePersonnelEntrepriseComponent implements OnInit {\r\n  files =[];\r\n  image: any;\r\n  userForm : FormGroup;\r\n  user: AutresUser;\r\n  isLoadingResults= false;\r\n  ext = \"jpeg\";\r\n  constructor(public dialogRef: MatDialogRef<UpdatePersonnelEntrepriseComponent>,\r\n    public dialog: MatDialog, @Inject(MAT_DIALOG_DATA) public data: any,\r\n              private _fb: FormBuilder, private http: HttpClient,\r\n              private snackBar : SnackBarService) { }\r\n\r\n  ngOnInit(): void {\r\n    //console.log(this.data.user.imgUrl);\r\n    this.image = this.data.user.imgUrl;\r\n    this.user = this.data.user;\r\n    this.init();\r\n  }\r\n  onSelect(event) {\r\n   var file = new FileReader();\r\n   file.readAsDataURL(event.target.files[0]);\r\n  // console.log(event.target.files[0]);\r\n\r\n   var verifiImage = event.target.files[0].type;\r\n   if(verifiImage.match(/image\\/*/))\r\n   {\r\n      file.onload = (_event) => {\r\n  \r\n        this.image = file.result;\r\n        const base64 = this.image.split(\",\")[1];\r\n        const filess = new FormData();\r\n        this.ext = event.target.files[0].type.split(\"/\")[1];\r\n        return;\r\n        //console.log(this.image);\r\n      }\r\n   }\r\n   else{\r\n    this.snackBar.openSnackBar(\"Selectionner une image\", \"ERROR Image\",3000);\r\n   }\r\n   \r\n  }\r\n\r\n    public init(){\r\n      this.userForm = this._fb.group({\r\n        id : [this.user.id],\r\n        nom : [this.user.nom, Validators.required],\r\n        prenom: [this.user.prenom, Validators.required],\r\n        extension: null,\r\n        contact: this.user.contact,\r\n        imgUrl : this.user.imgUrl,\r\n        civilite: this.user.civilite,\r\n        provider: this.user.provider\r\n      })\r\n    }\r\n\r\n\r\n    onSubmit()\r\n    {\r\n      if(this.userForm.valid)\r\n      {\r\n        this.isLoadingResults= true;\r\n        if(this.image !=null){\r\n          this.userForm.get(\"imgUrl\").setValue(this.image.split(\",\")[1]);\r\n          this.userForm.get(\"extension\").setValue(this.ext);\r\n        }\r\n      //console.log(this.userForm.value);\r\n      this.http.put(environment.BACK_END.LOGIN.PROFILE_UPDATE_USER+\"\"+this.user.id, this.userForm.value).subscribe(\r\n        data =>\r\n        {\r\n          //console.log(data);\r\n          this.isLoadingResults= false;\r\n        },\r\n        (err : HttpErrorResponse) =>\r\n        {\r\n            console.log(err);\r\n            if(err.status <300)\r\n            {\r\n              this.isLoadingResults= false;\r\n              this.snackBar.openSnackBar(\"Profile Modifier\", \"Success\",3000);\r\n              this.dialogRef.close();\r\n            }\r\n            else{\r\n                this.snackBar.openSnackBar(\"User Not Modifier\", \"ERROR\",3000);\r\n                this.isLoadingResults= false;\r\n            }\r\n            \r\n        }\r\n      )\r\n      }\r\n      else\r\n      {\r\n        this.snackBar.openSnackBar(\"Remplire les champs SVP\", \"Champs Vide\",3000);\r\n        this.isLoadingResults= false;\r\n      }\r\n    }\r\n}\r\n","export default \".user-menu .mat-toolbar, .user-menu .mat-toolbar-row {\\n  height: 100px !important;\\n}\\n.user-menu .user-info {\\n  width: 230px;\\n}\\n.user-menu .user-info p {\\n  font-size: 16px;\\n  line-height: 22px;\\n  text-align: center;\\n}\\n.user-menu .user-info p .profile-img {\\n  padding-right: 10px;\\n}\\n.user-menu .mat-menu-item {\\n  height: 36px;\\n  line-height: 36px;\\n}\\n.information {\\n  width: 100%;\\n}\\n.information .infor {\\n  font-size: 15px;\\n  padding: 10px;\\n}\\n.information .infor mat-icon {\\n  margin-right: 10px;\\n}\\n.action-modif {\\n  padding: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXHBlcnNvbm5lbC1lbnRyZXByaXNlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNJO0VBQ0ksd0JBQUE7QUFBUjtBQUVJO0VBQ0ksWUFBQTtBQUFSO0FBQ1E7RUFDSSxlQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtBQUNaO0FBQVk7RUFDSSxtQkFBQTtBQUVoQjtBQUVJO0VBQ0ksWUFBQTtFQUNBLGlCQUFBO0FBQVI7QUFJQTtFQUNJLFdBQUE7QUFESjtBQUVJO0VBQ0ksZUFBQTtFQUNBLGFBQUE7QUFBUjtBQUNRO0VBQ0ksa0JBQUE7QUFDWjtBQUlBO0VBQ0ksYUFBQTtBQURKIiwiZmlsZSI6InBlcnNvbm5lbC1lbnRyZXByaXNlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnVzZXItbWVudXtcclxuICAgIC5tYXQtdG9vbGJhciwgLm1hdC10b29sYmFyLXJvd3tcclxuICAgICAgICBoZWlnaHQ6IDEwMHB4ICFpbXBvcnRhbnQ7XHJcbiAgICB9XHJcbiAgICAudXNlci1pbmZve1xyXG4gICAgICAgIHdpZHRoOiAyMzBweDtcclxuICAgICAgICBwe1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAyMnB4O1xyXG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgIC5wcm9maWxlLWltZ3tcclxuICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAubWF0LW1lbnUtaXRlbXtcclxuICAgICAgICBoZWlnaHQ6IDM2cHg7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDM2cHg7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5pbmZvcm1hdGlvbntcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgLmluZm9ye1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTVweDtcclxuICAgICAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgICAgIG1hdC1pY29ue1xyXG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4uYWN0aW9uLW1vZGlme1xyXG4gICAgcGFkZGluZzogMjBweDtcclxufVxyXG4iXX0= */\";","import { Component, Input, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AutresUser } from 'src/app/shared/models/utilisateeur';\r\nimport { UpdateAutrePersonneComponent } from '../../update-profile/autre-personne/autre-personne.component';\r\n\r\n@Component({\r\n  selector: 'app-autre-user',\r\n  templateUrl: './autre-user.component.html',\r\n  styleUrls: ['./autre-user.component.scss']\r\n})\r\nexport class AutreUserComponent implements OnInit {\r\n\r\n  @Input('user')\r\n  user: AutresUser ;\r\n  constructor(public dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n    //console.log(this.user);\r\n  }\r\n\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(UpdateAutrePersonneComponent, {\r\n      width: '600px',\r\n      data: {user: this.user},\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result ==null)\r\n      {\r\n        location.reload();\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"<div class=\\\"toolbar-dropdown-menu user-menu\\\">\\r\\n    <!--<span (mouseleave)=\\\"userMenuTrigger.closeMenu()\\\">-->\\r\\n        <mat-toolbar color=\\\"primary\\\">\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\" >\\r\\n                <img *ngIf=\\\"user.imgUrl\\\" class=\\\"profile-img\\\" src=\\\"{{user.imgUrl}}\\\" alt=\\\"user-image\\\" width=\\\"100px\\\" class=\\\"rounded\\\">\\r\\n                <p><b>{{user.email}}</b></p>\\r\\n            </div>  \\r\\n        </mat-toolbar>\\r\\n        <mat-card class=\\\"information\\\">\\r\\n            <p fxLayout=\\\"row\\\"  class=\\\"infor\\\">\\r\\n                <mat-icon>accessibility</mat-icon>  \\r\\n                <span> <strong><i>Civilité :</i> {{user.civilite}}</strong></span>\\r\\n            </p>\\r\\n            <p fxLayout=\\\"row\\\"  class=\\\"infor\\\">\\r\\n                <mat-icon>perm_identity</mat-icon>  \\r\\n                <span> <strong><i>Nom :</i> {{user.nom}}</strong></span>\\r\\n            </p>\\r\\n            <p fxLayout=\\\"row\\\" class=\\\"infor\\\">\\r\\n                <mat-icon>face</mat-icon>  \\r\\n                <span> <strong><i>Prenom : </i> {{user.prenom}}</strong></span>\\r\\n            </p>\\r\\n            <p fxLayout=\\\"row\\\" class=\\\"infor\\\">\\r\\n                <mat-icon> business</mat-icon>  \\r\\n                <span> <strong><i>Sociéte : </i> {{user.societe.nomSociete}}</strong></span>\\r\\n            </p>\\r\\n            <p fxLayout=\\\"row\\\" class=\\\"infor\\\">\\r\\n                <mat-icon> call</mat-icon>  \\r\\n                <span> <strong><i>Contact : </i> {{user.contact}}</strong></span>\\r\\n            </p>\\r\\n            <div class=\\\"divider\\\"></div>\\r\\n            <mat-card-actions align=\\\"end\\\" class=\\\"action-modif\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\" (click)=\\\"openDialog()\\\" >Modifier</button>\\r\\n            </mat-card-actions>\\r\\n\\r\\n        </mat-card>\\r\\n    <!--</span>-->\\r\\n</div>\\r\\n\\r\\n\\r\\n\";","import { HttpClient } from '@angular/common/http';\r\nimport { AutresUser } from './../../../../shared/models/utilisateeur';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { SnackBarService } from 'src/app/shared/services/SnackBar';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-autre-personne',\r\n  templateUrl: './autre-personne.component.html',\r\n  styleUrls: ['./autre-personne.component.scss']\r\n})\r\nexport class UpdateAutrePersonneComponent implements OnInit {\r\n  isLoadingResults= false;\r\n  files =[];\r\n  image: any;\r\n  userForm : FormGroup;\r\n  user: AutresUser;\r\n  ext = \"jpeg\";\r\n  constructor(public dialogRef: MatDialogRef<UpdateAutrePersonneComponent>,\r\n    public dialog: MatDialog, @Inject(MAT_DIALOG_DATA) public data: any,\r\n              private _fb: FormBuilder, private http: HttpClient,\r\n              private snackBar : SnackBarService) { }\r\n\r\n  ngOnInit(): void {\r\n    //console.log(this.data.user.imgUrl);\r\n    this.image = this.data.user.imgUrl;\r\n    this.user = this.data.user;\r\n    this.init();\r\n  }\r\n  onSelect(event) {\r\n   var file = new FileReader();\r\n   file.readAsDataURL(event.target.files[0]);\r\n  // console.log(event.target.files[0]);\r\n\r\n   var verifiImage = event.target.files[0].type;\r\n   if(verifiImage.match(/image\\/*/))\r\n   {\r\n      file.onload = (_event) => {\r\n  \r\n        this.image = file.result;\r\n        const base64 = this.image.split(\",\")[1];\r\n        const filess = new FormData();\r\n        this.ext = event.target.files[0].type.split(\"/\")[1];\r\n        return;\r\n        //console.log(this.image);\r\n      }\r\n   }\r\n   else{\r\n    this.snackBar.openSnackBar(\"Selectionner une image\", \"ERROR Image\",3000);\r\n   }\r\n   \r\n  }\r\n\r\n    public init(){\r\n      this.userForm = this._fb.group({\r\n        id : [this.user.id],\r\n        nom : [this.user.nom, Validators.required],\r\n        prenom: [this.user.prenom, Validators.required],\r\n        extension: null,\r\n        contact: this.user.contact,\r\n        imgUrl : this.user.imgUrl,\r\n        civilite: this.user.civilite,\r\n        provider: this.user.provider\r\n      })\r\n    }\r\n\r\n\r\n    onSubmit()\r\n    {\r\n      if(this.userForm.valid)\r\n      {\r\n        this.isLoadingResults= true;\r\n        if(this.image !=null){\r\n          this.userForm.get(\"imgUrl\").setValue(this.image.split(\",\")[1]);\r\n          this.userForm.get(\"extension\").setValue(this.ext);\r\n        }\r\n      console.log(this.userForm.value);\r\n      this.http.put(environment.BACK_END.LOGIN.PROFILE_UPDATE_USER+\"\"+this.user.id, this.userForm.value).subscribe(\r\n        data =>\r\n        {\r\n          //console.log(data);\r\n        },\r\n        (err : HttpErrorResponse) =>\r\n        {\r\n            console.log(err);\r\n            if(err.status <300)\r\n            {\r\n              this.snackBar.openSnackBar(\"Profile Modifier\", \"Success\",3000);\r\n              this.dialogRef.close();\r\n            }\r\n            else{\r\n              this.isLoadingResults= false;\r\n                this.snackBar.openSnackBar(\"User Not Modifier\", \"ERROR\",3000);\r\n            }\r\n            \r\n        }\r\n      )\r\n      }\r\n      else\r\n      {\r\n        this.snackBar.openSnackBar(\"Remplire les champs SVP\", \"Champs Vide\",3000);\r\n      }\r\n    }\r\n}\r\n","export default \"<div *ngIf=\\\"isLoadingResults\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"user-spinner\\\">   \\r\\n    <mat-spinner color=\\\"primary\\\"></mat-spinner>\\r\\n  </div>\\r\\n\\r\\n<div class=\\\"header\\\"  fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" mat-dialog-title color=\\\"primary\\\">\\r\\n    <h2>Modifier Le Profile</h2>\\r\\n</div>\\r\\n<div mat-dialog-content *ngIf=\\\"!isLoadingResults\\\">\\r\\n    <form [formGroup]=\\\"userForm\\\" enctype=\\\"multipart/form-data\\\" >\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n            <div *ngIf=\\\"image\\\">\\r\\n                <img class=\\\"profile-img\\\" src=\\\"{{image}}\\\" alt=\\\"user-image\\\" width=\\\"100\\\" class=\\\"rounded mat-elevation-z6\\\">\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayout.lt-md=\\\"row wrap\\\">\\r\\n            <input mat-raised-button type=\\\"file\\\" (change)=\\\"onSelect($event)\\\" placeholder=\\\"Changer sa photo de profile\\\">\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start\\\" fxLayout.lt-md=\\\"row wrap\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                <mat-label>Email</mat-label>\\r\\n                <input matInput #input maxlength=\\\"10\\\"  [value]=\\\"user.email\\\" readonly>\\r\\n                \\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                <mat-label>Nom</mat-label>\\r\\n                <input matInput #input  formControlName=\\\"nom\\\" required>\\r\\n                <mat-error *ngIf=\\\"userForm.get('nom').touched && userForm.get('nom').invalid\\\" >\\r\\n                    <p>Champs obligatoire, cet champs doit pas etre vide</p>\\r\\n                  </mat-error> \\r\\n              </mat-form-field>\\r\\n              <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                <mat-label>Prenom</mat-label>\\r\\n                <input matInput #input  formControlName=\\\"prenom\\\" required>\\r\\n                <mat-error *ngIf=\\\"userForm.get('prenom').touched && userForm.get('prenom').invalid\\\">\\r\\n                    <p>Champs obligatoire, cet champs doit pas etre vide</p>\\r\\n                  </mat-error> \\r\\n              </mat-form-field>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                <mat-label>Contact</mat-label>\\r\\n                <span matPrefix>+33 &nbsp;</span>\\r\\n                <input matInput #input type=\\\"number\\\"  formControlName=\\\"contact\\\">\\r\\n            </mat-form-field>\\r\\n              <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                    <mat-label>Civilité</mat-label>\\r\\n                    <mat-select disableRipple formControlName=\\\"civilite\\\" required>\\r\\n                        <mat-option >--SELECT--</mat-option>\\r\\n                        <mat-option value=\\\"Mr\\\">Mr</mat-option>\\r\\n                        <mat-option value=\\\"Mme\\\">Mme</mat-option>\\r\\n                        <mat-option value=\\\"Mesdamoiselle\\\">Mesdamoiselle</mat-option>\\r\\n                    </mat-select>\\r\\n               </mat-form-field>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n            \\r\\n      </div>\\r\\n    </form>\\r\\n</div>\\r\\n<div mat-dialog-actions align=\\\"end\\\" *ngIf=\\\"!isLoadingResults\\\">\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n        <button mat-raised-button color=\\\"warn\\\" [mat-dialog-close]=\\\"userForm.value\\\" >Annuler</button>\\r\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onSubmit()\\\" >Enregistrer</button>\\r\\n    </div>\\r\\n</div>\";","export default \"<span *ngIf=\\\"!isLoad\\\">\\r\\n    <span *ngIf=\\\"Utilisateur.profile.libelle =='CLIENT'\\\" >\\r\\n        <app-client-view [client]=\\\"Utilisateur\\\"></app-client-view>\\r\\n    </span>\\r\\n    <span *ngIf=\\\"Utilisateur.societe && Utilisateur.civilite\\\">\\r\\n        <app-autre-user [user]=\\\"Utilisateur\\\"></app-autre-user>\\r\\n    </span>\\r\\n    <span *ngIf=\\\" !Utilisateur.societe && Utilisateur.civilite\\\">\\r\\n        <app-personnel-entreprise [user]=\\\"Utilisateur\\\"></app-personnel-entreprise>\\r\\n    </span>\\r\\n\\r\\n    \\r\\n</span>\\r\\n\\r\\n<span fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" *ngIf=\\\"isLoad\\\">\\r\\n    <div id=\\\"app-spinner\\\" [class.hide]=\\\"true\\\"> \\r\\n        <mat-spinner color=\\\"primary\\\"></mat-spinner>  \\r\\n        <h4>Chargement...</h4>\\r\\n    </div>\\r\\n</span>\\r\\n\\r\\n\";","export default \"<div *ngIf=\\\"isLoadingResults\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"user-spinner\\\">   \\r\\n    <mat-spinner color=\\\"primary\\\"></mat-spinner>\\r\\n  </div>\\r\\n\\r\\n<div class=\\\"header\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" mat-dialog-title color=\\\"primary\\\">\\r\\n    <h2>Modifier Le Profile</h2>\\r\\n</div>\\r\\n<div mat-dialog-content *ngIf=\\\"!isLoadingResults\\\">\\r\\n    <form [formGroup]=\\\"userForm\\\" enctype=\\\"multipart/form-data\\\" >\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n            <div *ngIf=\\\"image\\\">\\r\\n                <img class=\\\"profile-img\\\" src=\\\"{{image}}\\\" alt=\\\"user-image\\\" width=\\\"100\\\" class=\\\"rounded mat-elevation-z6\\\">\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayout.lt-md=\\\"row wrap\\\">\\r\\n            <input mat-raised-button type=\\\"file\\\" (change)=\\\"onSelect($event)\\\" placeholder=\\\"Changer sa photo de profile\\\">\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start\\\" fxLayout.lt-md=\\\"row wrap\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                <mat-label>Email</mat-label>\\r\\n                <input matInput #input maxlength=\\\"10\\\"  [value]=\\\"user.email\\\" readonly>\\r\\n                \\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                <mat-label>Nom</mat-label>\\r\\n                <input matInput #input  formControlName=\\\"nom\\\" required>\\r\\n                <mat-error *ngIf=\\\"userForm.get('nom').touched && userForm.get('nom').invalid\\\" >\\r\\n                    <p>Champs obligatoire, cet champs doit pas etre vide</p>\\r\\n                  </mat-error> \\r\\n              </mat-form-field>\\r\\n              <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                <mat-label>Prenom</mat-label>\\r\\n                <input matInput #input  formControlName=\\\"prenom\\\" required>\\r\\n                <mat-error *ngIf=\\\"userForm.get('prenom').touched && userForm.get('prenom').invalid\\\">\\r\\n                    <p>Champs obligatoire, cet champs doit pas etre vide</p>\\r\\n                  </mat-error> \\r\\n              </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                <mat-label>Contact</mat-label>\\r\\n                <span matPrefix>+33 &nbsp;</span>\\r\\n                <input matInput #input type=\\\"number\\\"  formControlName=\\\"contact\\\">\\r\\n            </mat-form-field>\\r\\n              <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                    <mat-label>Civilité</mat-label>\\r\\n                    <mat-select disableRipple formControlName=\\\"civilite\\\" required>\\r\\n                        <mat-option >--SELECT--</mat-option>\\r\\n                        <mat-option value=\\\"Mr\\\">Mr</mat-option>\\r\\n                        <mat-option value=\\\"Mme\\\">Mme</mat-option>\\r\\n                        <mat-option value=\\\"Mesdamoiselle\\\">Mesdamoiselle</mat-option>\\r\\n                    </mat-select>\\r\\n               </mat-form-field>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n            \\r\\n      </div>\\r\\n    </form>\\r\\n</div>\\r\\n<div mat-dialog-actions align=\\\"end\\\" *ngIf=\\\"!isLoadingResults\\\">\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n        <button mat-raised-button color=\\\"warn\\\" [mat-dialog-close]=\\\"userForm.value\\\" >Annuler</button>\\r\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onSubmit()\\\" >Enregistrer</button>\\r\\n    </div>\\r\\n</div>\";","import { Utilisateur } from './../../shared/models/utilisateeur';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ProfileService } from './profile.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  isLoad = false;\r\n  constructor(private profileService : ProfileService) { }\r\n\r\n  Utilisateur : any;\r\n  ngOnInit(): void {\r\n    this.isLoad = true;\r\n    this.profileService.getMe().subscribe(\r\n      (user) =>{\r\n        this.Utilisateur = user;\r\n        this.isLoad = false;\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n\r\n}\r\n","export default \"<div class=\\\"toolbar-dropdown-menu user-menu\\\">\\r\\n    <!--<span (mouseleave)=\\\"userMenuTrigger.closeMenu()\\\">-->\\r\\n        <mat-toolbar color=\\\"primary\\\">\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\" >\\r\\n                <img *ngIf=\\\"client.imgUrl\\\" class=\\\"profile-img\\\" src=\\\"{{client.imgUrl}}\\\" alt=\\\"user-image\\\" width=\\\"100px\\\" class=\\\"rounded\\\">\\r\\n                <p><b>{{client.email}}</b></p>\\r\\n            </div>  \\r\\n        </mat-toolbar>\\r\\n        <mat-card class=\\\"information\\\">\\r\\n            <p fxLayout=\\\"row\\\"  class=\\\"infor\\\">\\r\\n                <mat-icon>perm_identity</mat-icon>  \\r\\n                <span> <strong><i>Nom :</i> {{client.nom}}</strong></span>\\r\\n            </p>\\r\\n            <p fxLayout=\\\"row\\\" class=\\\"infor\\\">\\r\\n                <mat-icon>face</mat-icon>  \\r\\n                <span> <strong><i>Prenom : </i> {{client.prenom}}</strong></span>\\r\\n            </p>\\r\\n            <p fxLayout=\\\"row\\\" class=\\\"infor\\\">\\r\\n                <mat-icon> business</mat-icon>  \\r\\n                <span> <strong><i>Sociéte : </i> {{client.societe}}</strong></span>\\r\\n            </p>\\r\\n            <p fxLayout=\\\"row\\\" class=\\\"infor\\\">\\r\\n                <mat-icon> call</mat-icon>  \\r\\n                <span> <strong><i>Contact : </i> {{client.contact}}</strong></span>\\r\\n            </p>\\r\\n            <p fxLayout=\\\"row\\\"  class=\\\"infor\\\">\\r\\n                <mat-icon>wc</mat-icon>  \\r\\n                <span> <strong><i>Status Familiale : </i> {{client.statusFamiliale}}</strong></span>\\r\\n            </p>\\r\\n            <p fxLayout=\\\"row\\\" class=\\\"infor\\\">\\r\\n                <mat-icon>access_time</mat-icon>  \\r\\n                <span> <strong><i>Heure à Joindre : </i> {{client.heureAContacter}}</strong></span>\\r\\n            </p>\\r\\n            <div class=\\\"divider\\\"></div>\\r\\n            <mat-card-actions align=\\\"end\\\" class=\\\"action-modif\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\" (click)=\\\"openDialog()\\\" >Modifier</button>\\r\\n            </mat-card-actions>\\r\\n\\r\\n        </mat-card>\\r\\n    <!--</span>-->\\r\\n</div>\\r\\n\\r\\n\\r\\n\";","import { ProfileModel } from './Securite';\r\nimport { societeModel } from \"./societe.model\";\r\n\r\nexport class Utilisateur{\r\n        id : number;\r\n        email: string;\r\n         imgUrl :string;\r\n         nom :string;\r\n         password :string;\r\n         prenom :string;\r\n         provider :string;\r\n         contact: string;\r\n         profile: ProfileModel\r\n}\r\n\r\nexport class Client extends Utilisateur{\r\n        societe : string;\r\n\tstatusFamiliale : string;\r\n        heureAContacter : string;\r\n        adresse: string;\r\n}\r\n\r\n\r\nexport class UpdatePassword{\r\n        password: string;\r\n        confirm:string;\r\n}\r\n\r\nexport class AutresUser extends Utilisateur{\r\n        societe: societeModel;\r\n        civilite: string;\r\n}\r\n\r\nexport class PersonnelSociete extends Utilisateur{\r\n        civilite: string;\r\n}\r\n","import { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ProfileComponent } from './profile.component';\r\nimport { Router, RouterModule } from '@angular/router';\r\nimport { ClientViewComponent } from './profile-view/client-view/client-view.component';\r\nimport { ArtisanViewComponent } from './profile-view/artisan-view/artisan-view.component';\r\nimport { LayoutModule } from 'src/app/layout/layout.module';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { UpdateArtisanComponent } from './update-profile/update-artisan/update-artisan.component';\r\nimport { UpdateClientComponent } from './update-profile/update-client/update-client.component';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AutreUserComponent } from './profile-view/autre-user/autre-user.component';\r\nimport { PersonnelEntrepriseComponent } from './profile-view/personnel-entreprise/personnel-entreprise.component';\r\nimport { UpdateAutrePersonneComponent } from './update-profile/autre-personne/autre-personne.component';\r\nimport { UpdatePersonnelEntrepriseComponent } from './update-profile/update-personnel-entreprise/update-personnel-entreprise.component';\r\nimport { authInterceptorProviders } from '../login/_helper/AuthInterceptorService';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { ErrorInterceptor } from '../login/_helper/error.interceptor';\r\n\r\nexport const routes = [\r\n  { path: '', component: ProfileComponent, pathMatch: 'full' },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [ProfileComponent, ClientViewComponent, ArtisanViewComponent, UpdateArtisanComponent, UpdateClientComponent, AutreUserComponent, PersonnelEntrepriseComponent, UpdateAutrePersonneComponent, UpdatePersonnelEntrepriseComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n  ],\r\n  providers: [ \r\n    authInterceptorProviders,\r\n    AppSettings,\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }\r\n  ],\r\n})\r\nexport class ProfileModule { }\r\n","import { SnackBarService } from './../../../../shared/services/SnackBar';\r\nimport { environment } from './../../../../../environments/environment';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Client } from './../../../../shared/models/utilisateeur';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog'\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\nexport interface FileProfile{\r\n  lastModified: number;\r\n  lastModifiedDate: Date;\r\n  name: string;\r\n  size: number;\r\n  type: string;\r\n  webkitRelativePath: string;\r\n}\r\n@Component({\r\n  selector: 'app-update-client',\r\n  templateUrl: './update-client.component.html',\r\n  styleUrls: ['./update-client.component.scss']\r\n})\r\nexport class UpdateClientComponent implements OnInit {\r\n  files =[];\r\n  image: any;\r\n  clientForm : FormGroup;\r\n  client: Client;\r\n  ext = \"jpeg\";\r\n  isLoadingResults= false;\r\n  constructor(public dialogRef: MatDialogRef<UpdateClientComponent>,\r\n    public dialog: MatDialog, @Inject(MAT_DIALOG_DATA) public data: any,\r\n              private _fb: FormBuilder, private http: HttpClient,\r\n              private snackBar : SnackBarService) { }\r\n\r\n  ngOnInit(): void {\r\n    //console.log(this.data.client.imgUrl);\r\n    this.image = this.data.client.imgUrl;\r\n    this.client = this.data.client;\r\n    this.init();\r\n  }\r\n  onSelect(event) {\r\n   var file = new FileReader();\r\n   file.readAsDataURL(event.target.files[0]);\r\n  // console.log(event.target.files[0]);\r\n\r\n   var verifiImage = event.target.files[0].type;\r\n   if(verifiImage.match(/image\\/*/))\r\n   {\r\n      file.onload = (_event) => {\r\n  \r\n        this.image = file.result;\r\n        const base64 = this.image.split(\",\")[1];\r\n        const filess = new FormData();\r\n        this.ext = event.target.files[0].type.split(\"/\")[1];\r\n        return;\r\n        //console.log(this.image);\r\n      }\r\n   }\r\n   else{\r\n    this.snackBar.openSnackBar(\"Selectionner une image\", \"ERROR Image\",3000);\r\n   }\r\n   \r\n  }\r\n\r\n    public init(){\r\n      this.clientForm = this._fb.group({\r\n        id : [this.client.id],\r\n        nom : [this.client.nom, Validators.required],\r\n        prenom: [this.client.prenom, Validators.required],\r\n        extension: null,\r\n        contact: this.client.contact,\r\n        imgUrl : this.client.imgUrl,\r\n        societe : this.client.societe,\r\n        statusFamiliale: this.client.statusFamiliale,\r\n        heureAContacter: this.client.heureAContacter,\r\n        adresse:[this.client.adresse, Validators.required]\r\n      })\r\n    }\r\n\r\n\r\n    onSubmit()\r\n    {\r\n      if(this.clientForm.valid)\r\n      {\r\n        this.isLoadingResults= true;\r\n        if(this.image !=null){\r\n          this.clientForm.get(\"imgUrl\").setValue(this.image.split(\",\")[1]);\r\n          this.clientForm.get(\"extension\").setValue(this.ext);\r\n        }\r\n      //console.log(this.clientForm.value);\r\n      this.http.put(environment.BACK_END.LOGIN.PROFILE_UPDATE_CLIENT+\"\"+this.client.id, this.clientForm.value).subscribe(\r\n        data =>\r\n        {\r\n          //console.log(data);\r\n        },\r\n        (err : HttpErrorResponse) =>\r\n        {\r\n            console.log(err);\r\n            if(err.status <300)\r\n            {\r\n              this.snackBar.openSnackBar(\"Profile Modifier\", \"Success\",3000);\r\n              this.dialogRef.close();\r\n            }\r\n            else{\r\n              this.isLoadingResults= false;\r\n                this.snackBar.openSnackBar(\"Remplire les champs obligatoire\", \"ERROR\",3000);\r\n            }\r\n            \r\n        }\r\n      )\r\n      }\r\n      else\r\n      {\r\n        this.isLoadingResults= false;\r\n        this.snackBar.openSnackBar(\"Remplire les champs SVP\", \"Champs Vide\",3000);\r\n      }\r\n    }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}