{"version":3,"sources":["webpack:///src/app/features/forget-password/forget-password.component.ts","webpack:///src/app/features/forget-password/forget-password.component.scss","webpack:///src/app/features/inscription/inscription.component.ts","webpack:///src/app/features/inscription/inscription.component.html","webpack:///src/app/features/login/login.component.scss","webpack:///src/app/features/inscription/inscription.component.scss","webpack:///src/app/features/login/login.component.html","webpack:///src/app/features/forget-password/forget-password.component.html","webpack:///src/app/theme/utils/app-validators.ts","webpack:///node_modules/angularx-social-login/__ivy_ngcc__/fesm2015/angularx-social-login.js","webpack:///src/app/features/forget-password/forget-password.service.ts","webpack:///src/app/features/login/login.module.ts","webpack:///src/app/features/login/login.component.ts"],"names":["ForgetPasswordComponent","forgetPassword","route","snackBar","isLoadingResults","consigne","MailDeRecuperation","mailRecuperation","subscribe","data","console","log","error","status","openSnackBar","envoiMailByCode","codeValidation","navigate","envoiDuPassword","recuperationDuMail","selector","template","InscriptionComponent","authService","appSettings","fb","router","http","loginS","token","hidev","hide","settings","formIns","group","required","compose","minLength","validator","authState","user","get","setValue","firstName","lastName","provider","id","email","onSubmit","signIn","PROVIDER_ID","signOut","valid","inscription","value","err","reset","location","reload","emailValidator","control","emailRegexp","test","invalidEmail","matchingPasswords","passwordKey","passwordConfirmationKey","password","controls","passwordConfirmation","setErrors","mismatchedPasswords","BaseLoginProvider","src","onload","parentElement","document","getElementById","signInJS","createElement","async","head","appendChild","SocialUser","GoogleLoginProvider","clientId","initOptions","scope","Promise","resolve","reject","loadScript","gapi","load","auth2","init","Object","assign","client_id","then","loginStatusOptions","isSignedIn","profile","currentUser","getBasicProfile","getId","name","getName","getEmail","photoUrl","getImageUrl","getGivenName","getFamilyName","response","refreshToken","reloadAuthResponse","authResponse","authToken","access_token","idToken","id_token","getAuthResponse","signInOptions","options","offlineAccess","offline_access","promise","grantOfflineAccess","code","authorizationCode","backendToken","closed","revoke","signOutPromise","disconnect","SocialAuthService","config","providers","Map","autoLogin","_user","_authState","initialized","_initState","initialize","undefined","onError","forEach","item","set","all","Array","from","values","map","loginStatusPromises","loggedIn","key","getLoginStatus","push","next","debug","complete","providerId","ERR_NOT_INITIALIZED","ERR_NOT_SUPPORTED_FOR_REFRESH_TOKEN","providerObject","ERR_LOGIN_PROVIDER_NOT_FOUND","ERR_NOT_LOGGED_IN","asObservable","ɵfac","SocialAuthService_Factory","t","ɵprov","factory","ctorParameters","type","decorators","args","SocialLoginModule","parentModule","Error","ngModule","provide","useValue","ɵmod","ɵinj","SocialLoginModule_Factory","imports","ngJitMode","DummyLoginProvider","dummy","DEFAULT_USER","FacebookLoginProvider","locale","fields","version","FB","appId","autoLogAppEvents","cookie","xfbml","api","fbUser","first_name","last_name","accessToken","login","logout","AmazonLoginProvider","scope_data","essential","redirect_uri","origin","amazonRoot","body","window","onAmazonLoginReady","amazon","Login","setClientId","retrieveToken","retrieveProfile","success","CustomerId","Name","PrimaryEmail","authorize","persistToken","clearToken","message","localStorage","setItem","getItem","removeItem","VKLoginProvider","VK_API_URL","VK_API_GET_USER","VK","apiId","getLoginStatusInternal","signInInternal","Auth","loginResponse","getUser","session","mid","sid","userId","Api","call","user_id","v","userResponse","createUser","photo_max","ProtocolMode","COMMON_AUTHORITY","MicrosoftLoginProvider","authority","scopes","knownAuthorities","protocolMode","AAD","clientCapabilities","cacheLocation","auth","redirectUri","cache","_instance","msal","PublicClientApplication","e","meRequest","XMLHttpRequest","onreadystatechange","readyState","userInfo","JSON","parse","responseText","idTokenClaims","account","username","givenName","surname","open","setRequestHeader","send","accounts","getAllAccounts","length","ssoSilent","loginHint","getSocialUser","loginPopup","postLogoutRedirectUri","ForgetPasswordService","mail","BACK_END","LOGIN","CONNEXION","providedIn","routes","path","component","pathMatch","LoginModule","declarations","forChild","LoginComponent","projetStorage","getToken","checkIAmLogin","form","roles","saveToken","setMenu","saveUtilisateur","nom","prenom","saveGestionTache","saveGestionUser","setGestionAgenda","setGestionDossier","element"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAWaA,uBAAuB;AAMlC,yCAAoBC,cAApB,EAAkEC,KAAlE,EACsBC,QADtB,EACiD;AAAA;;AAD7B,eAAAF,cAAA,GAAAA,cAAA;AAA8C,eAAAC,KAAA,GAAAA,KAAA;AAC5C,eAAAC,QAAA,GAAAA,QAAA;AALtB,eAAAC,gBAAA,GAAiB,KAAjB;AAGA,eAAAC,QAAA,GAAW,KAAX;AAEoD;;AAPlB;AAAA;AAAA,qCAS1B,CACP;AAViC;AAAA;AAAA,+CAYhB;AAAA;;AAEhB,iBAAKJ,cAAL,CAAoBK,kBAApB,CAAuC,KAAKC,gBAA5C,EAA8DC,SAA9D,CAAwE,UAACC,IAAD,EAAQ;AAC9EC,qBAAO,CAACC,GAAR,CAAYF,IAAZ;AAED,aAHD,EAGE,UAACG,KAAD,EAA4B;AAC5BF,qBAAO,CAACC,GAAR,CAAYC,KAAZ;;AACA,kBAAGA,KAAK,CAACC,MAAN,GAAa,GAAhB,EACA;AACE,qBAAI,CAACT,gBAAL,GAAsB,KAAtB;;AACA,qBAAI,CAACD,QAAL,CAAcW,YAAd,CAA2B,6DAA3B,EAA0F,YAA1F,EAAwG,IAAxG;AACD,eAJD,MAKI;AACF,qBAAI,CAACT,QAAL,GAAe,IAAf;AACA,qBAAI,CAACD,gBAAL,GAAsB,KAAtB;;AACA,qBAAI,CAACD,QAAL,CAAcW,YAAd,CAA2B,4BAA3B,EAAwD,oBAAxD,EAA8E,IAA9E;AACD;AACF,aAfD;AAgBD;AA9BiC;AAAA;AAAA,4CAgCnB;AAAA;;AACb,iBAAKb,cAAL,CAAoBc,eAApB,CAAoC,KAAKC,cAAzC,EAAyDR,SAAzD,CAAmE,UAACC,IAAD,EAAQ,CAE1E,CAFD,EAEE,UAACG,KAAD,EAA4B;AAC5BF,qBAAO,CAACC,GAAR,CAAYC,KAAZ;;AACA,kBAAGA,KAAK,CAACC,MAAN,GAAa,GAAhB,EACA;AACE,sBAAI,CAACT,gBAAL,GAAsB,KAAtB;;AACA,sBAAI,CAACD,QAAL,CAAcW,YAAd,CAA2B,0DAA3B,EAAuF,eAAvF,EAAwG,IAAxG;AACD,eAJD,MAKI;AACF,sBAAI,CAACT,QAAL,GAAe,IAAf;;AACA,sBAAI,CAACF,QAAL,CAAcW,YAAd,CAA2B,0CAA3B,EAAsE,mBAAtE,EAA2F,IAA3F;;AACA,sBAAI,CAACZ,KAAL,CAAWe,QAAX,CAAoB,CAAC,QAAD,CAApB;AACD;AACF,aAdD;AAeD;AAhDiC;AAAA;AAAA,qCAkD1B;AACN,iBAAKb,gBAAL,GAAsB,IAAtB;;AACA,gBAAG,KAAKC,QAAR,EAAiB;AACf,mBAAKa,eAAL;AACD,aAFD,MAGI;AACF,mBAAKC,kBAAL;AACD;AACF;AA1DiC;;AAAA;AAAA,S;;;;gBAP3B;;gBAFA;;gBACA;;;;AAQInB,6BAAuB,eALnC,gEAAU;AACToB,gBAAQ,EAAE,qBADD;AAETC,gBAAQ,EAAR,kFAFS;;AAAA,OAAV,CAKmC,E,iCAME,8E,EAAqC,sD,EACzC,gF,EAPE,GAAvBrB,uBAAuB,CAAvB;;;;;;;;;;;;;;;;ACXb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCkBFsB,oBAAoB;AAQ/B,sCAAoBC,WAApB,EAA0DC,WAA1D,EACSC,EADT,EACiCC,MADjC,EACwDC,IADxD,EAEWC,MAFX,EAEwCC,KAFxC,EAE2E1B,QAF3E,EAEoG;AAAA;;AAFhF,eAAAoB,WAAA,GAAAA,WAAA;AAAsC,eAAAC,WAAA,GAAAA,WAAA;AACjD,eAAAC,EAAA,GAAAA,EAAA;AAAwB,eAAAC,MAAA,GAAAA,MAAA;AAAuB,eAAAC,IAAA,GAAAA,IAAA;AAC7C,eAAAC,MAAA,GAAAA,MAAA;AAA6B,eAAAC,KAAA,GAAAA,KAAA;AAAmC,eAAA1B,QAAA,GAAAA,QAAA;AAJ3E,eAAA2B,KAAA,GAAO,IAAP;AACA,eAAAC,IAAA,GAAO,IAAP;AAIE,eAAKC,QAAL,GAAgB,KAAKR,WAAL,CAAiBQ,QAAjC;AACA,eAAKC,OAAL,GAAe,KAAKR,EAAL,CAAQS,KAAR,CAAc;AAC3B,mBAAO,CAAC,IAAD,EAAO,0DAAWC,QAAlB,CADoB;AAE3B,sBAAS,CAAC,IAAD,EAAO,0DAAWA,QAAlB,CAFkB;AAG3B,sBAAS,CAAC,IAAD,CAHkB;AAI3B,wBAAY,CAAC,IAAD,CAJe;AAK3B,qBAAS,CAAC,IAAD,EAAM,0DAAWC,OAAX,CAAmB,CAAC,0DAAWD,QAAZ,EAAsB,kFAAtB,CAAnB,CAAN,CALkB;AAM3B,wBAAY,CAAC,IAAD,EAAO,CAAC,0DAAWA,QAAZ,EAAsB,0DAAWE,SAAX,CAAqB,CAArB,CAAtB,CAAP,CANe;AAO3B,6BAAiB,CAAC,IAAD,EAAO,CAAC,0DAAWF,QAAZ,EAAsB,0DAAWE,SAAX,CAAqB,CAArB,CAAtB,CAAP;AAPU,WAAd,EAQX;AACAC,qBAAS,EAAE,0DAAU,UAAV,EAAsB,eAAtB;AADX,WARW,CAAf;AAWD;;AAvB8B;AAAA;AAAA,qCAyBpB;AAAA;;AAET,iBAAKf,WAAL,CAAiBgB,SAAjB,CAA2B/B,SAA3B,CAAqC,UAACgC,IAAD,EAAU;AAC7C,oBAAI,CAACA,IAAL,GAAYA,IAAZ;;AACA,oBAAI,CAACP,OAAL,CAAaQ,GAAb,CAAiB,KAAjB,EAAwBC,QAAxB,CAAiCF,IAAI,CAACG,SAAtC;;AACA,oBAAI,CAACV,OAAL,CAAaQ,GAAb,CAAiB,QAAjB,EAA2BC,QAA3B,CAAoCF,IAAI,CAACI,QAAzC,EAH6C,CAI7C;;;AACA,oBAAI,CAACX,OAAL,CAAaQ,GAAb,CAAiB,UAAjB,EAA6BC,QAA7B,CAAsCF,IAAI,CAACK,QAA3C;;AACA,oBAAI,CAACZ,OAAL,CAAaQ,GAAb,CAAiB,UAAjB,EAA6BC,QAA7B,CAAsCF,IAAI,CAACM,EAA3C;;AACA,oBAAI,CAACb,OAAL,CAAaQ,GAAb,CAAiB,eAAjB,EAAkCC,QAAlC,CAA2CF,IAAI,CAACM,EAAhD;;AACA,oBAAI,CAACb,OAAL,CAAaQ,GAAb,CAAiB,OAAjB,EAA0BC,QAA1B,CAAmCF,IAAI,CAACO,KAAxC;;AACA,oBAAI,CAACC,QAAL;AAED,aAXD;AAYD;AAvC8B;AAAA;AAAA,6CAyCf;AACd,iBAAKzB,WAAL,CAAiB0B,MAAjB,CAAwB,0EAAoBC,WAA5C;AACD;AA3C8B;AAAA;AAAA,yCA6CnB;AACV,iBAAK3B,WAAL,CAAiB0B,MAAjB,CAAwB,4EAAsBC,WAA9C;AACD;AA/C8B;AAAA;AAAA,oCAiDxB;AACL,iBAAK3B,WAAL,CAAiB4B,OAAjB;AACD;AAnD8B;AAAA;AAAA,qCAsDvB;AAAA;;AACP,gBAAG,KAAKlB,OAAL,CAAamB,KAAhB,EAAsB;AACnB;AACF,mBAAKxB,MAAL,CAAYyB,WAAZ,CAAwB,KAAKpB,OAAL,CAAaqB,KAArC,EAA4C9C,SAA5C,CAAsD,UAACC,IAAD,EAAQ,CAE7D,CAFD,EAGA,UAAC8C,GAAD,EAA4B;AAC1B;AACA,oBAAGA,GAAG,CAAC1C,MAAJ,IAAa,GAAhB,EAAoB;AAClB,wBAAI,CAACV,QAAL,CAAcW,YAAd,CAA2B,2BAA3B,EAAwD,aAAxD,EAAuE,IAAvE;;AACA,wBAAI,CAACY,MAAL,CAAYT,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACD,iBAHD,MAII;AACF,wBAAI,CAACgB,OAAL,CAAauB,KAAb;;AACA,wBAAI,CAACrD,QAAL,CAAcW,YAAd,CAA2B,yBAA3B,EAAsD,aAAtD,EAAqE,IAArE;;AACA2C,0BAAQ,CAACC,MAAT;AACD;AACF,eAdD;AAeA,aAjBD,MAkBI;AACH,mBAAKvD,QAAL,CAAcW,YAAd,CAA2B,yBAA3B,EAAsD,aAAtD,EAAqE,IAArE;AACA;AACD;AA5E8B;;AAAA;AAAA,S;;;;gBAboB;;gBAC5C;;gBAHgB;;gBAChB;;gBAHA;;gBAOA;;gBACA;;gBATA;;;;AAkBIQ,0BAAoB,eALhC,gEAAU;AACTF,gBAAQ,EAAE,iBADD;AAETC,gBAAQ,EAAR,8EAFS;;AAAA,OAAV,CAKgC,E,iCAQE,uE,EAAqC,gE,EACzD,0D,EAA2B,sD,EAAsB,+D,EAC3C,qF,EAA4B,+E,EAAsC,yE,EAVtD,GAApBC,oBAAoB,CAApB;;;;;;;;;;;;;;;;AClBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACEf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAO,eAASqC,cAAT,CAAwBC,OAAxB,EAA4C;AAC/C,YAAIC,WAAW,GAAG,yCAAlB;;AACA,YAAID,OAAO,CAACN,KAAR,IAAiB,CAACO,WAAW,CAACC,IAAZ,CAAiBF,OAAO,CAACN,KAAzB,CAAtB,EAAuD;AACnD,iBAAO;AAACS,wBAAY,EAAE;AAAf,WAAP;AACH;AACJ;;AAEM,eAASC,iBAAT,CAA2BC,WAA3B,EAAgDC,uBAAhD,EAAiF;AACpF,eAAO,UAAChC,KAAD,EAAsB;AACzB,cAAIiC,QAAQ,GAAEjC,KAAK,CAACkC,QAAN,CAAeH,WAAf,CAAd;AACA,cAAII,oBAAoB,GAAEnC,KAAK,CAACkC,QAAN,CAAeF,uBAAf,CAA1B;;AACA,cAAIC,QAAQ,CAACb,KAAT,KAAmBe,oBAAoB,CAACf,KAA5C,EAAmD;AAC/C,mBAAOe,oBAAoB,CAACC,SAArB,CAA+B;AAACC,iCAAmB,EAAE;AAAtB,aAA/B,CAAP;AACH;AACJ,SAND;AAOH;;;;;;;;;;;;;;;;;ACjBD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAKMC,iB;AACF,qCAAc;AAAA;AAAG;;;;qCACN1B,E,EAAI2B,G,EAAKC,M,EAA8B;AAAA,gBAAtBC,aAAsB,uEAAN,IAAM;;AAC9C;AACA,gBAAI,OAAOC,QAAP,KAAoB,WAApB,IAAmC,CAACA,QAAQ,CAACC,cAAT,CAAwB/B,EAAxB,CAAxC,EAAqE;AACjE,kBAAIgC,QAAQ,GAAGF,QAAQ,CAACG,aAAT,CAAuB,QAAvB,CAAf;AACAD,sBAAQ,CAACE,KAAT,GAAiB,IAAjB;AACAF,sBAAQ,CAACL,GAAT,GAAeA,GAAf;AACAK,sBAAQ,CAACJ,MAAT,GAAkBA,MAAlB;;AACA,kBAAI,CAACC,aAAL,EAAoB;AAChBA,6BAAa,GAAGC,QAAQ,CAACK,IAAzB;AACH;;AACDN,2BAAa,CAACO,WAAd,CAA0BJ,QAA1B;AACH;AACJ;;;;;;UAGCK,U;;;;UAGAC,mB;;;;;AACF,qCAAYC,QAAZ,EAAwD;AAAA;;AAAA,cAAlCC,WAAkC,uEAApB;AAAEC,iBAAK,EAAE;AAAT,WAAoB;;AAAA;;AACpD;AACA,iBAAKF,QAAL,GAAgBA,QAAhB;AACA,iBAAKC,WAAL,GAAmBA,WAAnB;AAHoD;AAIvD;;;;uCACY;AAAA;;AACT,mBAAO,IAAIE,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,kBAAI;AACA,sBAAI,CAACC,UAAL,CAAgBP,mBAAmB,CAAClC,WAApC,EAAiD,wCAAjD,EAA2F,YAAM;AAC7F0C,sBAAI,CAACC,IAAL,CAAU,OAAV,EAAmB,YAAM;AACrB,0BAAI,CAACC,KAAL,GAAaF,IAAI,CAACE,KAAL,CAAWC,IAAX,CAAgBC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,MAAI,CAACX,WAAvB,CAAd,EAAmD;AAAEY,+BAAS,EAAE,MAAI,CAACb;AAAlB,qBAAnD,CAAhB,CAAb;;AACA,0BAAI,CAACS,KAAL,CACKK,IADL,CACU,YAAM;AACZV,6BAAO;AACV,qBAHD,WAIW,UAAClC,GAAD,EAAS;AAChBmC,4BAAM,CAACnC,GAAD,CAAN;AACH,qBAND;AAOH,mBATD;AAUH,iBAXD;AAYH,eAbD,CAcA,OAAOA,GAAP,EAAY;AACRmC,sBAAM,CAACnC,GAAD,CAAN;AACH;AACJ,aAlBM,CAAP;AAmBH;;;yCACc6C,kB,EAAoB;AAAA;;AAC/B,mBAAO,IAAIZ,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,kBAAI,MAAI,CAACI,KAAL,CAAWO,UAAX,CAAsB5D,GAAtB,EAAJ,EAAiC;AAC7B,oBAAID,IAAI,GAAG,IAAI2C,UAAJ,EAAX;;AACA,oBAAMmB,OAAO,GAAG,MAAI,CAACR,KAAL,CAAWS,WAAX,CAAuB9D,GAAvB,GAA6B+D,eAA7B,EAAhB;;AACAhE,oBAAI,CAACM,EAAL,GAAUwD,OAAO,CAACG,KAAR,EAAV;AACAjE,oBAAI,CAACkE,IAAL,GAAYJ,OAAO,CAACK,OAAR,EAAZ;AACAnE,oBAAI,CAACO,KAAL,GAAauD,OAAO,CAACM,QAAR,EAAb;AACApE,oBAAI,CAACqE,QAAL,GAAgBP,OAAO,CAACQ,WAAR,EAAhB;AACAtE,oBAAI,CAACG,SAAL,GAAiB2D,OAAO,CAACS,YAAR,EAAjB;AACAvE,oBAAI,CAACI,QAAL,GAAgB0D,OAAO,CAACU,aAAR,EAAhB;AACAxE,oBAAI,CAACyE,QAAL,GAAgBX,OAAhB;;AACA,oBAAIF,kBAAkB,IAAIA,kBAAkB,CAACc,YAA7C,EAA2D;AACvD,wBAAI,CAACpB,KAAL,CAAWS,WAAX,CAAuB9D,GAAvB,GAA6B0E,kBAA7B,GAAkDhB,IAAlD,CAAuD,UAAAiB,YAAY,EAAI;AACnE5E,wBAAI,CAAC6E,SAAL,GAAiBD,YAAY,CAACE,YAA9B;AACA9E,wBAAI,CAAC+E,OAAL,GAAeH,YAAY,CAACI,QAA5B;AACA/B,2BAAO,CAACjD,IAAD,CAAP;AACH,mBAJD;AAKH,iBAND,MAOK;AACD,sBAAM4E,YAAY,GAAG,MAAI,CAACtB,KAAL,CAAWS,WAAX,CAAuB9D,GAAvB,GAA6BgF,eAA7B,CAA6C,IAA7C,CAArB;;AACAjF,sBAAI,CAAC6E,SAAL,GAAiBD,YAAY,CAACE,YAA9B;AACA9E,sBAAI,CAAC+E,OAAL,GAAeH,YAAY,CAACI,QAA5B;AACA/B,yBAAO,CAACjD,IAAD,CAAP;AACH;AACJ,eAvBD,MAwBK;AACDkD,sBAAM,+CAAwCN,mBAAmB,CAAClC,WAA5D,EAAN;AACH;AACJ,aA5BM,CAAP;AA6BH;;;iCACMwE,a,EAAe;AAAA;;AAClB,gBAAMC,OAAO,GAAG3B,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKX,WAAvB,CAAd,EAAmDoC,aAAnD,CAAhB;AACA,mBAAO,IAAIlC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,kBAAMkC,aAAa,GAAGD,OAAO,IAAIA,OAAO,CAACE,cAAzC;AACA,kBAAIC,OAAO,GAAG,CAACF,aAAD,GACR,MAAI,CAAC9B,KAAL,CAAW7C,MAAX,CAAkByE,aAAlB,CADQ,GAER,MAAI,CAAC5B,KAAL,CAAWiC,kBAAX,CAA8BL,aAA9B,CAFN;AAGAI,qBAAO,CACF3B,IADL,CACU,UAACc,QAAD,EAAc;AACpB,oBAAIzE,IAAI,GAAG,IAAI2C,UAAJ,EAAX;;AACA,oBAAI8B,QAAQ,IAAIA,QAAQ,CAACe,IAAzB,EAA+B;AAC3BxF,sBAAI,CAACyF,iBAAL,GAAyBhB,QAAQ,CAACe,IAAlC;AACH,iBAFD,MAGK;AACD,sBAAI1B,OAAO,GAAG,MAAI,CAACR,KAAL,CAAWS,WAAX,CAAuB9D,GAAvB,GAA6B+D,eAA7B,EAAd;;AACA,sBAAI3E,KAAK,GAAG,MAAI,CAACiE,KAAL,CAAWS,WAAX,CAAuB9D,GAAvB,GAA6BgF,eAA7B,CAA6C,IAA7C,EACPH,YADL;;AAEA,sBAAIY,YAAY,GAAG,MAAI,CAACpC,KAAL,CAAWS,WAAX,CACd9D,GADc,GAEdgF,eAFc,CAEE,IAFF,EAEQD,QAF3B;;AAGAhF,sBAAI,CAACM,EAAL,GAAUwD,OAAO,CAACG,KAAR,EAAV;AACAjE,sBAAI,CAACkE,IAAL,GAAYJ,OAAO,CAACK,OAAR,EAAZ;AACAnE,sBAAI,CAACO,KAAL,GAAauD,OAAO,CAACM,QAAR,EAAb;AACApE,sBAAI,CAACqE,QAAL,GAAgBP,OAAO,CAACQ,WAAR,EAAhB;AACAtE,sBAAI,CAACG,SAAL,GAAiB2D,OAAO,CAACS,YAAR,EAAjB;AACAvE,sBAAI,CAACI,QAAL,GAAgB0D,OAAO,CAACU,aAAR,EAAhB;AACAxE,sBAAI,CAAC6E,SAAL,GAAiBxF,KAAjB;AACAW,sBAAI,CAAC+E,OAAL,GAAeW,YAAf;AACA1F,sBAAI,CAACyE,QAAL,GAAgBX,OAAhB;AACH;;AACDb,uBAAO,CAACjD,IAAD,CAAP;AACH,eAxBD,EAwBG,UAAC2F,MAAD,EAAY;AACXzC,sBAAM,CAACyC,MAAD,CAAN;AACH,eA1BD,WA2BW,UAAC5E,GAAD,EAAS;AAChBmC,sBAAM,CAACnC,GAAD,CAAN;AACH,eA7BD;AA8BH,aAnCM,CAAP;AAoCH;;;kCACO6E,M,EAAQ;AAAA;;AACZ,mBAAO,IAAI5C,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,kBAAI2C,cAAJ;;AACA,kBAAID,MAAJ,EAAY;AACRC,8BAAc,GAAG,MAAI,CAACvC,KAAL,CAAWwC,UAAX,EAAjB;AACH,eAFD,MAGK;AACDD,8BAAc,GAAG,MAAI,CAACvC,KAAL,CAAW3C,OAAX,EAAjB;AACH;;AACDkF,4BAAc,CACTlC,IADL,CACU,UAAC5C,GAAD,EAAS;AACf,oBAAIA,GAAJ,EAAS;AACLmC,wBAAM,CAACnC,GAAD,CAAN;AACH,iBAFD,MAGK;AACDkC,yBAAO;AACV;AACJ,eARD,WASW,UAAClC,GAAD,EAAS;AAChBmC,sBAAM,CAACnC,GAAD,CAAN;AACH,eAXD;AAYH,aApBM,CAAP;AAqBH;;;;QAvH6BiB,iB;;AAyHlCY,yBAAmB,CAAClC,WAApB,GAAkC,QAAlC;AAEA;;UACMqF,iB;AACF,mCAAYC,MAAZ,EAAoB;AAAA;;AAAA;;AAChB,eAAKC,SAAL,GAAiB,IAAIC,GAAJ,EAAjB;AACA,eAAKC,SAAL,GAAiB,KAAjB;AACA,eAAKC,KAAL,GAAa,IAAb;AACA,eAAKC,UAAL,GAAkB,IAAI,kDAAJ,CAAkB,CAAlB,CAAlB;AACA;;AACA,eAAKC,WAAL,GAAmB,KAAnB;AACA,eAAKC,UAAL,GAAkB,IAAI,iDAAJ,EAAlB;;AACA,cAAIP,MAAM,YAAYhD,OAAtB,EAA+B;AAC3BgD,kBAAM,CAACrC,IAAP,CAAY,UAACqC,MAAD,EAAY;AACpB,qBAAI,CAACQ,UAAL,CAAgBR,MAAhB;AACH,aAFD;AAGH,WAJD,MAKK;AACD,iBAAKQ,UAAL,CAAgBR,MAAhB;AACH;AACJ;;;;qCAOUA,M,EAAQ;AAAA;;AACf,iBAAKG,SAAL,GAAiBH,MAAM,CAACG,SAAP,KAAqBM,SAArB,GAAiCT,MAAM,CAACG,SAAxC,GAAoD,KAArE;AADe,kCAEqBH,MAFrB,CAEPU,OAFO;AAAA,gBAEPA,OAFO,gCAEGxI,OAAO,CAACE,KAFX;AAGf4H,kBAAM,CAACC,SAAP,CAAiBU,OAAjB,CAAyB,UAACC,IAAD,EAAU;AAC/B,qBAAI,CAACX,SAAL,CAAeY,GAAf,CAAmBD,IAAI,CAACtG,EAAxB,EAA4BsG,IAAI,CAACvG,QAAjC;AACH,aAFD;AAGA2C,mBAAO,CAAC8D,GAAR,CAAYC,KAAK,CAACC,IAAN,CAAW,KAAKf,SAAL,CAAegB,MAAf,EAAX,EAAoCC,GAApC,CAAwC,UAAC7G,QAAD;AAAA,qBAAcA,QAAQ,CAACmG,UAAT,EAAd;AAAA,aAAxC,CAAZ,EACK7C,IADL,CACU,YAAM;AACZ,kBAAI,OAAI,CAACwC,SAAT,EAAoB;AAChB,oBAAMgB,mBAAmB,GAAG,EAA5B;AACA,oBAAIC,QAAQ,GAAG,KAAf;;AACA,uBAAI,CAACnB,SAAL,CAAeU,OAAf,CAAuB,UAACtG,QAAD,EAAWgH,GAAX,EAAmB;AACtC,sBAAI/B,OAAO,GAAGjF,QAAQ,CAACiH,cAAT,EAAd;AACAH,qCAAmB,CAACI,IAApB,CAAyBjC,OAAzB;AACAA,yBAAO,CACF3B,IADL,CACU,UAAC3D,IAAD,EAAU;AAChBA,wBAAI,CAACK,QAAL,GAAgBgH,GAAhB;AACA,2BAAI,CAACjB,KAAL,GAAapG,IAAb;;AACA,2BAAI,CAACqG,UAAL,CAAgBmB,IAAhB,CAAqBxH,IAArB;;AACAoH,4BAAQ,GAAG,IAAX;AACH,mBAND,WAOWlJ,OAAO,CAACuJ,KAPnB;AAQH,iBAXD;;AAYAzE,uBAAO,CAAC8D,GAAR,CAAYK,mBAAZ,WAAuC,YAAM;AACzC,sBAAI,CAACC,QAAL,EAAe;AACX,2BAAI,CAAChB,KAAL,GAAa,IAAb;;AACA,2BAAI,CAACC,UAAL,CAAgBmB,IAAhB,CAAqB,IAArB;AACH;AACJ,iBALD;AAMH;AACJ,aAxBD,WAyBW,UAACpJ,KAAD,EAAW;AAClBsI,qBAAO,CAACtI,KAAD,CAAP;AACH,aA3BD,aA4Ba,YAAM;AACf,qBAAI,CAACkI,WAAL,GAAmB,IAAnB;;AACA,qBAAI,CAACC,UAAL,CAAgBiB,IAAhB,CAAqB,OAAI,CAAClB,WAA1B;;AACA,qBAAI,CAACC,UAAL,CAAgBmB,QAAhB;AACH,aAhCD;AAiCH;;;2CACgBC,U,EAAY;AAAA;;AACzB,mBAAO,IAAI3E,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,kBAAI,CAAC,OAAI,CAACoD,WAAV,EAAuB;AACnBpD,sBAAM,CAAC6C,iBAAiB,CAAC6B,mBAAnB,CAAN;AACH,eAFD,MAGK,IAAID,UAAU,KAAK/E,mBAAmB,CAAClC,WAAvC,EAAoD;AACrDwC,sBAAM,CAAC6C,iBAAiB,CAAC8B,mCAAnB,CAAN;AACH,eAFI,MAGA;AACD,oBAAMC,cAAc,GAAG,OAAI,CAAC7B,SAAL,CAAehG,GAAf,CAAmB0H,UAAnB,CAAvB;;AACA,oBAAIG,cAAJ,EAAoB;AAChBA,gCAAc,CACTR,cADL,CACoB;AAAE5C,gCAAY,EAAE;AAAhB,mBADpB,EAEKf,IAFL,CAEU,UAAC3D,IAAD,EAAU;AAChBA,wBAAI,CAACK,QAAL,GAAgBsH,UAAhB;AACA,2BAAI,CAACvB,KAAL,GAAapG,IAAb;;AACA,2BAAI,CAACqG,UAAL,CAAgBmB,IAAhB,CAAqBxH,IAArB;;AACAiD,2BAAO;AACV,mBAPD,WAQW,UAAClC,GAAD,EAAS;AAChBmC,0BAAM,CAACnC,GAAD,CAAN;AACH,mBAVD;AAWH,iBAZD,MAaK;AACDmC,wBAAM,CAAC6C,iBAAiB,CAACgC,4BAAnB,CAAN;AACH;AACJ;AACJ,aA1BM,CAAP;AA2BH;;;iCACMJ,U,EAAYzC,a,EAAe;AAAA;;AAC9B,mBAAO,IAAIlC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,kBAAI,CAAC,OAAI,CAACoD,WAAV,EAAuB;AACnBpD,sBAAM,CAAC6C,iBAAiB,CAAC6B,mBAAnB,CAAN;AACH,eAFD,MAGK;AACD,oBAAIE,cAAc,GAAG,OAAI,CAAC7B,SAAL,CAAehG,GAAf,CAAmB0H,UAAnB,CAArB;;AACA,oBAAIG,cAAJ,EAAoB;AAChBA,gCAAc,CACTrH,MADL,CACYyE,aADZ,EAEKvB,IAFL,CAEU,UAAC3D,IAAD,EAAU;AAChBA,wBAAI,CAACK,QAAL,GAAgBsH,UAAhB;AACA1E,2BAAO,CAACjD,IAAD,CAAP;AACA,2BAAI,CAACoG,KAAL,GAAapG,IAAb;;AACA,2BAAI,CAACqG,UAAL,CAAgBmB,IAAhB,CAAqBxH,IAArB;AACH,mBAPD,WAQW,UAACe,GAAD,EAAS;AAChBmC,0BAAM,CAACnC,GAAD,CAAN;AACH,mBAVD;AAWH,iBAZD,MAaK;AACDmC,wBAAM,CAAC6C,iBAAiB,CAACgC,4BAAnB,CAAN;AACH;AACJ;AACJ,aAvBM,CAAP;AAwBH;;;oCACuB;AAAA;;AAAA,gBAAhBnC,MAAgB,uEAAP,KAAO;AACpB,mBAAO,IAAI5C,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,kBAAI,CAAC,OAAI,CAACoD,WAAV,EAAuB;AACnBpD,sBAAM,CAAC6C,iBAAiB,CAAC6B,mBAAnB,CAAN;AACH,eAFD,MAGK,IAAI,CAAC,OAAI,CAACxB,KAAV,EAAiB;AAClBlD,sBAAM,CAAC6C,iBAAiB,CAACiC,iBAAnB,CAAN;AACH,eAFI,MAGA;AACD,oBAAIL,UAAU,GAAG,OAAI,CAACvB,KAAL,CAAW/F,QAA5B;;AACA,oBAAIyH,cAAc,GAAG,OAAI,CAAC7B,SAAL,CAAehG,GAAf,CAAmB0H,UAAnB,CAArB;;AACA,oBAAIG,cAAJ,EAAoB;AAChBA,gCAAc,CACTnH,OADL,CACaiF,MADb,EAEKjC,IAFL,CAEU,YAAM;AACZV,2BAAO;AACP,2BAAI,CAACmD,KAAL,GAAa,IAAb;;AACA,2BAAI,CAACC,UAAL,CAAgBmB,IAAhB,CAAqB,IAArB;AACH,mBAND,WAOW,UAACzG,GAAD,EAAS;AAChBmC,0BAAM,CAACnC,GAAD,CAAN;AACH,mBATD;AAUH,iBAXD,MAYK;AACDmC,wBAAM,CAAC6C,iBAAiB,CAACgC,4BAAnB,CAAN;AACH;AACJ;AACJ,aA1BM,CAAP;AA2BH;;;8BAjIe;AACZ,mBAAO,KAAK1B,UAAL,CAAgB4B,YAAhB,EAAP;AACH;;;8BACe;AACZ,mBAAO,KAAK1B,UAAL,CAAgB0B,YAAhB,EAAP;AACH;;;;;;AA8HLlC,uBAAiB,CAACmC,IAAlB,GAAyB,SAASC,yBAAT,CAAmCC,CAAnC,EAAsC;AAAE,eAAO,KAAKA,CAAC,IAAIrC,iBAAV,EAA6B,uDAAgB,yBAAhB,CAA7B,CAAP;AAAkF,OAAnJ;;AACAA,uBAAiB,CAACsC,KAAlB,GAA0B,iEAA0B;AAAEhJ,aAAK,EAAE0G,iBAAT;AAA4BuC,eAAO,EAAEvC,iBAAiB,CAACmC;AAAvD,OAA1B,CAA1B;AACAnC,uBAAiB,CAACgC,4BAAlB,GAAiD,0BAAjD;AACAhC,uBAAiB,CAACiC,iBAAlB,GAAsC,eAAtC;AACAjC,uBAAiB,CAAC6B,mBAAlB,GAAwC,kEAAxC;AACA7B,uBAAiB,CAAC8B,mCAAlB,GAAwD,+DAAxD;;AACA9B,uBAAiB,CAACwC,cAAlB,GAAmC;AAAA,eAAM,CACrC;AAAEC,cAAI,EAAE/B,SAAR;AAAmBgC,oBAAU,EAAE,CAAC;AAAED,gBAAI,EAAE,oDAAR;AAAgBE,gBAAI,EAAE,CAAC,yBAAD;AAAtB,WAAD;AAA/B,SADqC,CAAN;AAAA,OAAnC;AAGA;;;AAAc,OAAC,YAAY;AAAE,wEAAyB3C,iBAAzB,EAA4C,CAAC;AAClEyC,cAAI,EAAE;AAD4D,SAAD,CAA5C,EAErB,YAAY;AAAE,iBAAO,CAAC;AAAEA,gBAAI,EAAE/B,SAAR;AAAmBgC,sBAAU,EAAE,CAAC;AAC9CD,kBAAI,EAAE,oDADwC;AAE9CE,kBAAI,EAAE,CAAC,yBAAD;AAFwC,aAAD;AAA/B,WAAD,CAAP;AAGF,SALS,EAKP,IALO;AAKC,OALhB;;UAORC,iB;AACF,mCAAYC,YAAZ,EAA0B;AAAA;;AACtB,cAAIA,YAAJ,EAAkB;AACd,kBAAM,IAAIC,KAAJ,CAAU,sEAAV,CAAN;AACH;AACJ;;;;qCACiB7C,M,EAAQ;AACtB,mBAAO;AACH8C,sBAAQ,EAAEH,iBADP;AAEH1C,uBAAS,EAAE,CACPF,iBADO,EAEP;AACIgD,uBAAO,EAAE,yBADb;AAEIC,wBAAQ,EAAEhD;AAFd,eAFO;AAFR,aAAP;AAUH;;;;;;AAEL2C,uBAAiB,CAACM,IAAlB,GAAyB,+DAAwB;AAAET,YAAI,EAAEG;AAAR,OAAxB,CAAzB;AACAA,uBAAiB,CAACO,IAAlB,GAAyB,+DAAwB;AAAEZ,eAAO,EAAE,SAASa,yBAAT,CAAmCf,CAAnC,EAAsC;AAAE,iBAAO,KAAKA,CAAC,IAAIO,iBAAV,EAA6B,uDAAgBA,iBAAhB,EAAmC,EAAnC,CAA7B,CAAP;AAA8E,SAAjI;AAAmI1C,iBAAS,EAAE,CACvLF,iBADuL,CAA9I;AAE1CqD,eAAO,EAAE,CAAC,CACL,4DADK,CAAD;AAFiC,OAAxB,CAAzB;;AAKAT,uBAAiB,CAACJ,cAAlB,GAAmC;AAAA,eAAM,CACrC;AAAEC,cAAI,EAAEG,iBAAR;AAA2BF,oBAAU,EAAE,CAAC;AAAED,gBAAI,EAAE;AAAR,WAAD,EAAqB;AAAEA,gBAAI,EAAE;AAAR,WAArB;AAAvC,SADqC,CAAN;AAAA,OAAnC;;AAGA,OAAC,YAAY;AAAE,SAAC,OAAOa,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0BV,iBAA1B,EAA6C;AAAES,iBAAO,EAAE,mBAAY;AAAE,mBAAO,CAAC,4DAAD,CAAP;AAAwB;AAAjD,SAA7C,CAAnD;AAAuJ,OAAtK;AACA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBT,iBAAzB,EAA4C,CAAC;AAClEH,cAAI,EAAE,sDAD4D;AAElEE,cAAI,EAAE,CAAC;AACCU,mBAAO,EAAE,CACL,4DADK,CADV;AAICnD,qBAAS,EAAE,CACPF,iBADO;AAJZ,WAAD;AAF4D,SAAD,CAA5C,EAUrB,YAAY;AAAE,iBAAO,CAAC;AAAEyC,gBAAI,EAAEG,iBAAR;AAA2BF,sBAAU,EAAE,CAAC;AACtDD,kBAAI,EAAE;AADgD,aAAD,EAEtD;AACCA,kBAAI,EAAE;AADP,aAFsD;AAAvC,WAAD,CAAP;AAIF,SAdS,EAcP,IAdO;AAcC,OAdhB,I,CAgBd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;UACMc,kB;;;;;AACF,oCAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf;;AACA,cAAIA,KAAJ,EAAW;AACP,oBAAKA,KAAL,GAAaA,KAAb;AACH,WAFD,MAGK;AACD,oBAAKA,KAAL,GAAaD,kBAAkB,CAACE,YAAhC;AACH,WAPc,CAQf;;;AACA,kBAAKpC,QAAL,GAAgB,KAAhB;AATe;AAUlB;;;;2CACgB;AAAA;;AACb,mBAAO,IAAIpE,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,kBAAI,OAAI,CAACkE,QAAT,EAAmB;AACfnE,uBAAO,CAAC,OAAI,CAACsG,KAAN,CAAP;AACH,eAFD,MAGK;AACDrG,sBAAM,CAAC,iCAAD,CAAN;AACH;AACJ,aAPM,CAAP;AAQH;;;uCACY;AACT,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCD,qBAAO;AACV,aAFM,CAAP;AAGH;;;mCACQ;AAAA;;AACL,mBAAO,IAAID,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,qBAAI,CAACkE,QAAL,GAAgB,IAAhB;AACAnE,qBAAO,CAAC,OAAI,CAACsG,KAAN,CAAP;AACH,aAHM,CAAP;AAIH;;;kCACO3D,M,EAAQ;AAAA;;AACZ,mBAAO,IAAI5C,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,qBAAI,CAACkE,QAAL,GAAgB,KAAhB;AACAnE,qBAAO;AACV,aAHM,CAAP;AAIH;;;;QAtC4BjB,iB;;AAwCjCsH,wBAAkB,CAAC5I,WAAnB,GAAiC,OAAjC;AACA4I,wBAAkB,CAACE,YAAnB,GAAkC;AAC9BlJ,UAAE,EAAE,YAD0B;AAE9B4D,YAAI,EAAE,cAFwB;AAG9B3D,aAAK,EAAE,kBAHuB;AAI9BJ,iBAAS,EAAE,QAJmB;AAK9BC,gBAAQ,EAAE,OALoB;AAM9ByE,iBAAS,EAAE,gBANmB;AAO9BR,gBAAQ,EAAE,qDAPoB;AAQ9BhE,gBAAQ,EAAE,OARoB;AAS9B0E,eAAO,EAAE,cATqB;AAU9BU,yBAAiB,EAAE,eAVW;AAW9BhB,gBAAQ,EAAE;AAXoB,OAAlC;;UAcMgF,qB;;;;;AACF,uCAAY5G,QAAZ,EAKG;AAAA;;AAAA,cALmBC,WAKnB,uEALiC;AAChCC,iBAAK,EAAE,sBADyB;AAEhC2G,kBAAM,EAAE,OAFwB;AAGhCC,kBAAM,EAAE,yCAHwB;AAIhCC,mBAAO,EAAE;AAJuB,WAKjC;;AAAA;;AACC;AACA,kBAAK/G,QAAL,GAAgBA,QAAhB;AACA,kBAAKC,WAAL,GAAmBA,WAAnB;AAHD;AAIF;;;;uCACY;AAAA;;AACT,mBAAO,IAAIE,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,kBAAI;AACA,uBAAI,CAACC,UAAL,CAAgBsG,qBAAqB,CAAC/I,WAAtC,mCAA6E,OAAI,CAACoC,WAAL,CAAiB4G,MAA9F,cAA+G,YAAM;AACjHG,oBAAE,CAACtG,IAAH,CAAQ;AACJuG,yBAAK,EAAE,OAAI,CAACjH,QADR;AAEJkH,oCAAgB,EAAE,IAFd;AAGJC,0BAAM,EAAE,IAHJ;AAIJC,yBAAK,EAAE,IAJH;AAKJL,2BAAO,EAAE,OAAI,CAAC9G,WAAL,CAAiB8G;AALtB,mBAAR;AAOA3G,yBAAO;AACV,iBATD;AAUH,eAXD,CAYA,OAAOlC,GAAP,EAAY;AACRmC,sBAAM,CAACnC,GAAD,CAAN;AACH;AACJ,aAhBM,CAAP;AAiBH;;;2CACgB;AAAA;;AACb,mBAAO,IAAIiC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC2G,gBAAE,CAACvC,cAAH,CAAkB,UAAC7C,QAAD,EAAc;AAC5B,oBAAIA,QAAQ,CAACpG,MAAT,KAAoB,WAAxB,EAAqC;AACjC,sBAAIuG,YAAY,GAAGH,QAAQ,CAACG,YAA5B;AACAiF,oBAAE,CAACK,GAAH,sBAAqB,OAAI,CAACpH,WAAL,CAAiB6G,MAAtC,GAAgD,UAACQ,MAAD,EAAY;AACxD,wBAAInK,IAAI,GAAG,IAAI2C,UAAJ,EAAX;AACA3C,wBAAI,CAACM,EAAL,GAAU6J,MAAM,CAAC7J,EAAjB;AACAN,wBAAI,CAACkE,IAAL,GAAYiG,MAAM,CAACjG,IAAnB;AACAlE,wBAAI,CAACO,KAAL,GAAa4J,MAAM,CAAC5J,KAApB;AACAP,wBAAI,CAACqE,QAAL,GACI,gCACI8F,MAAM,CAAC7J,EADX,GAEI,sBAHR;AAIAN,wBAAI,CAACG,SAAL,GAAiBgK,MAAM,CAACC,UAAxB;AACApK,wBAAI,CAACI,QAAL,GAAgB+J,MAAM,CAACE,SAAvB;AACArK,wBAAI,CAAC6E,SAAL,GAAiBD,YAAY,CAAC0F,WAA9B;AACAtK,wBAAI,CAACyE,QAAL,GAAgB0F,MAAhB;AACAlH,2BAAO,CAACjD,IAAD,CAAP;AACH,mBAdD;AAeH,iBAjBD,MAkBK;AACDkD,wBAAM,+CAAwCuG,qBAAqB,CAAC/I,WAA9D,EAAN;AACH;AACJ,eAtBD;AAuBH,aAxBM,CAAP;AAyBH;;;iCACMwE,a,EAAe;AAClB,gBAAMC,OAAO,GAAG3B,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKX,WAAvB,CAAd,EAAmDoC,aAAnD,CAAhB;AACA,mBAAO,IAAIlC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC2G,gBAAE,CAACU,KAAH,CAAS,UAAC9F,QAAD,EAAc;AACnB,oBAAIA,QAAQ,CAACG,YAAb,EAA2B;AACvB,sBAAIA,YAAY,GAAGH,QAAQ,CAACG,YAA5B;AACAiF,oBAAE,CAACK,GAAH,sBAAqB/E,OAAO,CAACwE,MAA7B,GAAuC,UAACQ,MAAD,EAAY;AAC/C,wBAAInK,IAAI,GAAG,IAAI2C,UAAJ,EAAX;AACA3C,wBAAI,CAACM,EAAL,GAAU6J,MAAM,CAAC7J,EAAjB;AACAN,wBAAI,CAACkE,IAAL,GAAYiG,MAAM,CAACjG,IAAnB;AACAlE,wBAAI,CAACO,KAAL,GAAa4J,MAAM,CAAC5J,KAApB;AACAP,wBAAI,CAACqE,QAAL,GACI,gCACI8F,MAAM,CAAC7J,EADX,GAEI,sBAHR;AAIAN,wBAAI,CAACG,SAAL,GAAiBgK,MAAM,CAACC,UAAxB;AACApK,wBAAI,CAACI,QAAL,GAAgB+J,MAAM,CAACE,SAAvB;AACArK,wBAAI,CAAC6E,SAAL,GAAiBD,YAAY,CAAC0F,WAA9B;AACAtK,wBAAI,CAACyE,QAAL,GAAgB0F,MAAhB;AACAlH,2BAAO,CAACjD,IAAD,CAAP;AACH,mBAdD;AAeH,iBAjBD,MAkBK;AACDkD,wBAAM,CAAC,kDAAD,CAAN;AACH;AACJ,eAtBD,EAsBGiC,OAtBH;AAuBH,aAxBM,CAAP;AAyBH;;;oCACS;AACN,mBAAO,IAAInC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC2G,gBAAE,CAACW,MAAH,CAAU,UAAC/F,QAAD,EAAc;AACpBxB,uBAAO;AACV,eAFD;AAGH,aAJM,CAAP;AAKH;;;;QA3F+BjB,iB;;AA6FpCyH,2BAAqB,CAAC/I,WAAtB,GAAoC,UAApC;;UAEM+J,mB;;;;;AACF,qCAAY5H,QAAZ,EAMG;AAAA;;AAAA,cANmBC,WAMnB,uEANiC;AAChCC,iBAAK,EAAE,SADyB;AAEhC2H,sBAAU,EAAE;AACR5G,qBAAO,EAAE;AAAE6G,yBAAS,EAAE;AAAb;AADD,aAFoB;AAKhCC,wBAAY,EAAE3J,QAAQ,CAAC4J;AALS,WAMjC;;AAAA;;AACC;AACA,kBAAKhI,QAAL,GAAgBA,QAAhB;AACA,kBAAKC,WAAL,GAAmBA,WAAnB;AAHD;AAIF;;;;uCACY;AAAA;;AACT,gBAAIgI,UAAU,GAAG,IAAjB;;AACA,gBAAI1I,QAAJ,EAAc;AACV0I,wBAAU,GAAG1I,QAAQ,CAACG,aAAT,CAAuB,KAAvB,CAAb;AACAuI,wBAAU,CAACxK,EAAX,GAAgB,aAAhB;AACA8B,sBAAQ,CAAC2I,IAAT,CAAcrI,WAAd,CAA0BoI,UAA1B;AACH;;AACDE,kBAAM,CAACC,kBAAP,GAA4B,YAAM;AAC9BC,oBAAM,CAACC,KAAP,CAAaC,WAAb,CAAyB,OAAI,CAACvI,QAA9B;AACH,aAFD;;AAGA,mBAAO,IAAIG,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,kBAAI;AACA,uBAAI,CAACC,UAAL,CAAgB,kBAAhB,EAAoC,qDAApC,EAA2F,YAAM;AAC7FF,yBAAO;AACV,iBAFD,EAEG6H,UAFH;AAGH,eAJD,CAKA,OAAO/J,GAAP,EAAY;AACRmC,sBAAM,CAACnC,GAAD,CAAN;AACH;AACJ,aATM,CAAP;AAUH;;;2CACgB;AAAA;;AACb,mBAAO,IAAIiC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,kBAAI7D,KAAK,GAAG,OAAI,CAACgM,aAAL,EAAZ;;AACA,kBAAIhM,KAAJ,EAAW;AACP6L,sBAAM,CAACC,KAAP,CAAaG,eAAb,CAA6BjM,KAA7B,EAAoC,UAACoF,QAAD,EAAc;AAC9C,sBAAIA,QAAQ,CAAC8G,OAAb,EAAsB;AAClB,wBAAIvL,IAAI,GAAG,IAAI2C,UAAJ,EAAX;AACA3C,wBAAI,CAACM,EAAL,GAAUmE,QAAQ,CAACX,OAAT,CAAiB0H,UAA3B;AACAxL,wBAAI,CAACkE,IAAL,GAAYO,QAAQ,CAACX,OAAT,CAAiB2H,IAA7B;AACAzL,wBAAI,CAACO,KAAL,GAAakE,QAAQ,CAACX,OAAT,CAAiB4H,YAA9B;AACA1L,wBAAI,CAACyE,QAAL,GAAgBA,QAAQ,CAACX,OAAzB;AACAb,2BAAO,CAACjD,IAAD,CAAP;AACH,mBAPD,MAQK;AACDkD,0BAAM,CAACuB,QAAQ,CAACrG,KAAV,CAAN;AACH;AACJ,iBAZD;AAaH,eAdD,MAeK;AACD8E,sBAAM,+CAAwCuH,mBAAmB,CAAC/J,WAA5D,EAAN;AACH;AACJ,aApBM,CAAP;AAqBH;;;iCACMwE,a,EAAe;AAAA;;AAClB,gBAAMC,OAAO,GAAG3B,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKX,WAAvB,CAAd,EAAmDoC,aAAnD,CAAhB;AACA,mBAAO,IAAIlC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCgI,oBAAM,CAACC,KAAP,CAAaQ,SAAb,CAAuBxG,OAAvB,EAAgC,UAACP,YAAD,EAAkB;AAC9C,oBAAIA,YAAY,CAACxG,KAAjB,EAAwB;AACpB8E,wBAAM,CAAC0B,YAAY,CAACxG,KAAd,CAAN;AACH,iBAFD,MAGK;AACD8M,wBAAM,CAACC,KAAP,CAAaG,eAAb,CAA6B1G,YAAY,CAACE,YAA1C,EAAwD,UAACL,QAAD,EAAc;AAClE,wBAAIzE,IAAI,GAAG,IAAI2C,UAAJ,EAAX;AACA3C,wBAAI,CAACM,EAAL,GAAUmE,QAAQ,CAACX,OAAT,CAAiB0H,UAA3B;AACAxL,wBAAI,CAACkE,IAAL,GAAYO,QAAQ,CAACX,OAAT,CAAiB2H,IAA7B;AACAzL,wBAAI,CAACO,KAAL,GAAakE,QAAQ,CAACX,OAAT,CAAiB4H,YAA9B;AACA1L,wBAAI,CAAC6E,SAAL,GAAiBD,YAAY,CAACE,YAA9B;AACA9E,wBAAI,CAACyE,QAAL,GAAgBA,QAAQ,CAACX,OAAzB;;AACA,2BAAI,CAAC8H,YAAL,CAAkBhH,YAAY,CAACE,YAA/B;;AACA7B,2BAAO,CAACjD,IAAD,CAAP;AACH,mBATD;AAUH;AACJ,eAhBD;AAiBH,aAlBM,CAAP;AAmBH;;;kCACO4F,M,EAAQ;AAAA;;AACZ,mBAAO,IAAI5C,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,kBAAI;AACAgI,sBAAM,CAACC,KAAP,CAAaX,MAAb;;AACA,uBAAI,CAACqB,UAAL;;AACA5I,uBAAO;AACV,eAJD,CAKA,OAAOlC,GAAP,EAAY;AACRmC,sBAAM,CAACnC,GAAG,CAAC+K,OAAL,CAAN;AACH;AACJ,aATM,CAAP;AAUH;;;uCACYzM,K,EAAO;AAChB0M,wBAAY,CAACC,OAAb,WAAwBvB,mBAAmB,CAAC/J,WAA5C,aAAiErB,KAAjE;AACH;;;0CACe;AACZ,mBAAO0M,YAAY,CAACE,OAAb,WAAwBxB,mBAAmB,CAAC/J,WAA5C,YAAP;AACH;;;uCACY;AACTqL,wBAAY,CAACG,UAAb,WAA2BzB,mBAAmB,CAAC/J,WAA/C;AACH;;;;QAlG6BsB,iB;;AAoGlCyI,yBAAmB,CAAC/J,WAApB,GAAkC,QAAlC;;UAEMyL,e;;;;;AACF,iCAAYtJ,QAAZ,EAGG;AAAA;;AAAA,cAHmBC,WAGnB,uEAHiC;AAChC6G,kBAAM,EAAE,oBADwB;AAEhCC,mBAAO,EAAE;AAFuB,WAGjC;;AAAA;;AACC;AACA,kBAAK/G,QAAL,GAAgBA,QAAhB;AACA,kBAAKC,WAAL,GAAmBA,WAAnB;AACA,kBAAKsJ,UAAL,GAAkB,4BAAlB;AACA,kBAAKC,eAAL,GAAuB,WAAvB;AALD;AAMF;;;;uCACY;AAAA;;AACT,mBAAO,IAAIrJ,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,kBAAI;AACA,uBAAI,CAACC,UAAL,CAAgBgJ,eAAe,CAACzL,WAAhC,EAA6C,OAAI,CAAC0L,UAAlD,EAA8D,YAAM;AAChEE,oBAAE,CAAC/I,IAAH,CAAQ;AACJgJ,yBAAK,EAAE,OAAI,CAAC1J;AADR,mBAAR;AAGAI,yBAAO;AACV,iBALD;AAMH,eAPD,CAQA,OAAOlC,GAAP,EAAY;AACRmC,sBAAM,CAACnC,GAAD,CAAN;AACH;AACJ,aAZM,CAAP;AAaH;;;2CACgB;AAAA;;AACb,mBAAO,IAAIiC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV;AAAA,qBAAqB,OAAI,CAACsJ,sBAAL,CAA4BvJ,OAA5B,EAAqCC,MAArC,CAArB;AAAA,aAAZ,CAAP;AACH;;;mCACQ;AAAA;;AACL,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV;AAAA,qBAAqB,OAAI,CAACuJ,cAAL,CAAoBxJ,OAApB,EAA6BC,MAA7B,CAArB;AAAA,aAAZ,CAAP;AACH;;;oCACS;AACN,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCoJ,gBAAE,CAACI,IAAH,CAAQlC,MAAR,CAAe,UAAC/F,QAAD,EAAc;AACzBxB,uBAAO;AACV,eAFD;AAGH,aAJM,CAAP;AAKH;;;yCACcA,O,EAASC,M,EAAQ;AAAA;;AAC5BoJ,cAAE,CAACI,IAAH,CAAQnC,KAAR,CAAc,UAACoC,aAAD,EAAmB;AAC7B,kBAAIA,aAAa,CAACtO,MAAd,KAAyB,WAA7B,EAA0C;AACtC,uBAAI,CAACuO,OAAL,CAAaD,aAAa,CAACE,OAAd,CAAsBC,GAAnC,EAAwCH,aAAa,CAACE,OAAd,CAAsBE,GAA9D,EAAmE9J,OAAnE;AACH;AACJ,aAJD;AAKH;;;kCACO+J,M,EAAQ3N,K,EAAO4D,O,EAAS;AAAA;;AAC5BqJ,cAAE,CAACW,GAAH,CAAOC,IAAP,CAAY,KAAKb,eAAjB,EAAkC;AAC9Bc,qBAAO,EAAEH,MADqB;AAE9BrD,oBAAM,EAAE,KAAK7G,WAAL,CAAiB6G,MAFK;AAG9ByD,eAAC,EAAE,KAAKtK,WAAL,CAAiB8G;AAHU,aAAlC,EAIG,UAACyD,YAAD,EAAkB;AACjBpK,qBAAO,CAAC,OAAI,CAACqK,UAAL,CAAgB9J,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB;AAAEpE,qBAAK,EAALA;AAAF,eAAlB,EAA6BgO,YAAY,CAAC5I,QAAb,CAAsB,CAAtB,CAA7B,CAAhB,CAAD,CAAP;AACH,aAND;AAOH;;;iDACsBxB,O,EAASC,M,EAAQ;AAAA;;AACpCoJ,cAAE,CAACI,IAAH,CAAQpF,cAAR,CAAuB,UAACqF,aAAD,EAAmB;AACtC,kBAAIA,aAAa,CAACtO,MAAd,KAAyB,WAA7B,EAA0C;AACtC,uBAAI,CAACuO,OAAL,CAAaD,aAAa,CAACE,OAAd,CAAsBC,GAAnC,EAAwCH,aAAa,CAACE,OAAd,CAAsBE,GAA9D,EAAmE9J,OAAnE;AACH;AACJ,aAJD;AAKH;;;qCACUwB,Q,EAAU;AACjB,gBAAMzE,IAAI,GAAG,IAAI2C,UAAJ,EAAb;AACA3C,gBAAI,CAACM,EAAL,GAAUmE,QAAQ,CAACnE,EAAnB;AACAN,gBAAI,CAACkE,IAAL,aAAeO,QAAQ,CAAC2F,UAAxB,cAAsC3F,QAAQ,CAAC4F,SAA/C;AACArK,gBAAI,CAACqE,QAAL,GAAgBI,QAAQ,CAAC8I,SAAzB;AACAvN,gBAAI,CAAC6E,SAAL,GAAiBJ,QAAQ,CAACpF,KAA1B;AACA,mBAAOW,IAAP;AACH;;;;QArEyBgC,iB;;AAuE9BmK,qBAAe,CAACzL,WAAhB,GAA8B,IAA9B;AAEA;AACA;AACA;;AACA,UAAI8M,YAAJ;;AACA,OAAC,UAAUA,YAAV,EAAwB;AACrBA,oBAAY,CAAC,KAAD,CAAZ,GAAsB,KAAtB;AACAA,oBAAY,CAAC,MAAD,CAAZ,GAAuB,MAAvB;AACH,OAHD,EAGGA,YAAY,KAAKA,YAAY,GAAG,EAApB,CAHf;;AAIA,UAAMC,gBAAgB,GAAG,2CAAzB;AACA;AACA;AACA;;UACMC,sB;;;;;AACF,wCAAY7K,QAAZ,EAAsBC,WAAtB,EAAmC;AAAA;;AAAA;;AAC/B;AACA,kBAAKD,QAAL,GAAgBA,QAAhB;AACA,kBAAKC,WAAL,GAAmB;AACf8H,wBAAY,EAAE3J,QAAQ,CAAC4J,MADR;AAEf8C,qBAAS,EAAEF,gBAFI;AAGfG,kBAAM,EAAE,CAAC,QAAD,EAAW,SAAX,EAAsB,WAAtB,CAHO;AAIfC,4BAAgB,EAAE,EAJH;AAKfC,wBAAY,EAAEN,YAAY,CAACO,GALZ;AAMfC,8BAAkB,EAAE,EANL;AAOfC,yBAAa,EAAE;AAPA,WAAnB;AASA,kBAAKnL,WAAL,GAAmBU,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,QAAKX,WAAvB,CAAd,EAAmDA,WAAnD,CAAnB;AAZ+B;AAalC;;;;uCACY;AAAA;;AACT,mBAAO,IAAIE,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,qBAAI,CAACC,UAAL,CAAgBuK,sBAAsB,CAAChN,WAAvC,EAAoD,2DAApD,EAAiH,YAAM;AACnH,oBAAI;AACA,sBAAMsF,MAAM,GAAG;AACXkI,wBAAI,EAAE;AACFrL,8BAAQ,EAAE,OAAI,CAACA,QADb;AAEFsL,iCAAW,EAAE,OAAI,CAACrL,WAAL,CAAiB8H,YAF5B;AAGF+C,+BAAS,EAAE,OAAI,CAAC7K,WAAL,CAAiB6K,SAH1B;AAIFE,sCAAgB,EAAE,OAAI,CAAC/K,WAAL,CAAiB+K,gBAJjC;AAKFC,kCAAY,EAAE,OAAI,CAAChL,WAAL,CAAiBgL,YAL7B;AAMFE,wCAAkB,EAAE,OAAI,CAAClL,WAAL,CAAiBkL;AANnC,qBADK;AASXI,yBAAK,EAAE,CAAC,OAAI,CAACtL,WAAL,CAAiBmL,aAAlB,GAAkC,IAAlC,GAAyC;AAC5CA,mCAAa,EAAE,OAAI,CAACnL,WAAL,CAAiBmL;AADY;AATrC,mBAAf;AAaA,yBAAI,CAACI,SAAL,GAAiB,IAAIC,IAAI,CAACC,uBAAT,CAAiCvI,MAAjC,CAAjB;AACA/C,yBAAO;AACV,iBAhBD,CAiBA,OAAOuL,CAAP,EAAU;AACNtL,wBAAM,CAACsL,CAAD,CAAN;AACH;AACJ,eArBD;AAsBH,aAvBM,CAAP;AAwBH;;;wCACa7B,a,EAAe;AACzB,mBAAO,IAAI3J,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC;AACA,kBAAIuL,SAAS,GAAG,IAAIC,cAAJ,EAAhB;;AACAD,uBAAS,CAACE,kBAAV,GAA+B,YAAM;AACjC,oBAAIF,SAAS,CAACG,UAAV,IAAwB,CAA5B,EAA+B;AAC3B,sBAAI;AACA,wBAAIH,SAAS,CAACpQ,MAAV,IAAoB,GAAxB,EAA6B;AACzB,0BAAIwQ,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWN,SAAS,CAACO,YAArB,CAAf;AACA,0BAAIhP,IAAI,GAAG,IAAI2C,UAAJ,EAAX;AACA3C,0BAAI,CAACK,QAAL,GAAgBqN,sBAAsB,CAAChN,WAAvC;AACAV,0BAAI,CAACM,EAAL,GAAUqM,aAAa,CAAC5H,OAAxB;AACA/E,0BAAI,CAACkE,IAAL,GAAYyI,aAAa,CAACsC,aAAd,CAA4B/K,IAAxC;AACAlE,0BAAI,CAACO,KAAL,GAAaoM,aAAa,CAACuC,OAAd,CAAsBC,QAAnC;AACAnP,0BAAI,CAAC+E,OAAL,GAAe4H,aAAa,CAAC5H,OAA7B;AACA/E,0BAAI,CAACyE,QAAL,GAAgBkI,aAAhB;AACA3M,0BAAI,CAACG,SAAL,GAAiB0O,QAAQ,CAACO,SAA1B;AACApP,0BAAI,CAACI,QAAL,GAAgByO,QAAQ,CAACQ,OAAzB;AACApM,6BAAO,CAACjD,IAAD,CAAP;AACH,qBAZD,MAaK;AACDkD,4BAAM,uCAAgCuL,SAAS,CAACpQ,MAA1C,EAAN;AACH;AACJ,mBAjBD,CAkBA,OAAO0C,GAAP,EAAY;AACRmC,0BAAM,CAACnC,GAAD,CAAN;AACH;AACJ;AACJ,eAxBD,CAHoC,CA4BpC;;;AACA0N,uBAAS,CAACa,IAAV,CAAe,KAAf,EAAsB,qCAAtB;AACAb,uBAAS,CAACc,gBAAV,CAA2B,eAA3B,mBAAsD5C,aAAa,CAACrC,WAApE;;AACA,kBAAI;AACAmE,yBAAS,CAACe,IAAV;AACH,eAFD,CAGA,OAAOzO,GAAP,EAAY;AACRmC,sBAAM,CAACnC,GAAD,CAAN;AACH;AACJ,aArCM,CAAP;AAsCH;;;2CACgB;AAAA;;AACb,mBAAO,IAAIiC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,kBAAMuM,QAAQ,GAAG,OAAI,CAACpB,SAAL,CAAeqB,cAAf,EAAjB;;AACA,kBAAID,QAAQ,CAACE,MAAT,GAAkB,CAAtB,EAAyB;AACrB,oBAAI;AACA,yBAAI,CAACtB,SAAL,CAAeuB,SAAf,CAAyB;AACrBhC,0BAAM,EAAE,OAAI,CAAC9K,WAAL,CAAiB8K,MADJ;AAErBiC,6BAAS,EAAEJ,QAAQ,CAAC,CAAD,CAAR,CAAYN;AAFF,mBAAzB,EAIKxL,IAJL,CAIU,UAAAgJ,aAAa,EAAI;AACvB,2BAAI,CAACmD,aAAL,CAAmBnD,aAAnB,EACKhJ,IADL,CACU,UAAA3D,IAAI;AAAA,6BAAIiD,OAAO,CAACjD,IAAD,CAAX;AAAA,qBADd,WAEW,UAAAe,GAAG;AAAA,6BAAImC,MAAM,CAACnC,GAAD,CAAV;AAAA,qBAFd;AAGH,mBARD,WASW,UAAAA,GAAG;AAAA,2BAAImC,MAAM,CAACnC,GAAD,CAAV;AAAA,mBATd;AAUH,iBAXD,CAYA,OAAOA,GAAP,EAAY;AACRmC,wBAAM,CAACnC,GAAD,CAAN;AACH;AACJ,eAhBD,MAiBK;AACDmC,sBAAM,+CAAwCwK,sBAAsB,CAAChN,WAA/D,EAAN;AACH;AACJ,aAtBM,CAAP;AAuBH;;;mCACQ;AAAA;;AACL,mBAAO,IAAIsC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,kBAAI;AACA,uBAAI,CAACmL,SAAL,CAAe0B,UAAf,CAA0B;AACtBnC,wBAAM,EAAE,OAAI,CAAC9K,WAAL,CAAiB8K;AADH,iBAA1B,EAGKjK,IAHL,CAGU,UAAAgJ,aAAa,EAAI;AACvB,yBAAI,CAACmD,aAAL,CAAmBnD,aAAnB,EACKhJ,IADL,CACU,UAAA3D,IAAI;AAAA,2BAAIiD,OAAO,CAACjD,IAAD,CAAX;AAAA,mBADd,WAEW,UAAAe,GAAG;AAAA,2BAAImC,MAAM,CAACnC,GAAD,CAAV;AAAA,mBAFd;AAGH,iBAPD,WAQW,UAAAA,GAAG;AAAA,yBAAImC,MAAM,CAACnC,GAAD,CAAV;AAAA,iBARd;AASH,eAVD,CAWA,OAAOA,GAAP,EAAY;AACRmC,sBAAM,CAACnC,GAAD,CAAN;AACH;AACJ,aAfM,CAAP;AAgBH;;;kCACO6E,M,EAAQ;AAAA;;AACZ,mBAAO,IAAI5C,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,kBAAI;AACA,oBAAMuM,QAAQ,GAAG,OAAI,CAACpB,SAAL,CAAeqB,cAAf,EAAjB,CADA,CAEA;AACA;AACA;AACA;;;AACA,uBAAI,CAACrB,SAAL,CAAe7D,MAAf,CAAsB;AAClB0E,yBAAO,EAAEO,QAAQ,CAAC,CAAD,CADC;AAElBO,uCAAqB,EAAE,OAAI,CAAClN,WAAL,CAAiB8H;AAFtB,iBAAtB,EAIKjH,IAJL,CAIU,YAAM;AACZV,yBAAO;AACV,iBAND,WAOW,UAAAlC,GAAG,EAAI;AACdmC,wBAAM,CAACnC,GAAD,CAAN;AACH,iBATD;AAUH,eAhBD,CAiBA,OAAOA,GAAP,EAAY;AACRmC,sBAAM,CAACnC,GAAD,CAAN;AACH;AACJ,aArBM,CAAP;AAsBH;;;;QAnJgCiB,iB;;AAqJrC0L,4BAAsB,CAAChN,WAAvB,GAAqC,WAArC;AAEA;AACA;AACA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCz2BauP,qBAAqB;AAEhC,uCAAoB9Q,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAAqB;;AAFT;AAAA;AAAA,6CAGb+Q,IAHa,EAGT;AACrB,mBAAO,KAAK/Q,IAAL,CAAUc,GAAV,CAAc,yEAAYkQ,QAAZ,CAAqBC,KAArB,CAA2BC,SAA3B,GAAqC,uBAArC,GAA6DH,IAA3E,CAAP;AACD;AAL+B;AAAA;AAAA,0CAMhB1K,IANgB,EAMZ;AAClB,mBAAO,KAAKrG,IAAL,CAAUc,GAAV,CAAc,yEAAYkQ,QAAZ,CAAqBC,KAArB,CAA2BC,SAA3B,GAAqC,aAArC,GAAmD7K,IAAjE,CAAP;AACD;AAR+B;;AAAA;AAAA,S;;;;gBAPzB;;;;AAOIyK,2BAAqB,eAHjC,iEAAW;AACVK,kBAAU,EAAE;AADF,OAAX,CAGiC,E,iCAEN,+D,EAFM,GAArBL,qBAAqB,CAArB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACQN,UAAMM,MAAM,GAAG,CACpB;AAAEC,YAAI,EAAE,EAAR;AAAYC,iBAAS,EAAE,+DAAvB;AAAuCC,iBAAS,EAAE;AAAlD,OADoB,EAEpB;AAAEF,YAAI,EAAE,aAAR;AAAuBC,iBAAS,EAAE,uFAAlC;AAAwDC,iBAAS,EAAE;AAAnE,OAFoB,EAGpB;AAAEF,YAAI,EAAE,gBAAR;AAA0BC,iBAAS,EAAE,kGAArC;AAA8DC,iBAAS,EAAE;AAAzE,OAHoB,CAAf;;UAsCMC,WAAW;AAAA;AAAA,O;;AAAXA,iBAAW,eAhCvB,+DAAS;AACRC,oBAAY,EAAE,CAAC,+DAAD,EAAgB,uFAAhB,EAAsC,kGAAtC,CADN;AAERxH,eAAO,EAAE,CACP,4DADO,EAEP,6DAAayH,QAAb,CAAsBN,MAAtB,CAFO,EAGP,0DAHO,EAIP,kEAJO,EAKP,yEALO,EAMP,qEANO,EAOP,wEAPO,CAFD;AAWRtK,iBAAS,EAAE,CACT;AACE8C,iBAAO,EAAE,yBADX;AAEEC,kBAAQ,EAAE;AACR7C,qBAAS,EAAE,KADH;AAERF,qBAAS,EAAE,CACT;AACE3F,gBAAE,EAAE,2EAAoBI,WAD1B;AAEEL,sBAAQ,EAAE,IAAI,0EAAJ,CAAwB,0EAAxB;AAFZ,aADS,EAKT;AACEC,gBAAE,EAAE,6EAAsBI,WAD5B;AAEEL,sBAAQ,EAAE,IAAI,4EAAJ,CAA0B,iBAA1B;AAFZ,aALS;AAFH;AAFZ,SADS,EAkBT,8EAlBS;AAXH,OAAT,CAgCuB,GAAXsQ,WAAW,CAAX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UC7BAG,cAAc;AAOzB,gCAAoB/R,WAApB,EAA0DC,WAA1D,EAA2F+R,aAA3F,EACS9R,EADT,EACiCC,MADjC,EACwDC,IADxD,EACiFxB,QADjF,EAEWyB,MAFX,EAEwCC,KAFxC,EAEkE;AAAA;;AAF9C,eAAAN,WAAA,GAAAA,WAAA;AAAsC,eAAAC,WAAA,GAAAA,WAAA;AAAiC,eAAA+R,aAAA,GAAAA,aAAA;AAClF,eAAA9R,EAAA,GAAAA,EAAA;AAAwB,eAAAC,MAAA,GAAAA,MAAA;AAAuB,eAAAC,IAAA,GAAAA,IAAA;AAAyB,eAAAxB,QAAA,GAAAA,QAAA;AACtE,eAAAyB,MAAA,GAAAA,MAAA;AAA6B,eAAAC,KAAA,GAAAA,KAAA;AAJxC,eAAAE,IAAA,GAAO,IAAP;;AAKI,cAAG,KAAKF,KAAL,CAAW2R,QAAX,MAAyB,KAAK5R,MAAL,CAAY6R,aAAZ,EAA5B,EAAwD;AACtD,iBAAK/R,MAAL,CAAYT,QAAZ,CAAqB,CAAC,GAAD,CAArB;AACD;;AACH,eAAKe,QAAL,GAAgB,KAAKR,WAAL,CAAiBQ,QAAjC;AACA,eAAK0R,IAAL,GAAY,KAAKjS,EAAL,CAAQS,KAAR,CAAc;AACxB,qBAAS,CAAC,IAAD,EAAO,0DAAWE,OAAX,CAAmB,CAAC,0DAAWD,QAAZ,EAAsB,0EAAtB,CAAnB,CAAP,CADe;AAExB,wBAAY,CAAC,IAAD,EAAO,0DAAWC,OAAX,CAAmB,CAAC,0DAAWD,QAAZ,EAAsB,0DAAWE,SAAX,CAAqB,CAArB,CAAtB,CAAnB,CAAP;AAFY,WAAd,CAAZ;AAID;;AAlBwB;AAAA;AAAA,qCAoBd;AAAA;;AACT,iBAAKd,WAAL,CAAiBgB,SAAjB,CAA2B/B,SAA3B,CAAqC,UAACgC,IAAD,EAAU;AAC7C,qBAAI,CAACA,IAAL,GAAYA,IAAZ;AACA,qBAAI,CAACT,IAAL,GAAU,IAAV;;AACA,qBAAI,CAAC2R,IAAL,CAAUjR,GAAV,CAAc,UAAd,EAA0BC,QAA1B,CAAmCF,IAAI,CAACM,EAAxC;;AACA,qBAAI,CAAC4Q,IAAL,CAAUjR,GAAV,CAAc,OAAd,EAAuBC,QAAvB,CAAgCF,IAAI,CAACO,KAArC;;AACA,qBAAI,CAACC,QAAL;AACD,aAND;AAOD;AA5BwB;AAAA;AAAA,6CA8BT;AACd,iBAAKzB,WAAL,CAAiB0B,MAAjB,CAAwB,0EAAoBC,WAA5C;AACD;AAhCwB;AAAA;AAAA,yCAkCb;AACV,iBAAK3B,WAAL,CAAiB0B,MAAjB,CAAwB,4EAAsBC,WAA9C;AACD;AApCwB;AAAA;AAAA,oCAsClB;AACL,iBAAK3B,WAAL,CAAiB4B,OAAjB;AACD;AAxCwB;AAAA;AAAA,qCA2CjB;AAAA;;AACN,gBAAG,KAAKuQ,IAAL,CAAUtQ,KAAb,EAAmB;AACjB,kBAAMZ,IAAI,GAAG;AACXmP,wBAAQ,EAAE,KAAK+B,IAAL,CAAUjR,GAAV,CAAc,OAAd,EAAuBa,KADtB;AAEXa,wBAAQ,EAAE,KAAKuP,IAAL,CAAUjR,GAAV,CAAc,UAAd,EAA0Ba;AAFzB,eAAb;AAIA,mBAAK1B,MAAL,CAAYmL,KAAZ,CAAkBvK,IAAlB,EAAwBhC,SAAxB,CAAkC,UAACC,IAAD,EAAQ;AACxCC,uBAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,oBAAMkT,KAAK,GAAiBlT,IAAI,CAACkT,KAAjC;;AACA,uBAAI,CAAC9R,KAAL,CAAW+R,SAAX,CAAqBnT,IAAI,CAACqM,WAA1B;;AACA,uBAAI,CAACjL,KAAL,CAAWgS,OAAX,CAAmBpT,IAAI,CAACqC,EAAxB;;AACA,uBAAI,CAACjB,KAAL,CAAWiS,eAAX,CAA2BrT,IAAI,CAACsT,GAAL,GAAS,GAAT,GAAatT,IAAI,CAACuT,MAA7C;;AACA,uBAAI,CAACT,aAAL,CAAmBU,gBAAnB,CAAoC,CAApC;;AACA,uBAAI,CAACV,aAAL,CAAmBW,eAAnB,CAAmC,CAAnC;;AACA,uBAAI,CAACX,aAAL,CAAmBY,gBAAnB,CAAoC,CAApC;;AACA,uBAAI,CAACZ,aAAL,CAAmBa,iBAAnB,CAAqC,CAArC;;AACA3T,oBAAI,CAACkT,KAAL,CAAWxK,OAAX,CAAmB,UAAAkL,OAAO,EAAI;AAE5B,sBAAGA,OAAO,IAAI,+BAAd,EACA;AACE,2BAAI,CAACd,aAAL,CAAmBU,gBAAnB,CAAoC,CAApC;AACD,mBAHD,MAIK,IAAGI,OAAO,IAAI,8BAAd,EACL;AACE,2BAAI,CAACd,aAAL,CAAmBW,eAAnB,CAAmC,CAAnC;AACD,mBAHI,MAIA,IAAGG,OAAO,IAAI,gCAAd,EACL;AACE,2BAAI,CAACd,aAAL,CAAmBY,gBAAnB,CAAoC,CAApC;AACD,mBAHI,MAIA,IAAGE,OAAO,IAAG,sBAAb,EACL;AACE,2BAAI,CAACd,aAAL,CAAmBa,iBAAnB,CAAqC,CAArC;AACD,mBAHI,MAIA,IAAGC,OAAO,IAAE,0CAAZ,EACL;AACE,2BAAI,CAACd,aAAL,CAAmBW,eAAnB,CAAmC,CAAnC;;AACA,2BAAI,CAACX,aAAL,CAAmBY,gBAAnB,CAAoC,CAApC;;AACA,2BAAI,CAACZ,aAAL,CAAmBa,iBAAnB,CAAqC,CAArC;AACD;AACF,iBAxBD;;AAyBA,uBAAI,CAACjU,QAAL,CAAcW,YAAd,CAA2B,cAAcL,IAAI,CAACsT,GAAnB,GAAyB,GAAzB,GAA+BtT,IAAI,CAACuT,MAA/D,EAAuE,WAAvE,EAAoF,IAApF;;AACA,uBAAI,CAACtS,MAAL,CAAYT,QAAZ,CAAqB,CAAC,GAAD,CAArB;;AACAP,uBAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,eAtCD,EAuCA,UAAC8C,GAAD,EAAuB;AACrB7C,uBAAO,CAACC,GAAR,CAAY4C,GAAZ;;AACA,uBAAI,CAACmQ,IAAL,CAAUlQ,KAAV;;AACE,uBAAI,CAACrD,QAAL,CAAcW,YAAd,CAA2B,8BAA3B,EAA2D,WAA3D,EAAwE,IAAxE;AACH,eA3CD;AA4CD,aAjDD,MAkDI;AACF,mBAAKX,QAAL,CAAcW,YAAd,CAA2B,yBAA3B,EAAsD,aAAtD,EAAqE,IAArE;AACD;AACF;AAjGwB;;AAAA;AAAA,S;;;;gBAdlB;;gBALA;;gBAYA;;gBAdW;;gBADX;;gBAKA;;gBAOA;;gBAdA;;gBAaA;;;;AAWIwS,oBAAc,eAL1B,gEAAU;AACTlS,gBAAQ,EAAE,WADD;AAETC,gBAAQ,EAAR,wEAFS;;AAAA,OAAV,CAK0B,E,iCAOQ,uE,EAAqC,yD,EAAoC,2G,EAC7F,0D,EAA2B,sD,EAAsB,+D,EAA6B,iF,EACxE,8E,EAA4B,yE,EATtB,GAAdiS,cAAc,CAAd","file":"features-login-login-module-es5.js","sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { SnackBarService } from 'src/app/shared/services/SnackBar';\r\nimport { ForgetPasswordService } from './forget-password.service';\r\n\r\n@Component({\r\n  selector: 'app-forget-password',\r\n  templateUrl: './forget-password.component.html',\r\n  styleUrls: ['./forget-password.component.scss']\r\n})\r\nexport class ForgetPasswordComponent implements OnInit {\r\n\r\n  isLoadingResults=false;\r\n  codeValidation;\r\n  mailRecuperation;\r\n  consigne = false;\r\n  constructor(private forgetPassword: ForgetPasswordService,private route: Router,\r\n                private snackBar: SnackBarService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  recuperationDuMail(){\r\n    \r\n    this.forgetPassword.MailDeRecuperation(this.mailRecuperation).subscribe((data)=>{\r\n      console.log(data);\r\n      \r\n    },(error: HttpErrorResponse)=>{\r\n      console.log(error);\r\n      if(error.status>300)\r\n      {\r\n        this.isLoadingResults=false;\r\n        this.snackBar.openSnackBar(\"Mail n'existe pas ou vous vous etes inscrit automatiquement\", \"error mail\", 5000);\r\n      }\r\n      else{\r\n        this.consigne= true;\r\n        this.isLoadingResults=false;\r\n        this.snackBar.openSnackBar(\"Code de validation envoyer\",\"code de validation\", 4000);\r\n      }\r\n    })\r\n  }\r\n\r\n  envoiDuPassword(){\r\n    this.forgetPassword.envoiMailByCode(this.codeValidation).subscribe((data)=>{\r\n\r\n    },(error: HttpErrorResponse)=>{\r\n      console.log(error);\r\n      if(error.status>300)\r\n      {\r\n        this.isLoadingResults=false;\r\n        this.snackBar.openSnackBar(\"Le code inserer est incorrect veillez verifier a nouveau\", \"Code invalide\", 5000);\r\n      }\r\n      else{\r\n        this.consigne= true;\r\n        this.snackBar.openSnackBar(\"Mot de passe envoyer a votre compte mail\",\"Password modifier\", 4000);\r\n        this.route.navigate([\"/login\"]);\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit(){\r\n    this.isLoadingResults=true;\r\n    if(this.consigne){\r\n      this.envoiDuPassword();\r\n    }\r\n    else{\r\n      this.recuperationDuMail();\r\n    }\r\n  }\r\n\r\n}\r\n","export default \".titre {\\n  font-weight: bold;\\n  font-size: 20px;\\n}\\n\\n.body {\\n  background-image: url('bg.jpg');\\n  background-repeat: no-repeat;\\n  background-size: 100%;\\n}\\n\\n.reseau {\\n  padding: 5px;\\n}\\n\\n.reseau button {\\n  padding: 5px;\\n  color: rgba(14, 14, 161, 0.767);\\n  font-weight: bold;\\n}\\n\\n.inscription {\\n  padding-left: 15px;\\n}\\n\\n.reaseau-head {\\n  text-align: center;\\n  color: rgba(14, 14, 161, 0.986);\\n  font-size: 20px;\\n  font-weight: 200px;\\n}\\n\\n@media (max-height: 768px) and (max-width: 1024px) {\\n  .reseau {\\n    padding: 0px;\\n  }\\n  .reseau button {\\n    color: rgba(14, 14, 161, 0.767);\\n    font-weight: bold;\\n    margin: 2px;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFxmb3JnZXQtcGFzc3dvcmQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxpQkFBQTtFQUNBLGVBQUE7QUFDSjs7QUFFQTtFQUNJLCtCQUFBO0VBQ0EsNEJBQUE7RUFDQSxxQkFBQTtBQUNKOztBQUNBO0VBQ0ksWUFBQTtBQUVKOztBQURJO0VBQ0ksWUFBQTtFQUNBLCtCQUFBO0VBQ0EsaUJBQUE7QUFHUjs7QUFBQTtFQUNJLGtCQUFBO0FBR0o7O0FBQUE7RUFFSSxrQkFBQTtFQUNBLCtCQUFBO0VBQ0EsZUFBQTtFQUNBLGtCQUFBO0FBRUo7O0FBQ0E7RUFDSTtJQUNJLFlBQUE7RUFFTjtFQURNO0lBQ0ksK0JBQUE7SUFDQSxpQkFBQTtJQUNBLFdBQUE7RUFHVjtBQUNGIiwiZmlsZSI6ImZvcmdldC1wYXNzd29yZC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi50aXRyZXtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgZm9udC1zaXplOiAyMHB4O1xyXG59XHJcblxyXG4uYm9keXtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi8uLi8uLi8uLi9hc3NldHMvYmcuanBnJyk7XHJcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gICAgYmFja2dyb3VuZC1zaXplOiAxMDAlO1xyXG59XHJcbi5yZXNlYXV7XHJcbiAgICBwYWRkaW5nOiA1cHg7XHJcbiAgICBidXR0b257XHJcbiAgICAgICAgcGFkZGluZzogNXB4O1xyXG4gICAgICAgIGNvbG9yOiByZ2JhKDE0LCAxNCwgMTYxLCAwLjc2Nyk7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICB9XHJcbn1cclxuLmluc2NyaXB0aW9ue1xyXG4gICAgcGFkZGluZy1sZWZ0OiAxNXB4O1xyXG59XHJcblxyXG4ucmVhc2VhdS1oZWFke1xyXG5cclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGNvbG9yOiByZ2JhKDE0LCAxNCwgMTYxLCAwLjk4Nik7O1xyXG4gICAgZm9udC1zaXplOiAyMHB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDIwMHB4O1xyXG59XHJcblxyXG5AbWVkaWEgKG1heC1oZWlnaHQ6IDc2OHB4KSBhbmQgKG1heC13aWR0aDogMTAyNHB4KXtcclxuICAgIC5yZXNlYXV7XHJcbiAgICAgICAgcGFkZGluZzogMHB4O1xyXG4gICAgICAgIGJ1dHRvbntcclxuICAgICAgICAgICAgY29sb3I6IHJnYmEoMTQsIDE0LCAxNjEsIDAuNzY3KTtcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICAgICAgICAgIG1hcmdpbjogMnB4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSJdfQ== */\";","import { SnackBarService } from './../../shared/services/SnackBar';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, ErrorHandler, OnInit } from '@angular/core';\r\nimport { EmailValidator, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { FacebookLoginProvider, GoogleLoginProvider, SocialAuthService, SocialUser } from 'angularx-social-login';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { Settings } from 'src/app/app.settings.model';\r\nimport { LoginService } from 'src/app/shared/services/authentification';\r\nimport { TokenStorageService } from '../login/_helper/localStorage';\r\nimport { MustMatch } from './_helpe';\r\nimport { emailValidator } from 'src/app/theme/utils/app-validators';\r\n\r\n@Component({\r\n  selector: 'app-inscription',\r\n  templateUrl: './inscription.component.html',\r\n  styleUrls: ['./inscription.component.scss']\r\n})\r\nexport class InscriptionComponent implements OnInit {\r\n\r\n  public formIns:FormGroup;\r\n  public settings: Settings;\r\n  user: SocialUser;\r\n  loggedIn: boolean;\r\n  hidev= true;\r\n  hide = true;\r\n  constructor(private authService: SocialAuthService,public appSettings:AppSettings, \r\n    public fb: FormBuilder, public router:Router, private http: HttpClient,\r\n     private loginS :LoginService,private token: TokenStorageService,private snackBar: SnackBarService){\r\n    this.settings = this.appSettings.settings; \r\n    this.formIns = this.fb.group({\r\n      'nom' :[null, Validators.required],\r\n      'prenom':[null, Validators.required],\r\n      'imgUrl':[null],\r\n      'provider' :[null],\r\n      'email': [null,Validators.compose([Validators.required, emailValidator])],\r\n      'password': [null, [Validators.required, Validators.minLength(6)]],\r\n      'passwordValid': [null, [Validators.required, Validators.minLength(6)]] }\r\n      , {\r\n        validator: MustMatch('password', 'passwordValid')\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    \r\n    this.authService.authState.subscribe((user) => {\r\n      this.user = user;\r\n      this.formIns.get('nom').setValue(user.firstName);\r\n      this.formIns.get('prenom').setValue(user.lastName);\r\n      //this.formIns.get('imgUrl').setValue(user.photoUrl);\r\n      this.formIns.get('provider').setValue(user.provider);\r\n      this.formIns.get('password').setValue(user.id);\r\n      this.formIns.get('passwordValid').setValue(user.id);\r\n      this.formIns.get('email').setValue(user.email);\r\n      this.onSubmit();\r\n      \r\n    });\r\n  }\r\n\r\n  signInWithGoogle(): void {\r\n    this.authService.signIn(GoogleLoginProvider.PROVIDER_ID);\r\n  }\r\n\r\n  signInWithFB(): void {\r\n    this.authService.signIn(FacebookLoginProvider.PROVIDER_ID);\r\n  }\r\n\r\n  signOut(): void {\r\n    this.authService.signOut();\r\n  }\r\n\r\n\r\n  onSubmit(){\r\n   if(this.formIns.valid){\r\n      //console.log(this.form.value)\r\n    this.loginS.inscription(this.formIns.value).subscribe((data)=>{\r\n      \r\n    },\r\n    (err: HttpErrorResponse) => {\r\n      //console.log(err);\r\n      if(err.status ==201){\r\n        this.snackBar.openSnackBar(\"Compte creer avec success\", \"Inscription\", 5000);\r\n        this.router.navigate(['/login']);\r\n      }\r\n      else{\r\n        this.formIns.reset();\r\n        this.snackBar.openSnackBar(\"Utilisateur existe deja\", \"Inscription\", 3000);\r\n        location.reload();\r\n      }\r\n    })\r\n   }\r\n   else{\r\n    this.snackBar.openSnackBar(\"Remplire les champs SVP\", \"Champs Vide\", 3000);\r\n   }\r\n  }\r\n\r\n}\r\n","export default \"<mat-sidenav-container class=\\\"body\\\">\\r\\n\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"h-100\\\">\\r\\n  \\r\\n         <div  fxFlex=\\\"80\\\" fxFlex.gt-sm=\\\"40\\\" fxFlex.sm=\\\"80\\\">\\r\\n  \\r\\n              <mat-card class=\\\"p-0 mat-elevation-z24 box\\\">\\r\\n                  <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"bg-primary box-header\\\">\\r\\n                      <img width=\\\"150px\\\" height=\\\"120px\\\" src=\\\"./assets/logo.png\\\">\\r\\n                      \\r\\n                  </div>\\r\\n                  <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"box\\\" >\\r\\n                      <mat-card class=\\\"form-card\\\" fxLayout=\\\"column\\\"  class=\\\"mat-elevation-z12 box-content-inner\\\">\\r\\n                          <span class=\\\"titre\\\">Inscription</span>  \\r\\n                            <form [formGroup]=\\\"formIns\\\" #f=\\\"ngForm\\\">\\r\\n                                <div fxLayoutAlign=\\\"satrt\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n                                    <span [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                                      <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\" >\\r\\n                                          <mat-label>Nom</mat-label>\\r\\n                                            <input matInput placeholder=\\\"Nom\\\" formControlName=\\\"nom\\\">\\r\\n                                            <mat-error *ngIf=\\\"formIns.controls.nom.errors?.required\\\">Nom ne doit pas etre vide</mat-error>                               \\r\\n                                        </mat-form-field>\\r\\n                                    </span>\\r\\n                                    <span [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                                      <mat-form-field class=\\\"form-fiel\\\" appearance=\\\"outline\\\" class=\\\"w-100\\\" >\\r\\n                                          <mat-label>Prenom</mat-label>\\r\\n                                            <input matInput placeholder=\\\"Prenom\\\" formControlName=\\\"prenom\\\">\\r\\n                                            <mat-error *ngIf=\\\"formIns.controls.prenom.errors?.required\\\">Prenom ne doit pas etre vide</mat-error> \\r\\n                                        </mat-form-field>\\r\\n                                    </span>\\r\\n                                </div>\\r\\n                                  <span fxLayoutAlign=\\\"start\\\">\\r\\n                                     <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                                        <mat-label>Email</mat-label>\\r\\n                                          <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\" >\\r\\n                                          <mat-error *ngIf=\\\"formIns.controls.email.errors?.required\\\">Email ne doit pas etre vide</mat-error> \\r\\n                                          <mat-error *ngIf=\\\"formIns.controls.email.hasError('invalidEmail')\\\">Mail Invalide</mat-error>\\r\\n                                          <mat-error *ngIf=\\\"formIns.controls.email.hasError('invalidEmail')\\\">Email invalide</mat-error>\\r\\n                                      </mat-form-field>\\r\\n                                  </span>\\r\\n                              <div fxLayoutAlign=\\\"center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n                                  <span [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                                    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                                        <mat-label>Password</mat-label>\\r\\n                                        <input matInput formControlName=\\\"password\\\" [type]=\\\"hide ? 'password' : 'text'\\\">\\r\\n                                        <button mat-icon-button matSuffix (click)=\\\"hide = !hide\\\" [attr.aria-label]=\\\"'Hide password'\\\" [attr.aria-pressed]=\\\"hide\\\">\\r\\n                                        <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\\r\\n                                        </button>\\r\\n                                        <mat-error *ngIf=\\\"formIns.controls.password.errors?.required\\\">Password doit pas etre vide</mat-error>\\r\\n                                        <mat-error *ngIf=\\\"formIns.controls.password.hasError('minlength')\\\">La taille minimum est de 6 caractere</mat-error>\\r\\n                                     </mat-form-field>\\r\\n                                  </span>\\r\\n                                  <span [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                                    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\" >\\r\\n                                        <mat-label>Validation Password</mat-label>\\r\\n                                        <input matInput formControlName=\\\"passwordValid\\\" [type]=\\\"hidev ? 'password' : 'text'\\\">\\r\\n                                        <button mat-icon-button matSuffix (click)=\\\"hidev = !hidev\\\" [attr.aria-label]=\\\"'Hide password'\\\" [attr.aria-pressed]=\\\"hidev\\\">\\r\\n                                        <mat-icon>{{hidev ? 'visibility_off' : 'visibility'}}</mat-icon>\\r\\n                                        </button>\\r\\n                                        <mat-error *ngIf=\\\"formIns.controls.passwordValid.errors?.required\\\">Password doit pas etre vide</mat-error>\\r\\n                                        <mat-error *ngIf=\\\"formIns.controls.passwordValid.hasError('minlength')\\\">La taille minimum est de 6 caractere</mat-error>\\r\\n                                      </mat-form-field>\\r\\n                                  </span>\\r\\n                              </div>\\r\\n                            </form>\\r\\n                          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start\\\">\\r\\n                            <p>J'aimerais <a mat-button routerLink=\\\"/login\\\">me connecter</a></p>\\r\\n                          </div>\\r\\n                      </mat-card>\\r\\n                      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onSubmit()\\\"  class=\\\"mat-elevation-z12 box-button\\\" type=\\\"submit\\\">S'Inscrire</button>\\r\\n                  </mat-card-content>\\r\\n                    <mat-card>\\r\\n                        <h3 class=\\\"reaseau-head\\\">s'inscrire avec </h3>\\r\\n                        <mat-card-content >\\r\\n                            <div class=\\\"reseau\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n                                <button (click)=\\\"signInWithGoogle()\\\" [fxFlex.xs]=\\\"45\\\" [fxFlex.sm]=\\\"45\\\" [fxFlex.md]=\\\"45\\\" [fxFlex.lg]=\\\"45\\\" [fxFlex.xl]=\\\"45\\\"\\r\\n                                  mat-raised-button  class=\\\"mat-elevation-z12 box-button\\\">\\r\\n                                  <img  width=\\\"30px\\\" height=\\\"30px\\\" src=\\\"./assets/icones/google.png\\\">\\r\\n                                     Google\\r\\n                                    </button>\\r\\n                                <button (click)=\\\"signInWithFB()\\\" [fxFlex.xs]=\\\"45\\\" [fxFlex.sm]=\\\"45\\\" [fxFlex.md]=\\\"45\\\" [fxFlex.lg]=\\\"45\\\" [fxFlex.xl]=\\\"45\\\"\\r\\n                                  mat-raised-button  class=\\\"mat-elevation-z12 box-button\\\">\\r\\n                                  <img  width=\\\"30px\\\" height=\\\"30px\\\" src=\\\"./assets/icones/facebook.png\\\">\\r\\n                                  Facebook</button>\\r\\n                              </div>\\r\\n            \\r\\n                              <!-- <div class=\\\"reseau\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n\\r\\n                                <button [fxFlex.xs]=\\\"45\\\" [fxFlex.sm]=\\\"45\\\" [fxFlex.md]=\\\"45\\\" [fxFlex.lg]=\\\"45\\\" [fxFlex.xl]=\\\"45\\\"\\r\\n                                  mat-raised-button  class=\\\"mat-elevation-z12 box-button\\\">\\r\\n                                  <img  width=\\\"30px\\\" height=\\\"30px\\\" src=\\\"./assets/icones/twitter.png\\\">\\r\\n                                  Twitter</button>\\r\\n\\r\\n                                <button [fxFlex.xs]=\\\"45\\\" [fxFlex.sm]=\\\"45\\\" [fxFlex.md]=\\\"45\\\" [fxFlex.lg]=\\\"45\\\" [fxFlex.xl]=\\\"45\\\"\\r\\n                                  mat-raised-button class=\\\"mat-elevation-z12 box-button\\\">\\r\\n                                  <img  width=\\\"30px\\\"  src=\\\"./assets/icones/linkedin.png\\\">\\r\\n                                  Linkedin</button>\\r\\n                              </div> -->\\r\\n                        </mat-card-content>\\r\\n                    </mat-card>\\r\\n              </mat-card>\\r\\n            </div>\\r\\n    </div>\\r\\n  \\r\\n  </mat-sidenav-container>\";","export default \".titre {\\n  font-weight: bold;\\n  font-size: 20px;\\n}\\n\\n.body {\\n  background-image: url('bg.jpg');\\n  background-repeat: no-repeat;\\n  background-size: 100%;\\n}\\n\\n.reseau {\\n  padding: 5px;\\n}\\n\\n.reseau button {\\n  padding: 5px;\\n  color: rgba(14, 14, 161, 0.767);\\n  font-weight: bold;\\n}\\n\\n.inscription {\\n  padding-left: 15px;\\n}\\n\\n.reaseau-head {\\n  text-align: center;\\n  color: rgba(14, 14, 161, 0.986);\\n  font-size: 20px;\\n  font-weight: 200px;\\n}\\n\\n@media (max-height: 768px) and (max-width: 1024px) {\\n  .reseau {\\n    padding: 0px;\\n  }\\n  .reseau button {\\n    color: rgba(14, 14, 161, 0.767);\\n    font-weight: bold;\\n    margin: 2px;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFxsb2dpbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGlCQUFBO0VBQ0EsZUFBQTtBQUNKOztBQUVBO0VBQ0ksK0JBQUE7RUFDQSw0QkFBQTtFQUNBLHFCQUFBO0FBQ0o7O0FBQ0E7RUFDSSxZQUFBO0FBRUo7O0FBREk7RUFDSSxZQUFBO0VBQ0EsK0JBQUE7RUFDQSxpQkFBQTtBQUdSOztBQUFBO0VBQ0ksa0JBQUE7QUFHSjs7QUFBQTtFQUVJLGtCQUFBO0VBQ0EsK0JBQUE7RUFDQSxlQUFBO0VBQ0Esa0JBQUE7QUFFSjs7QUFDQTtFQUNJO0lBQ0ksWUFBQTtFQUVOO0VBRE07SUFDSSwrQkFBQTtJQUNBLGlCQUFBO0lBQ0EsV0FBQTtFQUdWO0FBQ0YiLCJmaWxlIjoibG9naW4uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudGl0cmV7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIGZvbnQtc2l6ZTogMjBweDtcclxufVxyXG5cclxuLmJvZHl7XHJcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4vLi4vLi4vLi4vYXNzZXRzL2JnLmpwZycpO1xyXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICAgIGJhY2tncm91bmQtc2l6ZTogMTAwJTtcclxufVxyXG4ucmVzZWF1e1xyXG4gICAgcGFkZGluZzogNXB4O1xyXG4gICAgYnV0dG9ue1xyXG4gICAgICAgIHBhZGRpbmc6IDVweDtcclxuICAgICAgICBjb2xvcjogcmdiYSgxNCwgMTQsIDE2MSwgMC43NjcpO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgfVxyXG59XHJcbi5pbnNjcmlwdGlvbntcclxuICAgIHBhZGRpbmctbGVmdDogMTVweDtcclxufVxyXG5cclxuLnJlYXNlYXUtaGVhZHtcclxuXHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBjb2xvcjogcmdiYSgxNCwgMTQsIDE2MSwgMC45ODYpOztcclxuICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgIGZvbnQtd2VpZ2h0OiAyMDBweDtcclxufVxyXG5cclxuQG1lZGlhIChtYXgtaGVpZ2h0OiA3NjhweCkgYW5kIChtYXgtd2lkdGg6IDEwMjRweCl7XHJcbiAgICAucmVzZWF1e1xyXG4gICAgICAgIHBhZGRpbmc6IDBweDtcclxuICAgICAgICBidXR0b257XHJcbiAgICAgICAgICAgIGNvbG9yOiByZ2JhKDE0LCAxNCwgMTYxLCAwLjc2Nyk7XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgICAgICAgICBtYXJnaW46IDJweDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iXX0= */\";","export default \".titre {\\n  font-weight: bold;\\n  font-size: 20px;\\n  text-align: center;\\n}\\n\\n.reseau {\\n  padding: 5px;\\n}\\n\\n.reseau button {\\n  padding: 5px;\\n  color: rgba(14, 14, 161, 0.767);\\n  font-weight: bold;\\n}\\n\\n.inscription {\\n  padding-left: 15px;\\n}\\n\\n.reaseau-head {\\n  text-align: center;\\n  color: rgba(14, 14, 161, 0.986);\\n  font-size: 20px;\\n  font-weight: 200px;\\n}\\n\\n.box {\\n  width: 100%;\\n}\\n\\n.box .form-card {\\n  width: 80%;\\n}\\n\\n.form-fiel {\\n  width: 100%;\\n}\\n\\n.form-fiel input {\\n  width: 100%;\\n}\\n\\n@media (max-height: 768px) and (max-width: 1024px) {\\n  .reseau {\\n    padding: 0px;\\n  }\\n  .reseau button {\\n    color: rgba(14, 14, 161, 0.767);\\n    font-weight: bold;\\n    margin: 2px;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFxpbnNjcmlwdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGlCQUFBO0VBQ0EsZUFBQTtFQUNBLGtCQUFBO0FBQ0o7O0FBR0E7RUFDSSxZQUFBO0FBQUo7O0FBQ0k7RUFDSSxZQUFBO0VBQ0EsK0JBQUE7RUFDQSxpQkFBQTtBQUNSOztBQUVBO0VBQ0ksa0JBQUE7QUFDSjs7QUFFQTtFQUVJLGtCQUFBO0VBQ0EsK0JBQUE7RUFDQSxlQUFBO0VBQ0Esa0JBQUE7QUFBSjs7QUFHQTtFQUNJLFdBQUE7QUFBSjs7QUFDSTtFQUNJLFVBQUE7QUFDUjs7QUFHQTtFQUNJLFdBQUE7QUFBSjs7QUFDSTtFQUNJLFdBQUE7QUFDUjs7QUFHQTtFQUNJO0lBQ0ksWUFBQTtFQUFOO0VBQ007SUFDSSwrQkFBQTtJQUNBLGlCQUFBO0lBQ0EsV0FBQTtFQUNWO0FBQ0YiLCJmaWxlIjoiaW5zY3JpcHRpb24uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudGl0cmV7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuXHJcbi5yZXNlYXV7XHJcbiAgICBwYWRkaW5nOiA1cHg7XHJcbiAgICBidXR0b257XHJcbiAgICAgICAgcGFkZGluZzogNXB4O1xyXG4gICAgICAgIGNvbG9yOiByZ2JhKDE0LCAxNCwgMTYxLCAwLjc2Nyk7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICB9XHJcbn1cclxuLmluc2NyaXB0aW9ue1xyXG4gICAgcGFkZGluZy1sZWZ0OiAxNXB4O1xyXG59XHJcblxyXG4ucmVhc2VhdS1oZWFke1xyXG5cclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGNvbG9yOiByZ2JhKDE0LCAxNCwgMTYxLCAwLjk4Nik7O1xyXG4gICAgZm9udC1zaXplOiAyMHB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDIwMHB4O1xyXG59XHJcblxyXG4uYm94e1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICAuZm9ybS1jYXJke1xyXG4gICAgICAgIHdpZHRoOiA4MCU7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5mb3JtLWZpZWx7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGlucHV0e1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgfVxyXG59XHJcblxyXG5AbWVkaWEgKG1heC1oZWlnaHQ6IDc2OHB4KSBhbmQgKG1heC13aWR0aDogMTAyNHB4KXtcclxuICAgIC5yZXNlYXV7XHJcbiAgICAgICAgcGFkZGluZzogMHB4O1xyXG4gICAgICAgIGJ1dHRvbntcclxuICAgICAgICAgICAgY29sb3I6IHJnYmEoMTQsIDE0LCAxNjEsIDAuNzY3KTtcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICAgICAgICAgIG1hcmdpbjogMnB4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSJdfQ== */\";","export default \"<mat-sidenav-container >\\r\\n\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"h-100\\\">\\r\\n  \\r\\n         <form [formGroup]=\\\"form\\\"  fxFlex=\\\"80\\\" fxFlex.gt-sm=\\\"30\\\" fxFlex.sm=\\\"60\\\">\\r\\n  \\r\\n              <mat-card class=\\\"p-0 mat-elevation-z24 box\\\">\\r\\n                  <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"bg-primary box-header\\\">\\r\\n                      <img width=\\\"150px\\\" height=\\\"120px\\\" src=\\\"./assets/logo.png\\\">\\r\\n                      \\r\\n                  </div>\\r\\n                  <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"box-content\\\">\\r\\n                      <mat-card fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"mat-elevation-z12 box-content-inner\\\">\\r\\n                          <span class=\\\"titre\\\">Connexion</span>  \\r\\n                          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                            <mat-label>Username</mat-label>\\r\\n                              <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\">\\r\\n                              <mat-error *ngIf=\\\"form.controls.email.errors?.required\\\">Email ne doit pas etre vide</mat-error>\\r\\n                              <mat-error *ngIf=\\\"form.controls.email.hasError('invalidEmail')\\\">Email invalide</mat-error>\\r\\n                          </mat-form-field>\\r\\n                          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                              <mat-label>Password</mat-label>\\r\\n                              <mat-icon matPrefix>lock</mat-icon>\\r\\n                            <input matInput formControlName=\\\"password\\\" [type]=\\\"hide ? 'password' : 'text'\\\">\\r\\n                            <button mat-icon-button matSuffix (click)=\\\"hide = !hide\\\" [attr.aria-label]=\\\"'Hide password'\\\" [attr.aria-pressed]=\\\"hide\\\">\\r\\n                            <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\\r\\n                            </button>\\r\\n\\r\\n                              <mat-error *ngIf=\\\"form.controls.password.errors?.required\\\">password ne doit pas etre vide</mat-error>\\r\\n                              <mat-error *ngIf=\\\"form.controls.password.hasError('minlength')\\\">La longueur du mot de passe est de 6 caractere minimum</mat-error>\\r\\n                          </mat-form-field>\\r\\n                          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start\\\">\\r\\n\\r\\n                          </div>\\r\\n                      </mat-card>\\r\\n                      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onSubmit()\\\" class=\\\"mat-elevation-z12 box-button\\\" type=\\\"submit\\\">Connexion</button>\\r\\n                  </mat-card-content>\\r\\n                  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start\\\">\\r\\n                    <mat-card-content class=\\\"inscription\\\">\\r\\n                        <p>J'aimerais <a mat-button routerLink=\\\"/login/inscription\\\">m'inscrire</a></p>\\r\\n                    </mat-card-content>\\r\\n                  </div>\\r\\n                  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                    <mat-card-content class=\\\"inscription\\\">\\r\\n                        <p><a mat-button routerLink=\\\"/login/forgetpassword\\\">mot de passe oublier</a></p>\\r\\n                    </mat-card-content>\\r\\n                  </div>\\r\\n                    <mat-card>\\r\\n                        <h3 class=\\\"reaseau-head\\\">se connecter avec </h3>\\r\\n                        <mat-card-content >\\r\\n                            <div class=\\\"reseau\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n                                <button (click)=\\\"signInWithGoogle()\\\" [fxFlex.xs]=\\\"45\\\" [fxFlex.sm]=\\\"45\\\" [fxFlex.md]=\\\"45\\\" [fxFlex.lg]=\\\"45\\\" [fxFlex.xl]=\\\"45\\\"\\r\\n                                  mat-raised-button  class=\\\"mat-elevation-z12 box-button\\\">\\r\\n                                  <img  width=\\\"30px\\\" height=\\\"30px\\\" src=\\\"./assets/icones/google.png\\\">\\r\\n                                     Google\\r\\n                                    </button>\\r\\n                                <button (click)=\\\"signInWithFB()\\\" [fxFlex.xs]=\\\"45\\\" [fxFlex.sm]=\\\"45\\\" [fxFlex.md]=\\\"45\\\" [fxFlex.lg]=\\\"45\\\" [fxFlex.xl]=\\\"45\\\"\\r\\n                                  mat-raised-button  class=\\\"mat-elevation-z12 box-button\\\">\\r\\n                                  <img  width=\\\"30px\\\" height=\\\"30px\\\" src=\\\"./assets/icones/facebook.png\\\">\\r\\n                                  Facebook</button>\\r\\n                              </div>\\r\\n<!--             \\r\\n                              <div class=\\\"reseau\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n\\r\\n                                <button [fxFlex.xs]=\\\"45\\\" [fxFlex.sm]=\\\"45\\\" [fxFlex.md]=\\\"45\\\" [fxFlex.lg]=\\\"45\\\" [fxFlex.xl]=\\\"45\\\"\\r\\n                                  mat-raised-button  class=\\\"mat-elevation-z12 box-button\\\">\\r\\n                                  <img  width=\\\"30px\\\" height=\\\"30px\\\" src=\\\"./assets/icones/twitter.png\\\">\\r\\n                                  Twitter</button>\\r\\n\\r\\n                                <button [fxFlex.xs]=\\\"45\\\" [fxFlex.sm]=\\\"45\\\" [fxFlex.md]=\\\"45\\\" [fxFlex.lg]=\\\"45\\\" [fxFlex.xl]=\\\"45\\\"\\r\\n                                  mat-raised-button class=\\\"mat-elevation-z12 box-button\\\">\\r\\n                                  <img  width=\\\"30px\\\"  src=\\\"./assets/icones/linkedin.png\\\">\\r\\n                                  Linkedin</button>\\r\\n\\r\\n                              </div> -->\\r\\n                        </mat-card-content>\\r\\n                    </mat-card>\\r\\n              </mat-card>\\r\\n              \\r\\n          </form>    \\r\\n    \\r\\n    </div>\\r\\n  \\r\\n  </mat-sidenav-container>\";","export default \"\\r\\n\\r\\n<mat-sidenav-container >\\r\\n    <div *ngIf=\\\"isLoadingResults\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"user-spinner\\\">   \\r\\n        <mat-spinner color=\\\"primary\\\"></mat-spinner>\\r\\n      </div>\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"h-100\\\">\\r\\n         <form   fxFlex=\\\"80\\\" fxFlex.gt-sm=\\\"30\\\" fxFlex.sm=\\\"60\\\">\\r\\n              <mat-card class=\\\"p-0 mat-elevation-z24 box\\\">\\r\\n                  <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"bg-primary box-header\\\">\\r\\n                      <img width=\\\"150px\\\" height=\\\"120px\\\" src=\\\"./assets/logo.png\\\">\\r\\n                      \\r\\n                  </div>\\r\\n                  <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"box-content\\\">\\r\\n                      <mat-card fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"mat-elevation-z12 box-content-inner\\\">\\r\\n                          <span class=\\\"titre\\\">Mot de passe oublier</span>  \\r\\n                          <mat-form-field *ngIf=\\\"!consigne\\\" appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                            <mat-label>Mail de recuperation</mat-label>\\r\\n                              <input [(ngModel)]=\\\"mailRecuperation\\\" matInput type=\\\"email\\\" placeholder=\\\"Mail de recuperation\\\" name=\\\"mailRecuperation\\\">\\r\\n                              <!-- <mat-error *ngIf=\\\"form.controls.email.errors?.required\\\">Email is required</mat-error>\\r\\n                              <mat-error *ngIf=\\\"form.controls.email.hasError('invalidEmail')\\\">Invalid email address</mat-error> -->\\r\\n                          </mat-form-field>\\r\\n                          <mat-form-field *ngIf=\\\"consigne\\\" appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                            <mat-label>Code de validation</mat-label>\\r\\n                              <input [(ngModel)]=\\\"codeValidation\\\" matInput type=\\\"email\\\" placeholder=\\\"Code de validation\\\" name=\\\"codeValidation\\\">\\r\\n                              <!-- <mat-error *ngIf=\\\"form.controls.email.errors?.required\\\">Email is required</mat-error>\\r\\n                              <mat-error *ngIf=\\\"form.controls.email.hasError('invalidEmail')\\\">Invalid email address</mat-error> -->\\r\\n                          </mat-form-field>\\r\\n                          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start\\\">\\r\\n                          </div>\\r\\n                      </mat-card>\\r\\n                      <button mat-raised-button (click)=\\\"onSubmit()\\\" color=\\\"primary\\\" class=\\\"mat-elevation-z12 box-button\\\" type=\\\"submit\\\">Valider</button>\\r\\n                  </mat-card-content>\\r\\n                  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start\\\">\\r\\n                    <mat-card-content class=\\\"inscription\\\">\\r\\n                        <p>J'aimerais <a mat-button routerLink=\\\"/login\\\">me connecter</a></p>\\r\\n                    </mat-card-content>\\r\\n                </div>\\r\\n              </mat-card>\\r\\n              \\r\\n          </form>    \\r\\n    \\r\\n    </div>\\r\\n  \\r\\n  </mat-sidenav-container>\";","import { FormGroup, FormControl } from '@angular/forms';\r\n\r\nexport function emailValidator(control: FormControl): {[key: string]: any} {\r\n    var emailRegexp = /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$/;    \r\n    if (control.value && !emailRegexp.test(control.value)) {\r\n        return {invalidEmail: true};\r\n    }\r\n}\r\n\r\nexport function matchingPasswords(passwordKey: string, passwordConfirmationKey: string) {\r\n    return (group: FormGroup) => {\r\n        let password= group.controls[passwordKey];\r\n        let passwordConfirmation= group.controls[passwordConfirmationKey];\r\n        if (password.value !== passwordConfirmation.value) {\r\n            return passwordConfirmation.setErrors({mismatchedPasswords: true})\r\n        }\r\n    }\r\n}","import { Injectable, Inject, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { ReplaySubject, AsyncSubject } from 'rxjs';\nimport { CommonModule } from '@angular/common';\n\nimport * as ɵngcc0 from '@angular/core';\nclass BaseLoginProvider {\r\n    constructor() { }\r\n    loadScript(id, src, onload, parentElement = null) {\r\n        // get document if platform is only browser\r\n        if (typeof document !== 'undefined' && !document.getElementById(id)) {\r\n            let signInJS = document.createElement('script');\r\n            signInJS.async = true;\r\n            signInJS.src = src;\r\n            signInJS.onload = onload;\r\n            if (!parentElement) {\r\n                parentElement = document.head;\r\n            }\r\n            parentElement.appendChild(signInJS);\r\n        }\r\n    }\r\n}\n\nclass SocialUser {\r\n}\n\nclass GoogleLoginProvider extends BaseLoginProvider {\r\n    constructor(clientId, initOptions = { scope: 'email' }) {\r\n        super();\r\n        this.clientId = clientId;\r\n        this.initOptions = initOptions;\r\n    }\r\n    initialize() {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                this.loadScript(GoogleLoginProvider.PROVIDER_ID, 'https://apis.google.com/js/platform.js', () => {\r\n                    gapi.load('auth2', () => {\r\n                        this.auth2 = gapi.auth2.init(Object.assign(Object.assign({}, this.initOptions), { client_id: this.clientId }));\r\n                        this.auth2\r\n                            .then(() => {\r\n                            resolve();\r\n                        })\r\n                            .catch((err) => {\r\n                            reject(err);\r\n                        });\r\n                    });\r\n                });\r\n            }\r\n            catch (err) {\r\n                reject(err);\r\n            }\r\n        });\r\n    }\r\n    getLoginStatus(loginStatusOptions) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.auth2.isSignedIn.get()) {\r\n                let user = new SocialUser();\r\n                const profile = this.auth2.currentUser.get().getBasicProfile();\r\n                user.id = profile.getId();\r\n                user.name = profile.getName();\r\n                user.email = profile.getEmail();\r\n                user.photoUrl = profile.getImageUrl();\r\n                user.firstName = profile.getGivenName();\r\n                user.lastName = profile.getFamilyName();\r\n                user.response = profile;\r\n                if (loginStatusOptions && loginStatusOptions.refreshToken) {\r\n                    this.auth2.currentUser.get().reloadAuthResponse().then(authResponse => {\r\n                        user.authToken = authResponse.access_token;\r\n                        user.idToken = authResponse.id_token;\r\n                        resolve(user);\r\n                    });\r\n                }\r\n                else {\r\n                    const authResponse = this.auth2.currentUser.get().getAuthResponse(true);\r\n                    user.authToken = authResponse.access_token;\r\n                    user.idToken = authResponse.id_token;\r\n                    resolve(user);\r\n                }\r\n            }\r\n            else {\r\n                reject(`No user is currently logged in with ${GoogleLoginProvider.PROVIDER_ID}`);\r\n            }\r\n        });\r\n    }\r\n    signIn(signInOptions) {\r\n        const options = Object.assign(Object.assign({}, this.initOptions), signInOptions);\r\n        return new Promise((resolve, reject) => {\r\n            const offlineAccess = options && options.offline_access;\r\n            let promise = !offlineAccess\r\n                ? this.auth2.signIn(signInOptions)\r\n                : this.auth2.grantOfflineAccess(signInOptions);\r\n            promise\r\n                .then((response) => {\r\n                let user = new SocialUser();\r\n                if (response && response.code) {\r\n                    user.authorizationCode = response.code;\r\n                }\r\n                else {\r\n                    let profile = this.auth2.currentUser.get().getBasicProfile();\r\n                    let token = this.auth2.currentUser.get().getAuthResponse(true)\r\n                        .access_token;\r\n                    let backendToken = this.auth2.currentUser\r\n                        .get()\r\n                        .getAuthResponse(true).id_token;\r\n                    user.id = profile.getId();\r\n                    user.name = profile.getName();\r\n                    user.email = profile.getEmail();\r\n                    user.photoUrl = profile.getImageUrl();\r\n                    user.firstName = profile.getGivenName();\r\n                    user.lastName = profile.getFamilyName();\r\n                    user.authToken = token;\r\n                    user.idToken = backendToken;\r\n                    user.response = profile;\r\n                }\r\n                resolve(user);\r\n            }, (closed) => {\r\n                reject(closed);\r\n            })\r\n                .catch((err) => {\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n    signOut(revoke) {\r\n        return new Promise((resolve, reject) => {\r\n            let signOutPromise;\r\n            if (revoke) {\r\n                signOutPromise = this.auth2.disconnect();\r\n            }\r\n            else {\r\n                signOutPromise = this.auth2.signOut();\r\n            }\r\n            signOutPromise\r\n                .then((err) => {\r\n                if (err) {\r\n                    reject(err);\r\n                }\r\n                else {\r\n                    resolve();\r\n                }\r\n            })\r\n                .catch((err) => {\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n}\r\nGoogleLoginProvider.PROVIDER_ID = 'GOOGLE';\n\n/** @dynamic */\r\nclass SocialAuthService {\r\n    constructor(config) {\r\n        this.providers = new Map();\r\n        this.autoLogin = false;\r\n        this._user = null;\r\n        this._authState = new ReplaySubject(1);\r\n        /* Consider making this an enum comprising LOADING, LOADED, FAILED etc. */\r\n        this.initialized = false;\r\n        this._initState = new AsyncSubject();\r\n        if (config instanceof Promise) {\r\n            config.then((config) => {\r\n                this.initialize(config);\r\n            });\r\n        }\r\n        else {\r\n            this.initialize(config);\r\n        }\r\n    }\r\n    get authState() {\r\n        return this._authState.asObservable();\r\n    }\r\n    get initState() {\r\n        return this._initState.asObservable();\r\n    }\r\n    initialize(config) {\r\n        this.autoLogin = config.autoLogin !== undefined ? config.autoLogin : false;\r\n        const { onError = console.error } = config;\r\n        config.providers.forEach((item) => {\r\n            this.providers.set(item.id, item.provider);\r\n        });\r\n        Promise.all(Array.from(this.providers.values()).map((provider) => provider.initialize()))\r\n            .then(() => {\r\n            if (this.autoLogin) {\r\n                const loginStatusPromises = [];\r\n                let loggedIn = false;\r\n                this.providers.forEach((provider, key) => {\r\n                    let promise = provider.getLoginStatus();\r\n                    loginStatusPromises.push(promise);\r\n                    promise\r\n                        .then((user) => {\r\n                        user.provider = key;\r\n                        this._user = user;\r\n                        this._authState.next(user);\r\n                        loggedIn = true;\r\n                    })\r\n                        .catch(console.debug);\r\n                });\r\n                Promise.all(loginStatusPromises).catch(() => {\r\n                    if (!loggedIn) {\r\n                        this._user = null;\r\n                        this._authState.next(null);\r\n                    }\r\n                });\r\n            }\r\n        })\r\n            .catch((error) => {\r\n            onError(error);\r\n        })\r\n            .finally(() => {\r\n            this.initialized = true;\r\n            this._initState.next(this.initialized);\r\n            this._initState.complete();\r\n        });\r\n    }\r\n    refreshAuthToken(providerId) {\r\n        return new Promise((resolve, reject) => {\r\n            if (!this.initialized) {\r\n                reject(SocialAuthService.ERR_NOT_INITIALIZED);\r\n            }\r\n            else if (providerId !== GoogleLoginProvider.PROVIDER_ID) {\r\n                reject(SocialAuthService.ERR_NOT_SUPPORTED_FOR_REFRESH_TOKEN);\r\n            }\r\n            else {\r\n                const providerObject = this.providers.get(providerId);\r\n                if (providerObject) {\r\n                    providerObject\r\n                        .getLoginStatus({ refreshToken: true })\r\n                        .then((user) => {\r\n                        user.provider = providerId;\r\n                        this._user = user;\r\n                        this._authState.next(user);\r\n                        resolve();\r\n                    })\r\n                        .catch((err) => {\r\n                        reject(err);\r\n                    });\r\n                }\r\n                else {\r\n                    reject(SocialAuthService.ERR_LOGIN_PROVIDER_NOT_FOUND);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    signIn(providerId, signInOptions) {\r\n        return new Promise((resolve, reject) => {\r\n            if (!this.initialized) {\r\n                reject(SocialAuthService.ERR_NOT_INITIALIZED);\r\n            }\r\n            else {\r\n                let providerObject = this.providers.get(providerId);\r\n                if (providerObject) {\r\n                    providerObject\r\n                        .signIn(signInOptions)\r\n                        .then((user) => {\r\n                        user.provider = providerId;\r\n                        resolve(user);\r\n                        this._user = user;\r\n                        this._authState.next(user);\r\n                    })\r\n                        .catch((err) => {\r\n                        reject(err);\r\n                    });\r\n                }\r\n                else {\r\n                    reject(SocialAuthService.ERR_LOGIN_PROVIDER_NOT_FOUND);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    signOut(revoke = false) {\r\n        return new Promise((resolve, reject) => {\r\n            if (!this.initialized) {\r\n                reject(SocialAuthService.ERR_NOT_INITIALIZED);\r\n            }\r\n            else if (!this._user) {\r\n                reject(SocialAuthService.ERR_NOT_LOGGED_IN);\r\n            }\r\n            else {\r\n                let providerId = this._user.provider;\r\n                let providerObject = this.providers.get(providerId);\r\n                if (providerObject) {\r\n                    providerObject\r\n                        .signOut(revoke)\r\n                        .then(() => {\r\n                        resolve();\r\n                        this._user = null;\r\n                        this._authState.next(null);\r\n                    })\r\n                        .catch((err) => {\r\n                        reject(err);\r\n                    });\r\n                }\r\n                else {\r\n                    reject(SocialAuthService.ERR_LOGIN_PROVIDER_NOT_FOUND);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\nSocialAuthService.ɵfac = function SocialAuthService_Factory(t) { return new (t || SocialAuthService)(ɵngcc0.ɵɵinject('SocialAuthServiceConfig')); };\nSocialAuthService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: SocialAuthService, factory: SocialAuthService.ɵfac });\r\nSocialAuthService.ERR_LOGIN_PROVIDER_NOT_FOUND = 'Login provider not found';\r\nSocialAuthService.ERR_NOT_LOGGED_IN = 'Not logged in';\r\nSocialAuthService.ERR_NOT_INITIALIZED = 'Login providers not ready yet. Are there errors on your console?';\r\nSocialAuthService.ERR_NOT_SUPPORTED_FOR_REFRESH_TOKEN = 'Chosen login provider is not supported for refreshing a token';\r\nSocialAuthService.ctorParameters = () => [\r\n    { type: undefined, decorators: [{ type: Inject, args: ['SocialAuthServiceConfig',] }] }\r\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SocialAuthService, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: ['SocialAuthServiceConfig']\n            }] }]; }, null); })();\n\nclass SocialLoginModule {\r\n    constructor(parentModule) {\r\n        if (parentModule) {\r\n            throw new Error('SocialLoginModule is already loaded. Import it in the AppModule only');\r\n        }\r\n    }\r\n    static initialize(config) {\r\n        return {\r\n            ngModule: SocialLoginModule,\r\n            providers: [\r\n                SocialAuthService,\r\n                {\r\n                    provide: 'SocialAuthServiceConfig',\r\n                    useValue: config\r\n                }\r\n            ]\r\n        };\r\n    }\r\n}\nSocialLoginModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SocialLoginModule });\nSocialLoginModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SocialLoginModule_Factory(t) { return new (t || SocialLoginModule)(ɵngcc0.ɵɵinject(SocialLoginModule, 12)); }, providers: [\n        SocialAuthService\n    ], imports: [[\n            CommonModule\n        ]] });\r\nSocialLoginModule.ctorParameters = () => [\r\n    { type: SocialLoginModule, decorators: [{ type: Optional }, { type: SkipSelf }] }\r\n];\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SocialLoginModule, { imports: function () { return [CommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SocialLoginModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule\n                ],\n                providers: [\n                    SocialAuthService\n                ]\n            }]\n    }], function () { return [{ type: SocialLoginModule, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }]; }, null); })();\n\n// Simulates login / logout without actually requiring an Internet connection.\r\n//\r\n// Useful for certain development situations.\r\n//\r\n// For example, if you want to simulate the greatest football referee England has ever produced:\r\n//\r\n//  const dummyUser: SocialUser = {\r\n//     id: '0123456789',\r\n//     name: 'Howard Webb',\r\n//     email: 'howard@webb.com',\r\n//     firstName: 'Howard',\r\n//     lastName: 'Webb',\r\n//     authToken: 'dummyAuthToken',\r\n//     photoUrl: 'https://en.wikipedia.org/wiki/Howard_Webb#/media/File:Howard_Webb_march11.jpg',\r\n//     provider: 'DUMMY',\r\n//     idToken: 'dummyIdToken',\r\n//     authorizationCode: 'dummyAuthCode'\r\n// };\r\n//\r\n//  let config = new AuthServiceConfig([\r\n//  { ... },\r\n//  {\r\n//       id: DummyLoginProvider.PROVIDER_ID,\r\n//       provider: new DummyLoginProvider(dummyUser)  // Pass your user into the constructor\r\n//   },\r\n//  { ... }\r\n//  ]);\r\nclass DummyLoginProvider extends BaseLoginProvider {\r\n    constructor(dummy) {\r\n        super();\r\n        if (dummy) {\r\n            this.dummy = dummy;\r\n        }\r\n        else {\r\n            this.dummy = DummyLoginProvider.DEFAULT_USER;\r\n        }\r\n        // Start not logged in\r\n        this.loggedIn = false;\r\n    }\r\n    getLoginStatus() {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.loggedIn) {\r\n                resolve(this.dummy);\r\n            }\r\n            else {\r\n                reject('No user is currently logged in.');\r\n            }\r\n        });\r\n    }\r\n    initialize() {\r\n        return new Promise((resolve, reject) => {\r\n            resolve();\r\n        });\r\n    }\r\n    signIn() {\r\n        return new Promise((resolve, reject) => {\r\n            this.loggedIn = true;\r\n            resolve(this.dummy);\r\n        });\r\n    }\r\n    signOut(revoke) {\r\n        return new Promise((resolve, reject) => {\r\n            this.loggedIn = false;\r\n            resolve();\r\n        });\r\n    }\r\n}\r\nDummyLoginProvider.PROVIDER_ID = 'DUMMY';\r\nDummyLoginProvider.DEFAULT_USER = {\r\n    id: '1234567890',\r\n    name: 'Mickey Mouse',\r\n    email: 'mickey@mouse.com',\r\n    firstName: 'Mickey',\r\n    lastName: 'Mouse',\r\n    authToken: 'dummyAuthToken',\r\n    photoUrl: 'https://en.wikipedia.org/wiki/File:Mickey_Mouse.png',\r\n    provider: 'DUMMY',\r\n    idToken: 'dummyIdToken',\r\n    authorizationCode: 'dummyAuthCode',\r\n    response: {}\r\n};\n\nclass FacebookLoginProvider extends BaseLoginProvider {\r\n    constructor(clientId, initOptions = {\r\n        scope: 'email,public_profile',\r\n        locale: 'en_US',\r\n        fields: 'name,email,picture,first_name,last_name',\r\n        version: 'v4.0',\r\n    }) {\r\n        super();\r\n        this.clientId = clientId;\r\n        this.initOptions = initOptions;\r\n    }\r\n    initialize() {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                this.loadScript(FacebookLoginProvider.PROVIDER_ID, `//connect.facebook.net/${this.initOptions.locale}/sdk.js`, () => {\r\n                    FB.init({\r\n                        appId: this.clientId,\r\n                        autoLogAppEvents: true,\r\n                        cookie: true,\r\n                        xfbml: true,\r\n                        version: this.initOptions.version,\r\n                    });\r\n                    resolve();\r\n                });\r\n            }\r\n            catch (err) {\r\n                reject(err);\r\n            }\r\n        });\r\n    }\r\n    getLoginStatus() {\r\n        return new Promise((resolve, reject) => {\r\n            FB.getLoginStatus((response) => {\r\n                if (response.status === 'connected') {\r\n                    let authResponse = response.authResponse;\r\n                    FB.api(`/me?fields=${this.initOptions.fields}`, (fbUser) => {\r\n                        let user = new SocialUser();\r\n                        user.id = fbUser.id;\r\n                        user.name = fbUser.name;\r\n                        user.email = fbUser.email;\r\n                        user.photoUrl =\r\n                            'https://graph.facebook.com/' +\r\n                                fbUser.id +\r\n                                '/picture?type=normal';\r\n                        user.firstName = fbUser.first_name;\r\n                        user.lastName = fbUser.last_name;\r\n                        user.authToken = authResponse.accessToken;\r\n                        user.response = fbUser;\r\n                        resolve(user);\r\n                    });\r\n                }\r\n                else {\r\n                    reject(`No user is currently logged in with ${FacebookLoginProvider.PROVIDER_ID}`);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    signIn(signInOptions) {\r\n        const options = Object.assign(Object.assign({}, this.initOptions), signInOptions);\r\n        return new Promise((resolve, reject) => {\r\n            FB.login((response) => {\r\n                if (response.authResponse) {\r\n                    let authResponse = response.authResponse;\r\n                    FB.api(`/me?fields=${options.fields}`, (fbUser) => {\r\n                        let user = new SocialUser();\r\n                        user.id = fbUser.id;\r\n                        user.name = fbUser.name;\r\n                        user.email = fbUser.email;\r\n                        user.photoUrl =\r\n                            'https://graph.facebook.com/' +\r\n                                fbUser.id +\r\n                                '/picture?type=normal';\r\n                        user.firstName = fbUser.first_name;\r\n                        user.lastName = fbUser.last_name;\r\n                        user.authToken = authResponse.accessToken;\r\n                        user.response = fbUser;\r\n                        resolve(user);\r\n                    });\r\n                }\r\n                else {\r\n                    reject('User cancelled login or did not fully authorize.');\r\n                }\r\n            }, options);\r\n        });\r\n    }\r\n    signOut() {\r\n        return new Promise((resolve, reject) => {\r\n            FB.logout((response) => {\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n}\r\nFacebookLoginProvider.PROVIDER_ID = 'FACEBOOK';\n\nclass AmazonLoginProvider extends BaseLoginProvider {\r\n    constructor(clientId, initOptions = {\r\n        scope: 'profile',\r\n        scope_data: {\r\n            profile: { essential: false },\r\n        },\r\n        redirect_uri: location.origin,\r\n    }) {\r\n        super();\r\n        this.clientId = clientId;\r\n        this.initOptions = initOptions;\r\n    }\r\n    initialize() {\r\n        let amazonRoot = null;\r\n        if (document) {\r\n            amazonRoot = document.createElement('div');\r\n            amazonRoot.id = 'amazon-root';\r\n            document.body.appendChild(amazonRoot);\r\n        }\r\n        window.onAmazonLoginReady = () => {\r\n            amazon.Login.setClientId(this.clientId);\r\n        };\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                this.loadScript('amazon-login-sdk', 'https://assets.loginwithamazon.com/sdk/na/login1.js', () => {\r\n                    resolve();\r\n                }, amazonRoot);\r\n            }\r\n            catch (err) {\r\n                reject(err);\r\n            }\r\n        });\r\n    }\r\n    getLoginStatus() {\r\n        return new Promise((resolve, reject) => {\r\n            let token = this.retrieveToken();\r\n            if (token) {\r\n                amazon.Login.retrieveProfile(token, (response) => {\r\n                    if (response.success) {\r\n                        let user = new SocialUser();\r\n                        user.id = response.profile.CustomerId;\r\n                        user.name = response.profile.Name;\r\n                        user.email = response.profile.PrimaryEmail;\r\n                        user.response = response.profile;\r\n                        resolve(user);\r\n                    }\r\n                    else {\r\n                        reject(response.error);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                reject(`No user is currently logged in with ${AmazonLoginProvider.PROVIDER_ID}`);\r\n            }\r\n        });\r\n    }\r\n    signIn(signInOptions) {\r\n        const options = Object.assign(Object.assign({}, this.initOptions), signInOptions);\r\n        return new Promise((resolve, reject) => {\r\n            amazon.Login.authorize(options, (authResponse) => {\r\n                if (authResponse.error) {\r\n                    reject(authResponse.error);\r\n                }\r\n                else {\r\n                    amazon.Login.retrieveProfile(authResponse.access_token, (response) => {\r\n                        let user = new SocialUser();\r\n                        user.id = response.profile.CustomerId;\r\n                        user.name = response.profile.Name;\r\n                        user.email = response.profile.PrimaryEmail;\r\n                        user.authToken = authResponse.access_token;\r\n                        user.response = response.profile;\r\n                        this.persistToken(authResponse.access_token);\r\n                        resolve(user);\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    }\r\n    signOut(revoke) {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                amazon.Login.logout();\r\n                this.clearToken();\r\n                resolve();\r\n            }\r\n            catch (err) {\r\n                reject(err.message);\r\n            }\r\n        });\r\n    }\r\n    persistToken(token) {\r\n        localStorage.setItem(`${AmazonLoginProvider.PROVIDER_ID}_token`, token);\r\n    }\r\n    retrieveToken() {\r\n        return localStorage.getItem(`${AmazonLoginProvider.PROVIDER_ID}_token`);\r\n    }\r\n    clearToken() {\r\n        localStorage.removeItem(`${AmazonLoginProvider.PROVIDER_ID}_token`);\r\n    }\r\n}\r\nAmazonLoginProvider.PROVIDER_ID = 'AMAZON';\n\nclass VKLoginProvider extends BaseLoginProvider {\r\n    constructor(clientId, initOptions = {\r\n        fields: 'photo_max,contacts',\r\n        version: '5.124',\r\n    }) {\r\n        super();\r\n        this.clientId = clientId;\r\n        this.initOptions = initOptions;\r\n        this.VK_API_URL = '//vk.com/js/api/openapi.js';\r\n        this.VK_API_GET_USER = 'users.get';\r\n    }\r\n    initialize() {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                this.loadScript(VKLoginProvider.PROVIDER_ID, this.VK_API_URL, () => {\r\n                    VK.init({\r\n                        apiId: this.clientId,\r\n                    });\r\n                    resolve();\r\n                });\r\n            }\r\n            catch (err) {\r\n                reject(err);\r\n            }\r\n        });\r\n    }\r\n    getLoginStatus() {\r\n        return new Promise((resolve, reject) => this.getLoginStatusInternal(resolve, reject));\r\n    }\r\n    signIn() {\r\n        return new Promise((resolve, reject) => this.signInInternal(resolve, reject));\r\n    }\r\n    signOut() {\r\n        return new Promise((resolve, reject) => {\r\n            VK.Auth.logout((response) => {\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n    signInInternal(resolve, reject) {\r\n        VK.Auth.login((loginResponse) => {\r\n            if (loginResponse.status === 'connected') {\r\n                this.getUser(loginResponse.session.mid, loginResponse.session.sid, resolve);\r\n            }\r\n        });\r\n    }\r\n    getUser(userId, token, resolve) {\r\n        VK.Api.call(this.VK_API_GET_USER, {\r\n            user_id: userId,\r\n            fields: this.initOptions.fields,\r\n            v: this.initOptions.version,\r\n        }, (userResponse) => {\r\n            resolve(this.createUser(Object.assign({}, { token }, userResponse.response[0])));\r\n        });\r\n    }\r\n    getLoginStatusInternal(resolve, reject) {\r\n        VK.Auth.getLoginStatus((loginResponse) => {\r\n            if (loginResponse.status === 'connected') {\r\n                this.getUser(loginResponse.session.mid, loginResponse.session.sid, resolve);\r\n            }\r\n        });\r\n    }\r\n    createUser(response) {\r\n        const user = new SocialUser();\r\n        user.id = response.id;\r\n        user.name = `${response.first_name} ${response.last_name}`;\r\n        user.photoUrl = response.photo_max;\r\n        user.authToken = response.token;\r\n        return user;\r\n    }\r\n}\r\nVKLoginProvider.PROVIDER_ID = 'VK';\n\n/**\r\n * Protocol modes supported by MSAL.\r\n */\r\nvar ProtocolMode;\r\n(function (ProtocolMode) {\r\n    ProtocolMode[\"AAD\"] = \"AAD\";\r\n    ProtocolMode[\"OIDC\"] = \"OIDC\";\r\n})(ProtocolMode || (ProtocolMode = {}));\r\nconst COMMON_AUTHORITY = 'https://login.microsoftonline.com/common/';\r\n/**\r\n * Microsoft Authentication using MSAL v2: https://github.com/AzureAD/microsoft-authentication-library-for-js/tree/dev/lib/msal-browser\r\n */\r\nclass MicrosoftLoginProvider extends BaseLoginProvider {\r\n    constructor(clientId, initOptions) {\r\n        super();\r\n        this.clientId = clientId;\r\n        this.initOptions = {\r\n            redirect_uri: location.origin,\r\n            authority: COMMON_AUTHORITY,\r\n            scopes: ['openid', 'profile', 'User.Read'],\r\n            knownAuthorities: [],\r\n            protocolMode: ProtocolMode.AAD,\r\n            clientCapabilities: [],\r\n            cacheLocation: 'sessionStorage'\r\n        };\r\n        this.initOptions = Object.assign(Object.assign({}, this.initOptions), initOptions);\r\n    }\r\n    initialize() {\r\n        return new Promise((resolve, reject) => {\r\n            this.loadScript(MicrosoftLoginProvider.PROVIDER_ID, 'https://alcdn.msauth.net/browser/2.1.0/js/msal-browser.js', () => {\r\n                try {\r\n                    const config = {\r\n                        auth: {\r\n                            clientId: this.clientId,\r\n                            redirectUri: this.initOptions.redirect_uri,\r\n                            authority: this.initOptions.authority,\r\n                            knownAuthorities: this.initOptions.knownAuthorities,\r\n                            protocolMode: this.initOptions.protocolMode,\r\n                            clientCapabilities: this.initOptions.clientCapabilities\r\n                        },\r\n                        cache: !this.initOptions.cacheLocation ? null : {\r\n                            cacheLocation: this.initOptions.cacheLocation\r\n                        }\r\n                    };\r\n                    this._instance = new msal.PublicClientApplication(config);\r\n                    resolve();\r\n                }\r\n                catch (e) {\r\n                    reject(e);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    getSocialUser(loginResponse) {\r\n        return new Promise((resolve, reject) => {\r\n            //After login, use Microsoft Graph API to get user info\r\n            let meRequest = new XMLHttpRequest();\r\n            meRequest.onreadystatechange = () => {\r\n                if (meRequest.readyState == 4) {\r\n                    try {\r\n                        if (meRequest.status == 200) {\r\n                            let userInfo = JSON.parse(meRequest.responseText);\r\n                            let user = new SocialUser();\r\n                            user.provider = MicrosoftLoginProvider.PROVIDER_ID;\r\n                            user.id = loginResponse.idToken;\r\n                            user.name = loginResponse.idTokenClaims.name;\r\n                            user.email = loginResponse.account.username;\r\n                            user.idToken = loginResponse.idToken;\r\n                            user.response = loginResponse;\r\n                            user.firstName = userInfo.givenName;\r\n                            user.lastName = userInfo.surname;\r\n                            resolve(user);\r\n                        }\r\n                        else {\r\n                            reject(`Error retrieving user info: ${meRequest.status}`);\r\n                        }\r\n                    }\r\n                    catch (err) {\r\n                        reject(err);\r\n                    }\r\n                }\r\n            };\r\n            //Microsoft Graph ME Endpoint: https://docs.microsoft.com/en-us/graph/api/user-get?view=graph-rest-1.0&tabs=http\r\n            meRequest.open('GET', 'https://graph.microsoft.com/v1.0/me');\r\n            meRequest.setRequestHeader('Authorization', `Bearer ${loginResponse.accessToken}`);\r\n            try {\r\n                meRequest.send();\r\n            }\r\n            catch (err) {\r\n                reject(err);\r\n            }\r\n        });\r\n    }\r\n    getLoginStatus() {\r\n        return new Promise((resolve, reject) => {\r\n            const accounts = this._instance.getAllAccounts();\r\n            if (accounts.length > 0) {\r\n                try {\r\n                    this._instance.ssoSilent({\r\n                        scopes: this.initOptions.scopes,\r\n                        loginHint: accounts[0].username\r\n                    })\r\n                        .then(loginResponse => {\r\n                        this.getSocialUser(loginResponse)\r\n                            .then(user => resolve(user))\r\n                            .catch(err => reject(err));\r\n                    })\r\n                        .catch(err => reject(err));\r\n                }\r\n                catch (err) {\r\n                    reject(err);\r\n                }\r\n            }\r\n            else {\r\n                reject(`No user is currently logged in with ${MicrosoftLoginProvider.PROVIDER_ID}`);\r\n            }\r\n        });\r\n    }\r\n    signIn() {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                this._instance.loginPopup({\r\n                    scopes: this.initOptions.scopes\r\n                })\r\n                    .then(loginResponse => {\r\n                    this.getSocialUser(loginResponse)\r\n                        .then(user => resolve(user))\r\n                        .catch(err => reject(err));\r\n                })\r\n                    .catch(err => reject(err));\r\n            }\r\n            catch (err) {\r\n                reject(err);\r\n            }\r\n        });\r\n    }\r\n    signOut(revoke) {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                const accounts = this._instance.getAllAccounts();\r\n                //TODO: This redirects to a Microsoft page, then sends us back to redirect_uri... this doesn't seem to match other providers\r\n                //Open issues:\r\n                // https://github.com/abacritt/angularx-social-login/issues/306\r\n                // https://github.com/AzureAD/microsoft-authentication-library-for-js/issues/2563\r\n                this._instance.logout({\r\n                    account: accounts[0],\r\n                    postLogoutRedirectUri: this.initOptions.redirect_uri\r\n                })\r\n                    .then(() => {\r\n                    resolve();\r\n                })\r\n                    .catch(err => {\r\n                    reject(err);\r\n                });\r\n            }\r\n            catch (err) {\r\n                reject(err);\r\n            }\r\n        });\r\n    }\r\n}\r\nMicrosoftLoginProvider.PROVIDER_ID = 'MICROSOFT';\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { AmazonLoginProvider, BaseLoginProvider, DummyLoginProvider, FacebookLoginProvider, GoogleLoginProvider, MicrosoftLoginProvider, SocialAuthService, SocialLoginModule, SocialUser, VKLoginProvider };\n\n//# sourceMappingURL=angularx-social-login.js.map","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ForgetPasswordService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n  MailDeRecuperation(mail){\r\n    return this.http.get(environment.BACK_END.LOGIN.CONNEXION+\"mail-de-recuperation/\"+mail);\r\n  }\r\n  envoiMailByCode(code){\r\n    return this.http.get(environment.BACK_END.LOGIN.CONNEXION+\"envoi-code/\"+code);\r\n  }\r\n\r\n}\r\n","import { ForgetPasswordComponent } from '../forget-password/forget-password.component';\r\nimport { LoginService } from './../../shared/services/authentification';\r\nimport { InscriptionComponent } from './../inscription/inscription.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoginComponent } from './login.component';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { SocialLoginModule, SocialAuthServiceConfig } from 'angularx-social-login';\r\nimport {\r\n  GoogleLoginProvider,\r\n  FacebookLoginProvider\r\n} from 'angularx-social-login';\r\nexport const routes = [\r\n  { path: '', component: LoginComponent, pathMatch: 'full' },\r\n  { path: 'inscription', component: InscriptionComponent, pathMatch: 'full' },\r\n  { path: 'forgetpassword', component: ForgetPasswordComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent,InscriptionComponent, ForgetPasswordComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule, \r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    HttpClientModule,\r\n    SocialLoginModule\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: 'SocialAuthServiceConfig',\r\n      useValue: {\r\n        autoLogin: false,\r\n        providers: [\r\n          {\r\n            id: GoogleLoginProvider.PROVIDER_ID,\r\n            provider: new GoogleLoginProvider('743279905565-e1g2po029tupno9991csqsbb98qrqg8q.apps.googleusercontent.com')\r\n          },\r\n          {\r\n            id: FacebookLoginProvider.PROVIDER_ID,\r\n            provider: new FacebookLoginProvider('708823373162698')\r\n          }\r\n        ]\r\n      } as SocialAuthServiceConfig,\r\n      \r\n    },\r\n    LoginService\r\n  ],\r\n})\r\nexport class LoginModule { }\r\n","import { LoginService } from './../../shared/services/authentification';\r\nimport { Component, ErrorHandler, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup, FormBuilder, Validators} from '@angular/forms';\r\nimport { emailValidator } from '../../theme/utils/app-validators';\r\nimport { AppSettings } from '../../app.settings';\r\nimport { Settings } from '../../app.settings.model';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nimport { SocialAuthService } from \"angularx-social-login\";\r\nimport { SocialUser } from \"angularx-social-login\";\r\nimport { FacebookLoginProvider, GoogleLoginProvider } from \"angularx-social-login\";\r\nimport { TokenStorageService } from './_helper/localStorage';\r\nimport { SnackBarService } from 'src/app/shared/services/SnackBar';\r\nimport { RolesModel } from 'src/app/shared/models/Securite';\r\nimport { BrowserStack } from 'protractor/built/driverProviders';\r\nimport { ProjetStorageService } from 'src/app/shared/services/ProjetRenovation.localStorage';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  public form:FormGroup;\r\n  public settings: Settings;\r\n  user: SocialUser;\r\n  loggedIn: boolean;\r\n  hide = true;\r\n\r\n  constructor(private authService: SocialAuthService,public appSettings:AppSettings, private projetStorage: ProjetStorageService,\r\n    public fb: FormBuilder, public router:Router, private http: HttpClient,private snackBar: SnackBarService,\r\n     private loginS :LoginService,private token: TokenStorageService){\r\n      if(this.token.getToken() && this.loginS.checkIAmLogin()){\r\n        this.router.navigate([\"/\"]);\r\n      }\r\n    this.settings = this.appSettings.settings; \r\n    this.form = this.fb.group({\r\n      'email': [null, Validators.compose([Validators.required, emailValidator])],\r\n      'password': [null, Validators.compose([Validators.required, Validators.minLength(6)])] \r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.authService.authState.subscribe((user) => {\r\n      this.user = user;\r\n      this.hide=true;\r\n      this.form.get('password').setValue(user.id);\r\n      this.form.get('email').setValue(user.email);\r\n      this.onSubmit();\r\n    });\r\n  }\r\n\r\n  signInWithGoogle(): void {\r\n    this.authService.signIn(GoogleLoginProvider.PROVIDER_ID);\r\n  }\r\n\r\n  signInWithFB(): void {\r\n    this.authService.signIn(FacebookLoginProvider.PROVIDER_ID);\r\n  }\r\n\r\n  signOut(): void {\r\n    this.authService.signOut();\r\n  }\r\n\r\n\r\n  onSubmit(){\r\n    if(this.form.valid){\r\n      const user = {\r\n        username: this.form.get('email').value,\r\n        password: this.form.get('password').value\r\n      }\r\n      this.loginS.login(user).subscribe((data)=>{\r\n        console.log(data);\r\n        const roles: RolesModel[] = data.roles;\r\n        this.token.saveToken(data.accessToken);\r\n        this.token.setMenu(data.id)\r\n        this.token.saveUtilisateur(data.nom+\" \"+data.prenom)\r\n        this.projetStorage.saveGestionTache(0);\r\n        this.projetStorage.saveGestionUser(0);\r\n        this.projetStorage.setGestionAgenda(0);\r\n        this.projetStorage.setGestionDossier(0);\r\n        data.roles.forEach(element => {\r\n          \r\n          if(element == \"ROLE_GESTION_TACHE_RENOVATION\")\r\n          {\r\n            this.projetStorage.saveGestionTache(1);\r\n          }\r\n          else if(element == \"ROLE_GESTION_USER_RENOVATION\")\r\n          {\r\n            this.projetStorage.saveGestionUser(1);\r\n          }\r\n          else if(element == \"ROLE_GESTION_AGENDA_RENOVATION\")\r\n          {\r\n            this.projetStorage.setGestionAgenda(1);\r\n          }\r\n          else if(element ==\"ROLE_GESTION_DOSSIER\")\r\n          {\r\n            this.projetStorage.setGestionDossier(1);\r\n          }\r\n          else if(element==\"ROLE_GESTION_DEMARRAGE_PROJET_RENOVATION\")\r\n          {\r\n            this.projetStorage.saveGestionUser(1);\r\n            this.projetStorage.setGestionAgenda(1);\r\n            this.projetStorage.setGestionDossier(1);\r\n          }\r\n        });\r\n        this.snackBar.openSnackBar(\"Bienvenu \" + data.nom + \" \" + data.prenom, \"Connecter\", 5000);\r\n        this.router.navigate(['/']);\r\n        console.log(data);\r\n      },\r\n      (err: ErrorHandler) => {\r\n        console.log(err);\r\n        this.form.reset();\r\n          this.snackBar.openSnackBar(\"Email ou Password Incorrecte\", \"Connexion\", 3000);\r\n      })\r\n    }\r\n    else{\r\n      this.snackBar.openSnackBar(\"Remplire les Champs SVP\", \"Champs Vide\", 3000);\r\n    }\r\n  }\r\n}\r\n"]}