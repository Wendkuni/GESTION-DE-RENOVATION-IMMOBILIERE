{"version":3,"sources":["webpack:///src/app/features/profile/update-profile/update-client/update-client.component.html","webpack:///src/app/features/profile/profile.component.scss","webpack:///src/app/features/profile/profile-view/client-view/client-view.component.ts","webpack:///src/app/features/profile/update-profile/autre-personne/autre-personne.component.scss","webpack:///src/app/features/profile/profile-view/personnel-entreprise/personnel-entreprise.component.ts","webpack:///src/app/features/profile/profile-view/personnel-entreprise/personnel-entreprise.component.html","webpack:///src/app/features/profile/profile-view/artisan-view/artisan-view.component.html","webpack:///src/app/features/profile/profile-view/artisan-view/artisan-view.component.scss","webpack:///src/app/features/profile/profile-view/autre-user/autre-user.component.scss","webpack:///src/app/features/profile/update-profile/update-artisan/update-artisan.component.scss","webpack:///src/app/features/profile/update-profile/update-artisan/update-artisan.component.html","webpack:///src/app/features/profile/profile-view/artisan-view/artisan-view.component.ts","webpack:///src/app/features/profile/update-profile/update-artisan/update-artisan.component.ts","webpack:///src/app/features/profile/update-profile/update-personnel-entreprise/update-personnel-entreprise.component.scss","webpack:///src/app/features/profile/profile-view/client-view/client-view.component.scss","webpack:///src/app/features/profile/update-profile/update-client/update-client.component.scss","webpack:///src/app/features/profile/update-profile/update-personnel-entreprise/update-personnel-entreprise.component.ts","webpack:///src/app/features/profile/profile-view/personnel-entreprise/personnel-entreprise.component.scss","webpack:///src/app/features/profile/profile-view/autre-user/autre-user.component.ts","webpack:///src/app/features/profile/profile-view/autre-user/autre-user.component.html","webpack:///src/app/features/profile/update-profile/autre-personne/autre-personne.component.ts","webpack:///src/app/features/profile/update-profile/autre-personne/autre-personne.component.html","webpack:///src/app/features/profile/profile.component.html","webpack:///src/app/features/profile/update-profile/update-personnel-entreprise/update-personnel-entreprise.component.html","webpack:///src/app/features/profile/profile.component.ts","webpack:///src/app/features/profile/profile-view/client-view/client-view.component.html","webpack:///src/app/shared/models/utilisateeur.ts","webpack:///src/app/features/profile/profile.module.ts","webpack:///src/app/features/profile/update-profile/update-client/update-client.component.ts"],"names":["ClientViewComponent","dialog","dialogRef","open","width","data","client","disableClose","afterClosed","subscribe","result","location","reload","selector","template","PersonnelEntrepriseComponent","user","ArtisanViewComponent","UpdateArtisanComponent","UpdatePersonnelEntrepriseComponent","_fb","http","snackBar","files","isLoadingResults","ext","image","imgUrl","init","event","file","FileReader","readAsDataURL","target","verifiImage","type","match","onload","_event","base64","split","filess","FormData","openSnackBar","userForm","group","id","nom","required","prenom","extension","contact","civilite","provider","valid","get","setValue","put","BACK_END","LOGIN","PROFILE_UPDATE_USER","value","err","console","log","status","close","AutreUserComponent","UpdateAutrePersonneComponent","ProfileComponent","profileService","isLoad","getMe","Utilisateur","Client","UpdatePassword","AutresUser","PersonnelSociete","routes","path","component","pathMatch","ProfileModule","declarations","imports","forChild","providers","provide","useClass","multi","UpdateClientComponent","clientForm","societe","statusFamiliale","heureAContacter","adresse","PROFILE_UPDATE_CLIENT"],"mappings":"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","file":"features-profile-profile-module-es5.js","sourcesContent":["export default \"<div *ngIf=\\\"isLoadingResults\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"user-spinner\\\">   \\r\\n    <mat-spinner color=\\\"primary\\\"></mat-spinner>\\r\\n  </div>\\r\\n\\r\\n<div class=\\\"header\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" mat-dialog-title color=\\\"primary\\\">\\r\\n        <h2>Modifier Le Profile</h2>\\r\\n    </div>\\r\\n    <div mat-dialog-content *ngIf=\\\"!isLoadingResults\\\">\\r\\n        <form [formGroup]=\\\"clientForm\\\" enctype=\\\"multipart/form-data\\\" >\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n                <div *ngIf=\\\"image\\\">\\r\\n                    <img class=\\\"profile-img\\\" src=\\\"{{image}}\\\" alt=\\\"user-image\\\" width=\\\"100\\\" class=\\\"rounded mat-elevation-z6\\\">\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayout.lt-md=\\\"row wrap\\\">\\r\\n                <input mat-raised-button type=\\\"file\\\" (change)=\\\"onSelect($event)\\\" placeholder=\\\"Changer sa photo de profile\\\">\\r\\n            </div>\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start\\\" fxLayout.lt-md=\\\"row wrap\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                    <mat-label>Email</mat-label>\\r\\n                    <input matInput #input maxlength=\\\"10\\\" placeholder=\\\"Ex. Nougat\\\" [value]=\\\"client.email\\\" readonly>\\r\\n                    \\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                    <mat-label>Nom</mat-label>\\r\\n                    <input matInput #input placeholder=\\\"Ex. Nougat\\\" formControlName=\\\"nom\\\" required>\\r\\n                    <mat-error *ngIf=\\\"clientForm.get('nom').touched && clientForm.get('nom').invalid\\\" >\\r\\n                        <p>Champs obligatoire, cet champs doit pas etre vide</p>\\r\\n                      </mat-error> \\r\\n                  </mat-form-field>\\r\\n                  <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                    <mat-label>Prenom</mat-label>\\r\\n                    <input matInput #input placeholder=\\\"Ex. Nougat\\\" formControlName=\\\"prenom\\\" required>\\r\\n                    <mat-error *ngIf=\\\"clientForm.get('prenom').touched && clientForm.get('prenom').invalid\\\">\\r\\n                        <p>Champs obligatoire, cet champs doit pas etre vide</p>\\r\\n                      </mat-error> \\r\\n                  </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                    <mat-label>Sociéte</mat-label>\\r\\n                    <input matInput #input placeholder=\\\"Ex. Nougat\\\" formControlName=\\\"societe\\\">\\r\\n                    \\r\\n                </mat-form-field>\\r\\n                <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                    <mat-label>Contact</mat-label>\\r\\n                    <span matPrefix>+33 &nbsp;</span>\\r\\n                    <input matInput #input type=\\\"number\\\" placeholder=\\\"Ex. Nougat\\\" formControlName=\\\"contact\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n                  <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                        <mat-label>Status Familiale</mat-label>\\r\\n                        <mat-select disableRipple formControlName=\\\"statusFamiliale\\\" required>\\r\\n                            <mat-option >--SELECT--</mat-option>\\r\\n                            <mat-option value=\\\"Mr\\\">Mr</mat-option>\\r\\n                            <mat-option value=\\\"Mme\\\">Mme</mat-option>\\r\\n                            <mat-option value=\\\"Mesdamoiselle\\\">Mesdamoiselle</mat-option>\\r\\n                        </mat-select>\\r\\n                   </mat-form-field>\\r\\n                  <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                        <mat-label>Heure à Joindre</mat-label>\\r\\n                        <mat-select formControlName=\\\"heureAContacter\\\">\\r\\n                          <mat-option >Je sais pas</mat-option>\\r\\n                          <mat-option value=\\\"Tout Moment\\\">Tout Moment</mat-option>\\r\\n                          <mat-option value=\\\"MATIN\\\">Matin</mat-option>\\r\\n                          <mat-option value=\\\"APRES MIDI\\\">Apres Midi</mat-option>\\r\\n                          <mat-option value=\\\"FIN DE JOURNEE\\\">Fin de Journée</mat-option>\\r\\n                        </mat-select>\\r\\n                  </mat-form-field>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"100\\\" [fxFlex.xl]=\\\"100\\\">\\r\\n                      <mat-label>Adresse du client</mat-label>\\r\\n                      <input matInput formControlName=\\\"adresse\\\">\\r\\n                </mat-form-field>\\r\\n          </div>\\r\\n        </form>\\r\\n    </div>\\r\\n    <div mat-dialog-actions align=\\\"end\\\" *ngIf=\\\"!isLoadingResults\\\">\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n            <button mat-raised-button color=\\\"warn\\\" [mat-dialog-close]=\\\"clientForm.value\\\" >Annuler</button>\\r\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onSubmit()\\\" >Enregistrer</button>\\r\\n        </div>\\r\\n    </div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9maWxlLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Client } from 'src/app/shared/models/utilisateeur';\r\nimport { UpdateClientComponent } from '../../update-profile/update-client/update-client.component';\r\n\r\n@Component({\r\n  selector: 'app-client-view',\r\n  templateUrl: './client-view.component.html',\r\n  styleUrls: ['./client-view.component.scss']\r\n})\r\nexport class ClientViewComponent implements OnInit {\r\n\r\n  @Input('client')\r\n  client: Client ;\r\n  constructor(public dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n    //console.log(this.client);\r\n  }\r\n\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(UpdateClientComponent, {\r\n      width: '600px',\r\n      data: {client: this.client},\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result ==null)\r\n      {\r\n        location.reload();\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhdXRyZS1wZXJzb25uZS5jb21wb25lbnQuc2NzcyJ9 */\";","import { UpdatePersonnelEntrepriseComponent } from './../../update-profile/update-personnel-entreprise/update-personnel-entreprise.component';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { PersonnelSociete } from 'src/app/shared/models/utilisateeur';\r\n\r\n@Component({\r\n  selector: 'app-personnel-entreprise',\r\n  templateUrl: './personnel-entreprise.component.html',\r\n  styleUrls: ['./personnel-entreprise.component.scss']\r\n})\r\nexport class PersonnelEntrepriseComponent implements OnInit {\r\n\r\n  @Input('user')\r\n  user: PersonnelSociete ;\r\n  constructor(public dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n    //console.log(this.user);\r\n  }\r\n\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(UpdatePersonnelEntrepriseComponent, {\r\n      width: '600px',\r\n      data: {user: this.user},\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result ==null)\r\n      {\r\n        location.reload();\r\n      }\r\n    });\r\n  }\r\n}\r\n","export default \"<div class=\\\"toolbar-dropdown-menu user-menu\\\">\\r\\n    <!--<span (mouseleave)=\\\"userMenuTrigger.closeMenu()\\\">-->\\r\\n        <mat-toolbar color=\\\"primary\\\">\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\" >\\r\\n                <img *ngIf=\\\"user.imgUrl\\\" class=\\\"profile-img\\\" src=\\\"{{user.imgUrl}}\\\" alt=\\\"user-image\\\" width=\\\"100px\\\" class=\\\"rounded\\\">\\r\\n                <p><b>{{user.email}}</b></p>\\r\\n            </div>  \\r\\n        </mat-toolbar>\\r\\n        <mat-card class=\\\"information\\\">\\r\\n            <p fxLayout=\\\"row\\\"  class=\\\"infor\\\">\\r\\n                <mat-icon>accessibility</mat-icon>  \\r\\n                <span> <strong><i>Civilité :</i> {{user.civilite}}</strong></span>\\r\\n            </p>\\r\\n            <p fxLayout=\\\"row\\\"  class=\\\"infor\\\">\\r\\n                <mat-icon>perm_identity</mat-icon>  \\r\\n                <span> <strong><i>Nom :</i> {{user.nom}}</strong></span>\\r\\n            </p>\\r\\n            <p fxLayout=\\\"row\\\" class=\\\"infor\\\">\\r\\n                <mat-icon>face</mat-icon>  \\r\\n                <span> <strong><i>Prenom : </i> {{user.prenom}}</strong></span>\\r\\n            </p>\\r\\n            <p fxLayout=\\\"row\\\" class=\\\"infor\\\">\\r\\n                <mat-icon> call</mat-icon>  \\r\\n                <span> <strong><i>Contact : </i> {{user.contact}}</strong></span>\\r\\n            </p>\\r\\n            <div class=\\\"divider\\\"></div>\\r\\n            <mat-card-actions align=\\\"end\\\" class=\\\"action-modif\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\" (click)=\\\"openDialog()\\\" >Modifier</button>\\r\\n            </mat-card-actions>\\r\\n\\r\\n        </mat-card>\\r\\n    <!--</span>-->\\r\\n</div>\\r\\n\\r\\n\\r\\n\";","export default \"<p>artisan-view works!</p>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcnRpc2FuLXZpZXcuY29tcG9uZW50LnNjc3MifQ== */\";","export default \".user-menu .mat-toolbar, .user-menu .mat-toolbar-row {\\n  height: 100px !important;\\n}\\n.user-menu .user-info {\\n  width: 230px;\\n}\\n.user-menu .user-info p {\\n  font-size: 16px;\\n  line-height: 22px;\\n  text-align: center;\\n}\\n.user-menu .user-info p .profile-img {\\n  padding-right: 10px;\\n}\\n.user-menu .mat-menu-item {\\n  height: 36px;\\n  line-height: 36px;\\n}\\n.information {\\n  width: 100%;\\n}\\n.information .infor {\\n  font-size: 15px;\\n  padding: 10px;\\n}\\n.information .infor mat-icon {\\n  margin-right: 10px;\\n}\\n.action-modif {\\n  padding: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXGF1dHJlLXVzZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0k7RUFDSSx3QkFBQTtBQUFSO0FBRUk7RUFDSSxZQUFBO0FBQVI7QUFDUTtFQUNJLGVBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0FBQ1o7QUFBWTtFQUNJLG1CQUFBO0FBRWhCO0FBRUk7RUFDSSxZQUFBO0VBQ0EsaUJBQUE7QUFBUjtBQUlBO0VBQ0ksV0FBQTtBQURKO0FBRUk7RUFDSSxlQUFBO0VBQ0EsYUFBQTtBQUFSO0FBQ1E7RUFDSSxrQkFBQTtBQUNaO0FBSUE7RUFDSSxhQUFBO0FBREoiLCJmaWxlIjoiYXV0cmUtdXNlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi51c2VyLW1lbnV7XHJcbiAgICAubWF0LXRvb2xiYXIsIC5tYXQtdG9vbGJhci1yb3d7XHJcbiAgICAgICAgaGVpZ2h0OiAxMDBweCAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG4gICAgLnVzZXItaW5mb3tcclxuICAgICAgICB3aWR0aDogMjMwcHg7XHJcbiAgICAgICAgcHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMjJweDtcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgICAucHJvZmlsZS1pbWd7XHJcbiAgICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAxMHB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLm1hdC1tZW51LWl0ZW17XHJcbiAgICAgICAgaGVpZ2h0OiAzNnB4O1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAzNnB4O1xyXG4gICAgfVxyXG59XHJcblxyXG4uaW5mb3JtYXRpb257XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIC5pbmZvcntcclxuICAgICAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgICAgICAgcGFkZGluZzogMTBweDtcclxuICAgICAgICBtYXQtaWNvbntcclxuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuLmFjdGlvbi1tb2RpZntcclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbn1cclxuIl19 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ1cGRhdGUtYXJ0aXNhbi5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<p>update-artisan works!</p>\\r\\n\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-artisan-view',\r\n  templateUrl: './artisan-view.component.html',\r\n  styleUrls: ['./artisan-view.component.scss']\r\n})\r\nexport class ArtisanViewComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-update-artisan',\r\n  templateUrl: './update-artisan.component.html',\r\n  styleUrls: ['./update-artisan.component.scss']\r\n})\r\nexport class UpdateArtisanComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ1cGRhdGUtcGVyc29ubmVsLWVudHJlcHJpc2UuY29tcG9uZW50LnNjc3MifQ== */\";","export default \".user-menu .mat-toolbar, .user-menu .mat-toolbar-row {\\n  height: 100px !important;\\n}\\n.user-menu .user-info {\\n  width: 230px;\\n}\\n.user-menu .user-info p {\\n  font-size: 16px;\\n  line-height: 22px;\\n  text-align: center;\\n}\\n.user-menu .user-info p .profile-img {\\n  padding-right: 10px;\\n}\\n.user-menu .mat-menu-item {\\n  height: 36px;\\n  line-height: 36px;\\n}\\n.information {\\n  width: 100%;\\n}\\n.information .infor {\\n  font-size: 15px;\\n  padding: 10px;\\n}\\n.information .infor mat-icon {\\n  margin-right: 10px;\\n}\\n.action-modif {\\n  padding: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXGNsaWVudC12aWV3LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNJO0VBQ0ksd0JBQUE7QUFBUjtBQUVJO0VBQ0ksWUFBQTtBQUFSO0FBQ1E7RUFDSSxlQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtBQUNaO0FBQVk7RUFDSSxtQkFBQTtBQUVoQjtBQUVJO0VBQ0ksWUFBQTtFQUNBLGlCQUFBO0FBQVI7QUFJQTtFQUNJLFdBQUE7QUFESjtBQUVJO0VBQ0ksZUFBQTtFQUNBLGFBQUE7QUFBUjtBQUNRO0VBQ0ksa0JBQUE7QUFDWjtBQUlBO0VBQ0ksYUFBQTtBQURKIiwiZmlsZSI6ImNsaWVudC12aWV3LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnVzZXItbWVudXtcclxuICAgIC5tYXQtdG9vbGJhciwgLm1hdC10b29sYmFyLXJvd3tcclxuICAgICAgICBoZWlnaHQ6IDEwMHB4ICFpbXBvcnRhbnQ7XHJcbiAgICB9XHJcbiAgICAudXNlci1pbmZve1xyXG4gICAgICAgIHdpZHRoOiAyMzBweDtcclxuICAgICAgICBwe1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAyMnB4O1xyXG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgIC5wcm9maWxlLWltZ3tcclxuICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAubWF0LW1lbnUtaXRlbXtcclxuICAgICAgICBoZWlnaHQ6IDM2cHg7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDM2cHg7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5pbmZvcm1hdGlvbntcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgLmluZm9ye1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTVweDtcclxuICAgICAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgICAgIG1hdC1pY29ue1xyXG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4uYWN0aW9uLW1vZGlme1xyXG4gICAgcGFkZGluZzogMjBweDtcclxufVxyXG4iXX0= */\";","export default \".header {\\n  color: rgba(28, 28, 29, 0.808);\\n  font-weight: bold;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXHVwZGF0ZS1jbGllbnQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSw4QkFBQTtFQUNBLGlCQUFBO0FBQ0oiLCJmaWxlIjoidXBkYXRlLWNsaWVudC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5oZWFkZXJ7XHJcbiAgICBjb2xvcjogcmdiYSgyOCwgMjgsIDI5LCAwLjgwOCk7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxufSJdfQ== */\";","import { environment } from './../../../../../environments/environment';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { SnackBarService } from 'src/app/shared/services/SnackBar';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { AutresUser } from 'src/app/shared/models/utilisateeur';\r\n\r\n@Component({\r\n  selector: 'app-update-personnel-entreprise',\r\n  templateUrl: './update-personnel-entreprise.component.html',\r\n  styleUrls: ['./update-personnel-entreprise.component.scss']\r\n})\r\nexport class UpdatePersonnelEntrepriseComponent implements OnInit {\r\n  files =[];\r\n  image: any;\r\n  userForm : FormGroup;\r\n  user: AutresUser;\r\n  isLoadingResults= false;\r\n  ext = \"jpeg\";\r\n  constructor(public dialogRef: MatDialogRef<UpdatePersonnelEntrepriseComponent>,\r\n    public dialog: MatDialog, @Inject(MAT_DIALOG_DATA) public data: any,\r\n              private _fb: FormBuilder, private http: HttpClient,\r\n              private snackBar : SnackBarService) { }\r\n\r\n  ngOnInit(): void {\r\n    //console.log(this.data.user.imgUrl);\r\n    this.image = this.data.user.imgUrl;\r\n    this.user = this.data.user;\r\n    this.init();\r\n  }\r\n  onSelect(event) {\r\n   var file = new FileReader();\r\n   file.readAsDataURL(event.target.files[0]);\r\n  // console.log(event.target.files[0]);\r\n\r\n   var verifiImage = event.target.files[0].type;\r\n   if(verifiImage.match(/image\\/*/))\r\n   {\r\n      file.onload = (_event) => {\r\n  \r\n        this.image = file.result;\r\n        const base64 = this.image.split(\",\")[1];\r\n        const filess = new FormData();\r\n        this.ext = event.target.files[0].type.split(\"/\")[1];\r\n        return;\r\n        //console.log(this.image);\r\n      }\r\n   }\r\n   else{\r\n    this.snackBar.openSnackBar(\"Selectionner une image\", \"ERROR Image\",3000);\r\n   }\r\n   \r\n  }\r\n\r\n    public init(){\r\n      this.userForm = this._fb.group({\r\n        id : [this.user.id],\r\n        nom : [this.user.nom, Validators.required],\r\n        prenom: [this.user.prenom, Validators.required],\r\n        extension: null,\r\n        contact: this.user.contact,\r\n        imgUrl : this.user.imgUrl,\r\n        civilite: this.user.civilite,\r\n        provider: this.user.provider\r\n      })\r\n    }\r\n\r\n\r\n    onSubmit()\r\n    {\r\n      if(this.userForm.valid)\r\n      {\r\n        this.isLoadingResults= true;\r\n        if(this.image !=null){\r\n          this.userForm.get(\"imgUrl\").setValue(this.image.split(\",\")[1]);\r\n          this.userForm.get(\"extension\").setValue(this.ext);\r\n        }\r\n      //console.log(this.userForm.value);\r\n      this.http.put(environment.BACK_END.LOGIN.PROFILE_UPDATE_USER+\"\"+this.user.id, this.userForm.value).subscribe(\r\n        data =>\r\n        {\r\n          //console.log(data);\r\n          this.isLoadingResults= false;\r\n        },\r\n        (err : HttpErrorResponse) =>\r\n        {\r\n            console.log(err);\r\n            if(err.status <300)\r\n            {\r\n              this.isLoadingResults= false;\r\n              this.snackBar.openSnackBar(\"Profile Modifier\", \"Success\",3000);\r\n              this.dialogRef.close();\r\n            }\r\n            else{\r\n                this.snackBar.openSnackBar(\"User Not Modifier\", \"ERROR\",3000);\r\n                this.isLoadingResults= false;\r\n            }\r\n            \r\n        }\r\n      )\r\n      }\r\n      else\r\n      {\r\n        this.snackBar.openSnackBar(\"Remplire les champs SVP\", \"Champs Vide\",3000);\r\n        this.isLoadingResults= false;\r\n      }\r\n    }\r\n}\r\n","export default \".user-menu .mat-toolbar, .user-menu .mat-toolbar-row {\\n  height: 100px !important;\\n}\\n.user-menu .user-info {\\n  width: 230px;\\n}\\n.user-menu .user-info p {\\n  font-size: 16px;\\n  line-height: 22px;\\n  text-align: center;\\n}\\n.user-menu .user-info p .profile-img {\\n  padding-right: 10px;\\n}\\n.user-menu .mat-menu-item {\\n  height: 36px;\\n  line-height: 36px;\\n}\\n.information {\\n  width: 100%;\\n}\\n.information .infor {\\n  font-size: 15px;\\n  padding: 10px;\\n}\\n.information .infor mat-icon {\\n  margin-right: 10px;\\n}\\n.action-modif {\\n  padding: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXHBlcnNvbm5lbC1lbnRyZXByaXNlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNJO0VBQ0ksd0JBQUE7QUFBUjtBQUVJO0VBQ0ksWUFBQTtBQUFSO0FBQ1E7RUFDSSxlQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtBQUNaO0FBQVk7RUFDSSxtQkFBQTtBQUVoQjtBQUVJO0VBQ0ksWUFBQTtFQUNBLGlCQUFBO0FBQVI7QUFJQTtFQUNJLFdBQUE7QUFESjtBQUVJO0VBQ0ksZUFBQTtFQUNBLGFBQUE7QUFBUjtBQUNRO0VBQ0ksa0JBQUE7QUFDWjtBQUlBO0VBQ0ksYUFBQTtBQURKIiwiZmlsZSI6InBlcnNvbm5lbC1lbnRyZXByaXNlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnVzZXItbWVudXtcclxuICAgIC5tYXQtdG9vbGJhciwgLm1hdC10b29sYmFyLXJvd3tcclxuICAgICAgICBoZWlnaHQ6IDEwMHB4ICFpbXBvcnRhbnQ7XHJcbiAgICB9XHJcbiAgICAudXNlci1pbmZve1xyXG4gICAgICAgIHdpZHRoOiAyMzBweDtcclxuICAgICAgICBwe1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAyMnB4O1xyXG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgIC5wcm9maWxlLWltZ3tcclxuICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAubWF0LW1lbnUtaXRlbXtcclxuICAgICAgICBoZWlnaHQ6IDM2cHg7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDM2cHg7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5pbmZvcm1hdGlvbntcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgLmluZm9ye1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTVweDtcclxuICAgICAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgICAgIG1hdC1pY29ue1xyXG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4uYWN0aW9uLW1vZGlme1xyXG4gICAgcGFkZGluZzogMjBweDtcclxufVxyXG4iXX0= */\";","import { Component, Input, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AutresUser } from 'src/app/shared/models/utilisateeur';\r\nimport { UpdateAutrePersonneComponent } from '../../update-profile/autre-personne/autre-personne.component';\r\n\r\n@Component({\r\n  selector: 'app-autre-user',\r\n  templateUrl: './autre-user.component.html',\r\n  styleUrls: ['./autre-user.component.scss']\r\n})\r\nexport class AutreUserComponent implements OnInit {\r\n\r\n  @Input('user')\r\n  user: AutresUser ;\r\n  constructor(public dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n    //console.log(this.user);\r\n  }\r\n\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(UpdateAutrePersonneComponent, {\r\n      width: '600px',\r\n      data: {user: this.user},\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result ==null)\r\n      {\r\n        location.reload();\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"<div class=\\\"toolbar-dropdown-menu user-menu\\\">\\r\\n    <!--<span (mouseleave)=\\\"userMenuTrigger.closeMenu()\\\">-->\\r\\n        <mat-toolbar color=\\\"primary\\\">\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\" >\\r\\n                <img *ngIf=\\\"user.imgUrl\\\" class=\\\"profile-img\\\" src=\\\"{{user.imgUrl}}\\\" alt=\\\"user-image\\\" width=\\\"100px\\\" class=\\\"rounded\\\">\\r\\n                <p><b>{{user.email}}</b></p>\\r\\n            </div>  \\r\\n        </mat-toolbar>\\r\\n        <mat-card class=\\\"information\\\">\\r\\n            <p fxLayout=\\\"row\\\"  class=\\\"infor\\\">\\r\\n                <mat-icon>accessibility</mat-icon>  \\r\\n                <span> <strong><i>Civilité :</i> {{user.civilite}}</strong></span>\\r\\n            </p>\\r\\n            <p fxLayout=\\\"row\\\"  class=\\\"infor\\\">\\r\\n                <mat-icon>perm_identity</mat-icon>  \\r\\n                <span> <strong><i>Nom :</i> {{user.nom}}</strong></span>\\r\\n            </p>\\r\\n            <p fxLayout=\\\"row\\\" class=\\\"infor\\\">\\r\\n                <mat-icon>face</mat-icon>  \\r\\n                <span> <strong><i>Prenom : </i> {{user.prenom}}</strong></span>\\r\\n            </p>\\r\\n            <p fxLayout=\\\"row\\\" class=\\\"infor\\\">\\r\\n                <mat-icon> business</mat-icon>  \\r\\n                <span> <strong><i>Sociéte : </i> {{user.societe.nomSociete}}</strong></span>\\r\\n            </p>\\r\\n            <p fxLayout=\\\"row\\\" class=\\\"infor\\\">\\r\\n                <mat-icon> call</mat-icon>  \\r\\n                <span> <strong><i>Contact : </i> {{user.contact}}</strong></span>\\r\\n            </p>\\r\\n            <div class=\\\"divider\\\"></div>\\r\\n            <mat-card-actions align=\\\"end\\\" class=\\\"action-modif\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\" (click)=\\\"openDialog()\\\" >Modifier</button>\\r\\n            </mat-card-actions>\\r\\n\\r\\n        </mat-card>\\r\\n    <!--</span>-->\\r\\n</div>\\r\\n\\r\\n\\r\\n\";","import { HttpClient } from '@angular/common/http';\r\nimport { AutresUser } from './../../../../shared/models/utilisateeur';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { SnackBarService } from 'src/app/shared/services/SnackBar';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-autre-personne',\r\n  templateUrl: './autre-personne.component.html',\r\n  styleUrls: ['./autre-personne.component.scss']\r\n})\r\nexport class UpdateAutrePersonneComponent implements OnInit {\r\n  isLoadingResults= false;\r\n  files =[];\r\n  image: any;\r\n  userForm : FormGroup;\r\n  user: AutresUser;\r\n  ext = \"jpeg\";\r\n  constructor(public dialogRef: MatDialogRef<UpdateAutrePersonneComponent>,\r\n    public dialog: MatDialog, @Inject(MAT_DIALOG_DATA) public data: any,\r\n              private _fb: FormBuilder, private http: HttpClient,\r\n              private snackBar : SnackBarService) { }\r\n\r\n  ngOnInit(): void {\r\n    //console.log(this.data.user.imgUrl);\r\n    this.image = this.data.user.imgUrl;\r\n    this.user = this.data.user;\r\n    this.init();\r\n  }\r\n  onSelect(event) {\r\n   var file = new FileReader();\r\n   file.readAsDataURL(event.target.files[0]);\r\n  // console.log(event.target.files[0]);\r\n\r\n   var verifiImage = event.target.files[0].type;\r\n   if(verifiImage.match(/image\\/*/))\r\n   {\r\n      file.onload = (_event) => {\r\n  \r\n        this.image = file.result;\r\n        const base64 = this.image.split(\",\")[1];\r\n        const filess = new FormData();\r\n        this.ext = event.target.files[0].type.split(\"/\")[1];\r\n        return;\r\n        //console.log(this.image);\r\n      }\r\n   }\r\n   else{\r\n    this.snackBar.openSnackBar(\"Selectionner une image\", \"ERROR Image\",3000);\r\n   }\r\n   \r\n  }\r\n\r\n    public init(){\r\n      this.userForm = this._fb.group({\r\n        id : [this.user.id],\r\n        nom : [this.user.nom, Validators.required],\r\n        prenom: [this.user.prenom, Validators.required],\r\n        extension: null,\r\n        contact: this.user.contact,\r\n        imgUrl : this.user.imgUrl,\r\n        civilite: this.user.civilite,\r\n        provider: this.user.provider\r\n      })\r\n    }\r\n\r\n\r\n    onSubmit()\r\n    {\r\n      if(this.userForm.valid)\r\n      {\r\n        this.isLoadingResults= true;\r\n        if(this.image !=null){\r\n          this.userForm.get(\"imgUrl\").setValue(this.image.split(\",\")[1]);\r\n          this.userForm.get(\"extension\").setValue(this.ext);\r\n        }\r\n      console.log(this.userForm.value);\r\n      this.http.put(environment.BACK_END.LOGIN.PROFILE_UPDATE_USER+\"\"+this.user.id, this.userForm.value).subscribe(\r\n        data =>\r\n        {\r\n          //console.log(data);\r\n        },\r\n        (err : HttpErrorResponse) =>\r\n        {\r\n            console.log(err);\r\n            if(err.status <300)\r\n            {\r\n              this.snackBar.openSnackBar(\"Profile Modifier\", \"Success\",3000);\r\n              this.dialogRef.close();\r\n            }\r\n            else{\r\n              this.isLoadingResults= false;\r\n                this.snackBar.openSnackBar(\"User Not Modifier\", \"ERROR\",3000);\r\n            }\r\n            \r\n        }\r\n      )\r\n      }\r\n      else\r\n      {\r\n        this.snackBar.openSnackBar(\"Remplire les champs SVP\", \"Champs Vide\",3000);\r\n      }\r\n    }\r\n}\r\n","export default \"<div *ngIf=\\\"isLoadingResults\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"user-spinner\\\">   \\r\\n    <mat-spinner color=\\\"primary\\\"></mat-spinner>\\r\\n  </div>\\r\\n\\r\\n<div class=\\\"header\\\"  fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" mat-dialog-title color=\\\"primary\\\">\\r\\n    <h2>Modifier Le Profile</h2>\\r\\n</div>\\r\\n<div mat-dialog-content *ngIf=\\\"!isLoadingResults\\\">\\r\\n    <form [formGroup]=\\\"userForm\\\" enctype=\\\"multipart/form-data\\\" >\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n            <div *ngIf=\\\"image\\\">\\r\\n                <img class=\\\"profile-img\\\" src=\\\"{{image}}\\\" alt=\\\"user-image\\\" width=\\\"100\\\" class=\\\"rounded mat-elevation-z6\\\">\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayout.lt-md=\\\"row wrap\\\">\\r\\n            <input mat-raised-button type=\\\"file\\\" (change)=\\\"onSelect($event)\\\" placeholder=\\\"Changer sa photo de profile\\\">\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start\\\" fxLayout.lt-md=\\\"row wrap\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                <mat-label>Email</mat-label>\\r\\n                <input matInput #input maxlength=\\\"10\\\"  [value]=\\\"user.email\\\" readonly>\\r\\n                \\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                <mat-label>Nom</mat-label>\\r\\n                <input matInput #input  formControlName=\\\"nom\\\" required>\\r\\n                <mat-error *ngIf=\\\"userForm.get('nom').touched && userForm.get('nom').invalid\\\" >\\r\\n                    <p>Champs obligatoire, cet champs doit pas etre vide</p>\\r\\n                  </mat-error> \\r\\n              </mat-form-field>\\r\\n              <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                <mat-label>Prenom</mat-label>\\r\\n                <input matInput #input  formControlName=\\\"prenom\\\" required>\\r\\n                <mat-error *ngIf=\\\"userForm.get('prenom').touched && userForm.get('prenom').invalid\\\">\\r\\n                    <p>Champs obligatoire, cet champs doit pas etre vide</p>\\r\\n                  </mat-error> \\r\\n              </mat-form-field>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                <mat-label>Contact</mat-label>\\r\\n                <span matPrefix>+33 &nbsp;</span>\\r\\n                <input matInput #input type=\\\"number\\\"  formControlName=\\\"contact\\\">\\r\\n            </mat-form-field>\\r\\n              <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                    <mat-label>Civilité</mat-label>\\r\\n                    <mat-select disableRipple formControlName=\\\"civilite\\\" required>\\r\\n                        <mat-option >--SELECT--</mat-option>\\r\\n                        <mat-option value=\\\"Mr\\\">Mr</mat-option>\\r\\n                        <mat-option value=\\\"Mme\\\">Mme</mat-option>\\r\\n                        <mat-option value=\\\"Mesdamoiselle\\\">Mesdamoiselle</mat-option>\\r\\n                    </mat-select>\\r\\n               </mat-form-field>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n            \\r\\n      </div>\\r\\n    </form>\\r\\n</div>\\r\\n<div mat-dialog-actions align=\\\"end\\\" *ngIf=\\\"!isLoadingResults\\\">\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n        <button mat-raised-button color=\\\"warn\\\" [mat-dialog-close]=\\\"userForm.value\\\" >Annuler</button>\\r\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onSubmit()\\\" >Enregistrer</button>\\r\\n    </div>\\r\\n</div>\";","export default \"<span *ngIf=\\\"!isLoad\\\">\\r\\n    <span *ngIf=\\\"Utilisateur.profile.libelle =='CLIENT'\\\" >\\r\\n        <app-client-view [client]=\\\"Utilisateur\\\"></app-client-view>\\r\\n    </span>\\r\\n    <span *ngIf=\\\"Utilisateur.societe && Utilisateur.civilite\\\">\\r\\n        <app-autre-user [user]=\\\"Utilisateur\\\"></app-autre-user>\\r\\n    </span>\\r\\n    <span *ngIf=\\\" !Utilisateur.societe && Utilisateur.civilite\\\">\\r\\n        <app-personnel-entreprise [user]=\\\"Utilisateur\\\"></app-personnel-entreprise>\\r\\n    </span>\\r\\n\\r\\n    \\r\\n</span>\\r\\n\\r\\n<span fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" *ngIf=\\\"isLoad\\\">\\r\\n    <div id=\\\"app-spinner\\\" [class.hide]=\\\"true\\\"> \\r\\n        <mat-spinner color=\\\"primary\\\"></mat-spinner>  \\r\\n        <h4>Chargement...</h4>\\r\\n    </div>\\r\\n</span>\\r\\n\\r\\n\";","export default \"<div *ngIf=\\\"isLoadingResults\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"user-spinner\\\">   \\r\\n    <mat-spinner color=\\\"primary\\\"></mat-spinner>\\r\\n  </div>\\r\\n\\r\\n<div class=\\\"header\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" mat-dialog-title color=\\\"primary\\\">\\r\\n    <h2>Modifier Le Profile</h2>\\r\\n</div>\\r\\n<div mat-dialog-content *ngIf=\\\"!isLoadingResults\\\">\\r\\n    <form [formGroup]=\\\"userForm\\\" enctype=\\\"multipart/form-data\\\" >\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n            <div *ngIf=\\\"image\\\">\\r\\n                <img class=\\\"profile-img\\\" src=\\\"{{image}}\\\" alt=\\\"user-image\\\" width=\\\"100\\\" class=\\\"rounded mat-elevation-z6\\\">\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayout.lt-md=\\\"row wrap\\\">\\r\\n            <input mat-raised-button type=\\\"file\\\" (change)=\\\"onSelect($event)\\\" placeholder=\\\"Changer sa photo de profile\\\">\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start\\\" fxLayout.lt-md=\\\"row wrap\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                <mat-label>Email</mat-label>\\r\\n                <input matInput #input maxlength=\\\"10\\\"  [value]=\\\"user.email\\\" readonly>\\r\\n                \\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                <mat-label>Nom</mat-label>\\r\\n                <input matInput #input  formControlName=\\\"nom\\\" required>\\r\\n                <mat-error *ngIf=\\\"userForm.get('nom').touched && userForm.get('nom').invalid\\\" >\\r\\n                    <p>Champs obligatoire, cet champs doit pas etre vide</p>\\r\\n                  </mat-error> \\r\\n              </mat-form-field>\\r\\n              <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                <mat-label>Prenom</mat-label>\\r\\n                <input matInput #input  formControlName=\\\"prenom\\\" required>\\r\\n                <mat-error *ngIf=\\\"userForm.get('prenom').touched && userForm.get('prenom').invalid\\\">\\r\\n                    <p>Champs obligatoire, cet champs doit pas etre vide</p>\\r\\n                  </mat-error> \\r\\n              </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                <mat-label>Contact</mat-label>\\r\\n                <span matPrefix>+33 &nbsp;</span>\\r\\n                <input matInput #input type=\\\"number\\\"  formControlName=\\\"contact\\\">\\r\\n            </mat-form-field>\\r\\n              <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                    <mat-label>Civilité</mat-label>\\r\\n                    <mat-select disableRipple formControlName=\\\"civilite\\\" required>\\r\\n                        <mat-option >--SELECT--</mat-option>\\r\\n                        <mat-option value=\\\"Mr\\\">Mr</mat-option>\\r\\n                        <mat-option value=\\\"Mme\\\">Mme</mat-option>\\r\\n                        <mat-option value=\\\"Mesdamoiselle\\\">Mesdamoiselle</mat-option>\\r\\n                    </mat-select>\\r\\n               </mat-form-field>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n            \\r\\n      </div>\\r\\n    </form>\\r\\n</div>\\r\\n<div mat-dialog-actions align=\\\"end\\\" *ngIf=\\\"!isLoadingResults\\\">\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n        <button mat-raised-button color=\\\"warn\\\" [mat-dialog-close]=\\\"userForm.value\\\" >Annuler</button>\\r\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onSubmit()\\\" >Enregistrer</button>\\r\\n    </div>\\r\\n</div>\";","import { Utilisateur } from './../../shared/models/utilisateeur';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ProfileService } from './profile.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  isLoad = false;\r\n  constructor(private profileService : ProfileService) { }\r\n\r\n  Utilisateur : any;\r\n  ngOnInit(): void {\r\n    this.isLoad = true;\r\n    this.profileService.getMe().subscribe(\r\n      (user) =>{\r\n        this.Utilisateur = user;\r\n        this.isLoad = false;\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n\r\n}\r\n","export default \"<div class=\\\"toolbar-dropdown-menu user-menu\\\">\\r\\n    <!--<span (mouseleave)=\\\"userMenuTrigger.closeMenu()\\\">-->\\r\\n        <mat-toolbar color=\\\"primary\\\">\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\" >\\r\\n                <img *ngIf=\\\"client.imgUrl\\\" class=\\\"profile-img\\\" src=\\\"{{client.imgUrl}}\\\" alt=\\\"user-image\\\" width=\\\"100px\\\" class=\\\"rounded\\\">\\r\\n                <p><b>{{client.email}}</b></p>\\r\\n            </div>  \\r\\n        </mat-toolbar>\\r\\n        <mat-card class=\\\"information\\\">\\r\\n            <p fxLayout=\\\"row\\\"  class=\\\"infor\\\">\\r\\n                <mat-icon>perm_identity</mat-icon>  \\r\\n                <span> <strong><i>Nom :</i> {{client.nom}}</strong></span>\\r\\n            </p>\\r\\n            <p fxLayout=\\\"row\\\" class=\\\"infor\\\">\\r\\n                <mat-icon>face</mat-icon>  \\r\\n                <span> <strong><i>Prenom : </i> {{client.prenom}}</strong></span>\\r\\n            </p>\\r\\n            <p fxLayout=\\\"row\\\" class=\\\"infor\\\">\\r\\n                <mat-icon> business</mat-icon>  \\r\\n                <span> <strong><i>Sociéte : </i> {{client.societe}}</strong></span>\\r\\n            </p>\\r\\n            <p fxLayout=\\\"row\\\" class=\\\"infor\\\">\\r\\n                <mat-icon> call</mat-icon>  \\r\\n                <span> <strong><i>Contact : </i> {{client.contact}}</strong></span>\\r\\n            </p>\\r\\n            <p fxLayout=\\\"row\\\"  class=\\\"infor\\\">\\r\\n                <mat-icon>wc</mat-icon>  \\r\\n                <span> <strong><i>Status Familiale : </i> {{client.statusFamiliale}}</strong></span>\\r\\n            </p>\\r\\n            <p fxLayout=\\\"row\\\" class=\\\"infor\\\">\\r\\n                <mat-icon>access_time</mat-icon>  \\r\\n                <span> <strong><i>Heure à Joindre : </i> {{client.heureAContacter}}</strong></span>\\r\\n            </p>\\r\\n            <div class=\\\"divider\\\"></div>\\r\\n            <mat-card-actions align=\\\"end\\\" class=\\\"action-modif\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\" (click)=\\\"openDialog()\\\" >Modifier</button>\\r\\n            </mat-card-actions>\\r\\n\\r\\n        </mat-card>\\r\\n    <!--</span>-->\\r\\n</div>\\r\\n\\r\\n\\r\\n\";","import { ProfileModel } from './Securite';\r\nimport { societeModel } from \"./societe.model\";\r\n\r\nexport class Utilisateur{\r\n        id : number;\r\n        email: string;\r\n         imgUrl :string;\r\n         nom :string;\r\n         password :string;\r\n         prenom :string;\r\n         provider :string;\r\n         contact: string;\r\n         profile: ProfileModel\r\n}\r\n\r\nexport class Client extends Utilisateur{\r\n        societe : string;\r\n\tstatusFamiliale : string;\r\n        heureAContacter : string;\r\n        adresse: string;\r\n}\r\n\r\n\r\nexport class UpdatePassword{\r\n        password: string;\r\n        confirm:string;\r\n}\r\n\r\nexport class AutresUser extends Utilisateur{\r\n        societe: societeModel;\r\n        civilite: string;\r\n}\r\n\r\nexport class PersonnelSociete extends Utilisateur{\r\n        civilite: string;\r\n}\r\n","import { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ProfileComponent } from './profile.component';\r\nimport { Router, RouterModule } from '@angular/router';\r\nimport { ClientViewComponent } from './profile-view/client-view/client-view.component';\r\nimport { ArtisanViewComponent } from './profile-view/artisan-view/artisan-view.component';\r\nimport { LayoutModule } from 'src/app/layout/layout.module';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { UpdateArtisanComponent } from './update-profile/update-artisan/update-artisan.component';\r\nimport { UpdateClientComponent } from './update-profile/update-client/update-client.component';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AutreUserComponent } from './profile-view/autre-user/autre-user.component';\r\nimport { PersonnelEntrepriseComponent } from './profile-view/personnel-entreprise/personnel-entreprise.component';\r\nimport { UpdateAutrePersonneComponent } from './update-profile/autre-personne/autre-personne.component';\r\nimport { UpdatePersonnelEntrepriseComponent } from './update-profile/update-personnel-entreprise/update-personnel-entreprise.component';\r\nimport { authInterceptorProviders } from '../login/_helper/AuthInterceptorService';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { ErrorInterceptor } from '../login/_helper/error.interceptor';\r\n\r\nexport const routes = [\r\n  { path: '', component: ProfileComponent, pathMatch: 'full' },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [ProfileComponent, ClientViewComponent, ArtisanViewComponent, UpdateArtisanComponent, UpdateClientComponent, AutreUserComponent, PersonnelEntrepriseComponent, UpdateAutrePersonneComponent, UpdatePersonnelEntrepriseComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n  ],\r\n  providers: [ \r\n    authInterceptorProviders,\r\n    AppSettings,\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }\r\n  ],\r\n})\r\nexport class ProfileModule { }\r\n","import { SnackBarService } from './../../../../shared/services/SnackBar';\r\nimport { environment } from './../../../../../environments/environment';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Client } from './../../../../shared/models/utilisateeur';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog'\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\nexport interface FileProfile{\r\n  lastModified: number;\r\n  lastModifiedDate: Date;\r\n  name: string;\r\n  size: number;\r\n  type: string;\r\n  webkitRelativePath: string;\r\n}\r\n@Component({\r\n  selector: 'app-update-client',\r\n  templateUrl: './update-client.component.html',\r\n  styleUrls: ['./update-client.component.scss']\r\n})\r\nexport class UpdateClientComponent implements OnInit {\r\n  files =[];\r\n  image: any;\r\n  clientForm : FormGroup;\r\n  client: Client;\r\n  ext = \"jpeg\";\r\n  isLoadingResults= false;\r\n  constructor(public dialogRef: MatDialogRef<UpdateClientComponent>,\r\n    public dialog: MatDialog, @Inject(MAT_DIALOG_DATA) public data: any,\r\n              private _fb: FormBuilder, private http: HttpClient,\r\n              private snackBar : SnackBarService) { }\r\n\r\n  ngOnInit(): void {\r\n    //console.log(this.data.client.imgUrl);\r\n    this.image = this.data.client.imgUrl;\r\n    this.client = this.data.client;\r\n    this.init();\r\n  }\r\n  onSelect(event) {\r\n   var file = new FileReader();\r\n   file.readAsDataURL(event.target.files[0]);\r\n  // console.log(event.target.files[0]);\r\n\r\n   var verifiImage = event.target.files[0].type;\r\n   if(verifiImage.match(/image\\/*/))\r\n   {\r\n      file.onload = (_event) => {\r\n  \r\n        this.image = file.result;\r\n        const base64 = this.image.split(\",\")[1];\r\n        const filess = new FormData();\r\n        this.ext = event.target.files[0].type.split(\"/\")[1];\r\n        return;\r\n        //console.log(this.image);\r\n      }\r\n   }\r\n   else{\r\n    this.snackBar.openSnackBar(\"Selectionner une image\", \"ERROR Image\",3000);\r\n   }\r\n   \r\n  }\r\n\r\n    public init(){\r\n      this.clientForm = this._fb.group({\r\n        id : [this.client.id],\r\n        nom : [this.client.nom, Validators.required],\r\n        prenom: [this.client.prenom, Validators.required],\r\n        extension: null,\r\n        contact: this.client.contact,\r\n        imgUrl : this.client.imgUrl,\r\n        societe : this.client.societe,\r\n        statusFamiliale: this.client.statusFamiliale,\r\n        heureAContacter: this.client.heureAContacter,\r\n        adresse:[this.client.adresse, Validators.required]\r\n      })\r\n    }\r\n\r\n\r\n    onSubmit()\r\n    {\r\n      if(this.clientForm.valid)\r\n      {\r\n        this.isLoadingResults= true;\r\n        if(this.image !=null){\r\n          this.clientForm.get(\"imgUrl\").setValue(this.image.split(\",\")[1]);\r\n          this.clientForm.get(\"extension\").setValue(this.ext);\r\n        }\r\n      //console.log(this.clientForm.value);\r\n      this.http.put(environment.BACK_END.LOGIN.PROFILE_UPDATE_CLIENT+\"\"+this.client.id, this.clientForm.value).subscribe(\r\n        data =>\r\n        {\r\n          //console.log(data);\r\n        },\r\n        (err : HttpErrorResponse) =>\r\n        {\r\n            console.log(err);\r\n            if(err.status <300)\r\n            {\r\n              this.snackBar.openSnackBar(\"Profile Modifier\", \"Success\",3000);\r\n              this.dialogRef.close();\r\n            }\r\n            else{\r\n              this.isLoadingResults= false;\r\n                this.snackBar.openSnackBar(\"Remplire les champs obligatoire\", \"ERROR\",3000);\r\n            }\r\n            \r\n        }\r\n      )\r\n      }\r\n      else\r\n      {\r\n        this.isLoadingResults= false;\r\n        this.snackBar.openSnackBar(\"Remplire les champs SVP\", \"Champs Vide\",3000);\r\n      }\r\n    }\r\n\r\n}\r\n"]}