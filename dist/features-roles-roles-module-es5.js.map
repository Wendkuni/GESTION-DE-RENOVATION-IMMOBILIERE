{"version":3,"sources":["webpack:///src/app/features/roles/update/update.component.html","webpack:///src/app/features/roles/roles.component.html","webpack:///src/app/features/roles/roles.component.ts","webpack:///src/app/features/roles/update/update.component.ts","webpack:///src/app/shared/utils/app-confirm/app-confirm.service.ts","webpack:///src/app/features/roles/roles.component.scss","webpack:///src/app/features/roles/update/update.component.scss","webpack:///src/app/features/roles/roles.module.ts"],"names":["RolesComponent","roleService","dialog","confirm","snackBar","roles","rechercheGeneral","isLoadingResults","displayedColumns","dataSources","getAllrole","subscribe","data","console","log","paginator","sort","filter","trim","toLowerCase","recherche","role","dialogRef","open","width","disableClose","afterClosed","result","ngOnInit","index","title","message","$choix","error","status","openSnackBar","selector","template","UpdateRolesComponent","fb","init","rolesForm","group","id","libelle","required","type","name","updaterole","get","value","close","addrole","AppConfirmService","buttun1","buttun2","maxWidth","position","top","button1","button2","providedIn","routes","path","component","breadcrumb","RolesModule","declarations","imports","forChild"],"mappings":"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","file":"features-roles-roles-module-es5.js","sourcesContent":["export default \"<div *ngIf=\\\"isLoadingResults\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"user-spinner\\\">   \\r\\n    <mat-spinner color=\\\"primary\\\"></mat-spinner>\\r\\n  </div>\\r\\n\\r\\n<div class=\\\"header\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" mat-dialog-title color=\\\"primary\\\">\\r\\n    <h2 *ngIf=\\\"data.role\\\">Modifier Un role</h2>\\r\\n    <h2 *ngIf=\\\"!data.role\\\">AJouter Un role</h2>\\r\\n</div>\\r\\n<div mat-dialog-content>\\r\\n    <form  [formGroup]=\\\"rolesForm\\\">\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start\\\" fxLayout.lt-md=\\\"row wrap\\\">\\r\\n            \\r\\n            <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                <mat-label>Libelle</mat-label>\\r\\n                <input matInput #input  placeholder=\\\"Ex. Nougat\\\"  formControlName=\\\"libelle\\\">\\r\\n                <mat-error *ngIf=\\\"rolesForm.controls.libelle.errors?.required\\\">Libelle doit pas etre vide</mat-error>\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                <mat-label>Name</mat-label>\\r\\n                <input matInput #input placeholder=\\\"Ex. Nougat\\\" formControlName=\\\"name\\\"  >\\r\\n                <mat-error *ngIf=\\\"rolesForm.controls.name.errors?.required\\\">Libelle doit pas etre vide</mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                <mat-label>Type</mat-label>\\r\\n                <input matInput #input placeholder=\\\"Ex. Nougat\\\" formControlName=\\\"type\\\"  >\\r\\n                <mat-error *ngIf=\\\"rolesForm.controls.type.errors?.required\\\">Libelle doit pas etre vide</mat-error>\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\\r\\n<div mat-dialog-actions align=\\\"end\\\">\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n        <button mat-raised-button color=\\\"warn\\\" [mat-dialog-close]=\\\"rolesForm.value\\\" >Annuler</button>\\r\\n        <button mat-raised-button [disabled]=\\\"rolesForm.invalid\\\" (click)=\\\"onSubmit()\\\" color=\\\"primary\\\" >Enregistrer</button>\\r\\n    </div>\\r\\n</div>\";","export default \"<div *ngIf=\\\"isLoadingResults\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"user-spinner\\\">   \\r\\n  <mat-spinner color=\\\"primary\\\"></mat-spinner>\\r\\n</div>\\r\\n\\r\\n<div fxLayout=\\\"row wrap\\\">\\r\\n  <div class=\\\"table-bouton-ajout\\\">\\r\\n      <mat-button-toggle-group appearance=\\\"legacy\\\">\\r\\n          <mat-button-toggle (click)=\\\"openDialog(null)\\\" class=\\\"bg-primary\\\">\\r\\n              <mat-icon>add_circle_outline</mat-icon>\\r\\n          </mat-button-toggle>\\r\\n      </mat-button-toggle-group>\\r\\n  </div>\\r\\n      <div class=\\\"recherche\\\">\\r\\n          <mat-form-field class=\\\"recherche\\\">\\r\\n              <input matInput [(ngModel)]=\\\"rechercheGeneral\\\" placeholder=\\\"Rechercher generale...\\\" autocomplete=\\\"off\\\" (keyup)=\\\"recherche()\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n              <mat-icon matSuffix (click)=\\\"rechercheGeneral = ''; recherche()\\\" class=\\\"sycad-element-clickable\\\">clear</mat-icon>\\r\\n          </mat-form-field>\\r\\n      </div>\\r\\n</div>\\r\\n\\r\\n<div fxLayout=\\\"row wrap\\\">\\r\\n\\r\\n    <div fxFlex=\\\"100\\\" class=\\\"flex-p\\\"> \\r\\n        <div class=\\\"example-container mat-elevation-z8\\\">\\r\\n            <table mat-table [dataSource]=\\\"dataSources\\\" matSort [ngClass]=\\\"'sycad-table-container-expanded'\\\">\\r\\n          \\r\\n              <!-- Name Column -->\\r\\n              <ng-container matColumnDef=\\\"libelle\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Libelle </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.libelle}} </td>\\r\\n              </ng-container>\\r\\n          \\r\\n              <!-- Position Column -->\\r\\n              <ng-container matColumnDef=\\\"name\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\r\\n              </ng-container>\\r\\n          \\r\\n              <!-- Weight Column -->\\r\\n              <ng-container matColumnDef=\\\"type\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Type </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.type}} </td>\\r\\n              </ng-container>\\r\\n              \\r\\n              <!-- Star Column -->\\r\\n              <ng-container matColumnDef=\\\"action\\\" stickyEnd>\\r\\n                <th mat-header-cell *matHeaderCellDef></th>\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                    <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" aria-label=\\\"Example icon-button with a menu\\\">\\r\\n                        <mat-icon>more_vert</mat-icon>\\r\\n                      </button>\\r\\n                      <mat-menu #menu=\\\"matMenu\\\">\\r\\n                        <button mat-menu-item (click)=\\\"openDialog(element)\\\">\\r\\n                          <mat-icon>edite</mat-icon>\\r\\n                          <span>Modifier</span>\\r\\n                        </button>\\r\\n                        <button mat-menu-item color=\\\"warn\\\" (click)=\\\"supprimerRenovation(element.id)\\\">\\r\\n                          <mat-icon>delete</mat-icon>\\r\\n                          <span>Supprimer</span>\\r\\n                        </button>\\r\\n                      </mat-menu>\\r\\n                </td>\\r\\n              </ng-container>\\r\\n          \\r\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n            </table>\\r\\n            <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n          </div>\\r\\n    </div>\\r\\n\\r\\n</div>\";","import { RolesServices } from './rolesServices';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { RolesModel } from 'src/app/shared/models/Securite';\r\nimport { UpdateRolesComponent } from './update/update.component';\r\nimport { AppConfirmService } from 'src/app/shared/utils/app-confirm/app-confirm.service';\r\nimport { SnackBarService } from 'src/app/shared/services/SnackBar';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\n\r\n@Component({\r\n  selector: 'app-roles',\r\n  templateUrl: './roles.component.html',\r\n  styleUrls: ['./roles.component.scss']\r\n})\r\nexport class RolesComponent implements OnInit {\r\n  roles: RolesModel[] = [];\r\n  rechercheGeneral = '';\r\n  isLoadingResults = false;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  displayedColumns =['libelle', 'name', 'type','action'];\r\n  dataSources = new MatTableDataSource<RolesModel>(this.roles);\r\n  constructor(private roleService: RolesServices, public dialog: MatDialog, private confirm: AppConfirmService, private snackBar: SnackBarService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.isLoadingResults = true;\r\n    this.roleService.getAllrole().subscribe((data)=>{\r\n      this.roles = data;\r\n      this.dataSources = new MatTableDataSource<RolesModel>(this.roles);\r\n      console.log(this.roles);\r\n      this.dataSources.paginator = this.paginator;\r\n    this.dataSources.sort = this.sort;\r\n      this.isLoadingResults = false;\r\n    })\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSources.paginator = this.paginator;\r\n    this.dataSources.sort = this.sort;\r\n  }\r\n\r\n  recherche() {\r\n    this.dataSources.filter = this.rechercheGeneral.trim().toLowerCase();\r\n  }\r\n\r\n  annulerRechercheGeneral()\r\n  {\r\n    this.rechercheGeneral = '';\r\n    this.recherche();\r\n  }\r\n\r\n  openDialog(role): void {\r\n    const dialogRef = this.dialog.open(UpdateRolesComponent, {\r\n      width: '600px',\r\n      data: {role: role},\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result ==null)\r\n      {\r\n        this.ngOnInit();\r\n      }\r\n    });\r\n  }\r\n\r\n  supprimerRenovation(index){\r\n    this.confirm.confirm({\r\n      title:\"Confirmation\",\r\n      message:`Voulez-vous supprimer cette pièce complémentaire ? `\r\n    }).subscribe(($choix)=> {\r\n\r\n      if($choix) {\r\n        this.isLoadingResults=true;\r\n        this.roleService.delete(index).subscribe(()=>{\r\n          \r\n        },\r\n        (error: HttpErrorResponse) => {\r\n              this.isLoadingResults=false;\r\n              if(error.status<300)\r\n              {\r\n                this.snackBar.openSnackBar(\"Element supprimé avec succès\", \"OK\",3000);\r\n                this.ngOnInit();\r\n              }\r\n              else{\r\n                this.snackBar.openSnackBar(\"Element non supprimer car affilier a un utilisateur\", \"OK\",3000);\r\n              }\r\n              \r\n          });\r\n      }\r\n\r\n    });\r\n  }\r\n}\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { SnackBarService } from 'src/app/shared/services/SnackBar';\r\nimport { RolesServices } from '../rolesServices';\r\n\r\n@Component({\r\n  selector: 'app-update',\r\n  templateUrl: './update.component.html',\r\n  styleUrls: ['./update.component.scss']\r\n})\r\nexport class UpdateRolesComponent implements OnInit {\r\n\r\n  rolesForm : FormGroup;\r\n  isLoadingResults=false;\r\n  constructor(public dialogRef: MatDialogRef<UpdateRolesComponent>,private snackBar: SnackBarService,\r\n    public dialog: MatDialog, @Inject(MAT_DIALOG_DATA) public data: any,private fb: FormBuilder, private roleService: RolesServices) { }\r\n\r\n  ngOnInit(): void {\r\n    this.init();\r\n  }\r\n\r\n  init(){\r\n      if(this.data.role){\r\n        this.rolesForm = this.fb.group({\r\n          id:[this.data.role.id],\r\n          libelle: [this.data.role.libelle, Validators.required],\r\n          type: [this.data.role.type,Validators.required],\r\n          name: [this.data.role.name,Validators.required],\r\n      })\r\n    }\r\n    else{\r\n      \r\n      this.rolesForm = this.fb.group({\r\n        libelle: [null, Validators.required],\r\n        type: [null, Validators.required],\r\n        name: [null, Validators.required],\r\n      })\r\n    }\r\n  }\r\n\r\n  onSubmit(){\r\n    this.isLoadingResults=true;\r\n    if(this.data.role){\r\n      this.roleService.updaterole(this.rolesForm.get('id').value, this.rolesForm.value).subscribe( (data)=>{\r\n        this.isLoadingResults=false;\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n            this.isLoadingResults=false;\r\n            if(error.status<300)\r\n            {\r\n              this.dialogRef.close();\r\n              this.snackBar.openSnackBar(\"Element modifier  avec succès\", \"OK\",3000);\r\n            }\r\n            else{\r\n              this.snackBar.openSnackBar(\"Element non Ajouter car name existe deja\", \"OK\",3000);\r\n            }\r\n            \r\n            \r\n        });\r\n    }\r\n    else{\r\n      this.roleService.addrole(this.rolesForm.value).subscribe( (data)=>{\r\n        //console.log(data);\r\n        this.isLoadingResults=false;\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n            this.isLoadingResults=false;\r\n            if(error.status<300)\r\n            {\r\n              this.dialogRef.close();\r\n              this.snackBar.openSnackBar(\"Element Ajouter  avec succès\", \"OK\",3000);\r\n            }\r\n            else{\r\n              this.snackBar.openSnackBar(\"Element non Ajouter car name existe deja\", \"OK\",3000);\r\n            }\r\n            \r\n        });\r\n    }\r\n  }\r\n}\r\n","import { Observable } from 'rxjs';\r\nimport { MatDialogRef, MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { AppComfirmComponent } from './app-confirm.component';\r\n\r\ninterface confirmData {\r\n  title?: string;\r\n  message?: string;\r\n  buttun1?: string;\r\n  buttun2?: string;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AppConfirmService {\r\n  constructor(private dialog: MatDialog) {}\r\n\r\n  public confirm(data: confirmData = {}): Observable<boolean> {\r\n    data.title = data.title || 'Confirmation';\r\n    data.message = data.message || `Voulez vous confirmer l'action suivante ?`;\r\n    data.buttun1 = data.buttun1 || `Non Merci`;\r\n    data.buttun2 = data.buttun2 || `Oui`;\r\n    let dialogRef: MatDialogRef<AppComfirmComponent>;\r\n    dialogRef = this.dialog.open(AppComfirmComponent, {\r\n      maxWidth: '50vw',\r\n      position: {\r\n        top:\"7vw\"\r\n      },\r\n      disableClose: true,\r\n      data: { title: data.title, message: data.message, button1: data.buttun1,  button2: data.buttun2}\r\n    });\r\n    return dialogRef.afterClosed();\r\n  }\r\n}\r\n","export default \".example-container {\\n  width: 100%;\\n  max-width: 100%;\\n  overflow: auto;\\n}\\n\\ntable {\\n  width: 100%;\\n}\\n\\ntd.mat-column-star {\\n  width: 20px;\\n  padding-right: 8px;\\n}\\n\\nth.mat-column-position, td.mat-column-position {\\n  padding-left: 8px;\\n}\\n\\n.mat-table-sticky-border-elem-right {\\n  border-left: 1px solid #e0e0e0;\\n}\\n\\n.mat-table-sticky-border-elem-left {\\n  border-right: 1px solid #e0e0e0;\\n}\\n\\n.recherche {\\n  width: 80%;\\n}\\n\\n.mat-row:nth-child(even) {\\n  background-color: rgba(8, 106, 235, 0.247);\\n}\\n\\n.mat-row:nth-child(odd) {\\n  background-color: rgba(252, 249, 249, 0.116);\\n}\\n\\nth.mat-sort-header-sorted {\\n  color: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFxyb2xlcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFdBQUE7RUFDQSxlQUFBO0VBQ0EsY0FBQTtBQUNKOztBQUVFO0VBQ0UsV0FBQTtBQUNKOztBQUVFO0VBQ0UsV0FBQTtFQUNBLGtCQUFBO0FBQ0o7O0FBRUU7RUFDRSxpQkFBQTtBQUNKOztBQUVFO0VBQ0UsOEJBQUE7QUFDSjs7QUFFRTtFQUNFLCtCQUFBO0FBQ0o7O0FBQ0U7RUFDRSxVQUFBO0FBRUo7O0FBQ0U7RUFDRSwwQ0FBQTtBQUVKOztBQUNBO0VBQ0ksNENBQUE7QUFFSjs7QUFDSTtFQUNJLFVBQUE7QUFFUiIsImZpbGUiOiJyb2xlcy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLWNvbnRhaW5lciB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIG1heC13aWR0aDogMTAwJTtcclxuICAgIG92ZXJmbG93OiBhdXRvO1xyXG4gIH1cclxuICBcclxuICB0YWJsZSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcbiAgXHJcbiAgdGQubWF0LWNvbHVtbi1zdGFyIHtcclxuICAgIHdpZHRoOiAyMHB4O1xyXG4gICAgcGFkZGluZy1yaWdodDogOHB4O1xyXG4gIH1cclxuICBcclxuICB0aC5tYXQtY29sdW1uLXBvc2l0aW9uLCB0ZC5tYXQtY29sdW1uLXBvc2l0aW9uIHtcclxuICAgIHBhZGRpbmctbGVmdDogOHB4O1xyXG4gIH1cclxuICBcclxuICAubWF0LXRhYmxlLXN0aWNreS1ib3JkZXItZWxlbS1yaWdodCB7XHJcbiAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkICNlMGUwZTA7XHJcbiAgfVxyXG4gIFxyXG4gIC5tYXQtdGFibGUtc3RpY2t5LWJvcmRlci1lbGVtLWxlZnQge1xyXG4gICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgI2UwZTBlMDtcclxuICB9XHJcbiAgLnJlY2hlcmNoZXtcclxuICAgIHdpZHRoOiA4MCU7XHJcbiAgfVxyXG5cclxuICAubWF0LXJvdzpudGgtY2hpbGQoZXZlbil7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoOCwgMTA2LCAyMzUsIDAuMjQ3KTtcclxuICAgIH1cclxuXHJcbi5tYXQtcm93Om50aC1jaGlsZChvZGQpe1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI1MiwgMjQ5LCAyNDksIDAuMTE2KTtcclxuICAgIH1cclxuXHJcbiAgICB0aC5tYXQtc29ydC1oZWFkZXItc29ydGVkIHtcclxuICAgICAgICBjb2xvcjogcmVkO1xyXG4gICAgICB9Il19 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ1cGRhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RolesComponent } from './roles.component';\r\nimport { UpdateRolesComponent } from './update/update.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { UtilsModule } from 'src/app/shared/utils/utils.module';\r\n\r\nexport const routes = [\r\n  { path: '', component: RolesComponent, data: { breadcrumb: 'Roles' } },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [RolesComponent, UpdateRolesComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PerfectScrollbarModule,\r\n    SharedModule,\r\n    HttpClientModule,\r\n    UtilsModule,\r\n  ]\r\n})\r\nexport class RolesModule { }\r\n"]}