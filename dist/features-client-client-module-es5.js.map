{"version":3,"sources":["webpack:///src/app/features/client/client.component.ts","webpack:///src/app/features/client/update/update.component.html","webpack:///src/app/features/client/client-admin-service.ts","webpack:///src/app/features/client/client.component.html","webpack:///src/app/features/client/client.component.scss","webpack:///src/app/features/client/update/update.component.ts","webpack:///src/app/features/client/update/update.component.scss","webpack:///src/app/features/client/client.module.ts"],"names":["ClientComponent","appSettings","snackBar","dialog","confirm","usersService","isLoadingResults","settings","getUsers","users","subscribe","event","page","fixedHeader","document","getElementById","scrollTop","getElementsByClassName","user","dialogRef","open","width","data","disableClose","afterClosed","result","index","title","message","$choix","deleteUser","error","status","openSnackBar","ngOnInit","selector","template","encapsulation","None","providers","ClientAdminService","http","get","BACK_END","UTILISATEUR","CLIENT","post","id","patch","UpdateClientAdminComponent","clientServices","_fb","init","group","nom","required","prenom","provider","email","contact","imgUrl","societe","statusFamiliale","heureAContacter","adresse","valid","updateUser","value","close","routes","path","component","breadcrumb","ClientModule","declarations","imports","forChild","provide","useClass","multi"],"mappings":"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","file":"features-client-client-module-es5.js","sourcesContent":["import { ClientAdminService } from './client-admin-service';\r\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { Settings } from 'src/app/app.settings.model';\r\nimport { Client } from 'src/app/shared/models/utilisateeur';\r\nimport { SnackBarService } from 'src/app/shared/services/SnackBar';\r\nimport { AppConfirmService } from 'src/app/shared/utils/app-confirm/app-confirm.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { UpdateClientAdminComponent } from './update/update.component';\r\n\r\n@Component({\r\n  selector: 'app-client',\r\n  templateUrl: './client.component.html',\r\n  styleUrls: ['./client.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  providers: [ ClientAdminService ]  \r\n})\r\nexport class ClientComponent implements OnInit {\r\n    public users: Client[];\r\n    public searchText: string;\r\n    public page:any;\r\n    public settings: Settings;\r\n    isLoadingResults=true;\r\n    constructor(public appSettings:AppSettings,private snackBar: SnackBarService,\r\n                public dialog: MatDialog,private confirm: AppConfirmService,\r\n                public usersService: ClientAdminService){\r\n        this.settings = this.appSettings.settings; \r\n    }\r\n  \r\n    ngOnInit() {\r\n        this.getUsers();         \r\n    }\r\n  \r\n    public getUsers(): void {\r\n        this.users = null; //for show spinner each time\r\n        this.isLoadingResults=true;\r\n        this.usersService.getUsers().subscribe(users => {this.users = users; this.isLoadingResults=false});    \r\n    }\r\n   \r\n  \r\n  \r\n    public onPageChanged(event){\r\n        this.page = event;\r\n        this.getUsers();\r\n        if(this.settings.fixedHeader){      \r\n            document.getElementById('main-content').scrollTop = 0;\r\n        }\r\n        else{\r\n            document.getElementsByClassName('mat-drawer-content')[0].scrollTop = 0;\r\n        }\r\n    }\r\n  \r\n    openDialog(user): void {\r\n      const dialogRef = this.dialog.open(UpdateClientAdminComponent, {\r\n        width: '600px',\r\n        data: {user: user},\r\n        disableClose: true\r\n      });\r\n  \r\n      dialogRef.afterClosed().subscribe(result => {\r\n        if(result ==null)\r\n        {\r\n          this.getUsers();\r\n        }\r\n      });\r\n    }\r\n  \r\n    suprimerUser(index){\r\n      this.confirm.confirm({\r\n        title:\"Confirmation\",\r\n        message:`Voulez-vous supprimer cette pièce complémentaire ? `\r\n      }).subscribe(($choix)=> {\r\n  \r\n        if($choix) {\r\n          this.isLoadingResults=true;\r\n          this.usersService.deleteUser(index).subscribe(()=>{\r\n            \r\n          },\r\n          (error: HttpErrorResponse) => {\r\n                this.isLoadingResults=false;\r\n                if(error.status<300)\r\n                {\r\n                  this.snackBar.openSnackBar(\"Element supprimé avec succès\", \"OK\",3000);\r\n                  this.ngOnInit();\r\n                }\r\n                else{\r\n                  this.snackBar.openSnackBar(\"Element non supprimer car deja commencer des action\", \"OK\",3000);\r\n                }\r\n                \r\n            });\r\n        }\r\n  \r\n      });\r\n    }\r\n}\r\n","export default \"<div class=\\\"header\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" mat-dialog-title color=\\\"primary\\\">\\r\\n    <h3 *ngIf=\\\"data.menu\\\">Modifier Un utilisateur</h3>\\r\\n    <h3 *ngIf=\\\"!data.menu\\\">AJouter Un utilisateur</h3>\\r\\n</div>\\r\\n<div mat-dialog-content>\\r\\n    <div *ngIf=\\\"isLoadingResults\\\" fxLayout=\\\"row\\\"  fxLayoutAlign=\\\"center center\\\" fxLayout.lt-md=\\\"row wrap\\\">\\r\\n        <div id=\\\"app-spinner\\\" > \\r\\n            <mat-spinner color=\\\"primary\\\"></mat-spinner>  \\r\\n            <h4>Chargement...</h4>\\r\\n        </div>\\r\\n    </div>\\r\\n    <form *ngIf=\\\"!isLoadingResults\\\"  [formGroup]=\\\"user\\\">\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start\\\" fxLayout.lt-md=\\\"row wrap\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                <mat-label>Email</mat-label>\\r\\n                <input matInput #input  placeholder=\\\"Email\\\"  formControlName=\\\"email\\\">\\r\\n            </mat-form-field>\\r\\n            \\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n         \\r\\n            <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                <mat-label>Status Familiale</mat-label>\\r\\n                <mat-select disableRipple formControlName=\\\"statusFamiliale\\\" required>\\r\\n                    <mat-option >--SELECT--</mat-option>\\r\\n                    <mat-option value=\\\"Mr\\\">Mr</mat-option>\\r\\n                    <mat-option value=\\\"Mme\\\">Mme</mat-option>\\r\\n                    <mat-option value=\\\"Mesdamoiselle\\\">Mesdamoiselle</mat-option>\\r\\n                </mat-select>\\r\\n           </mat-form-field>\\r\\n           <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n            <mat-label>Provider</mat-label>\\r\\n            <input matInput #input  placeholder=\\\"provider\\\"  formControlName=\\\"provider\\\">\\r\\n        </mat-form-field>\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\\r\\n<div mat-dialog-actions align=\\\"end\\\">\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n        <button mat-raised-button color=\\\"warn\\\" [mat-dialog-close]=\\\"user.value\\\" >Annuler</button>\\r\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onSubmit()\\\" [disabled]=\\\"user.invalid\\\">Enregistrer</button>\\r\\n    </div>\\r\\n</div>\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Client } from 'src/app/shared/models/utilisateeur';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable()\r\nexport class ClientAdminService {\r\n    \r\n    constructor(public http:HttpClient) { }\r\n    \r\n    getUsers(): Observable<Client[]> {\r\n        return this.http.get<Client[]>(environment.BACK_END.UTILISATEUR.CLIENT);\r\n    }\r\n\r\n    addUser(user){\t    \r\n        return this.http.post(environment.BACK_END.UTILISATEUR.CLIENT, user);\r\n    }\r\n\r\n\r\n    deleteUser(id: number) {\r\n        return this.http.delete(environment.BACK_END.UTILISATEUR.CLIENT + \"\" + id);\r\n    } \r\n\r\n    updateUser(user, id){\t    \r\n        return this.http.patch(environment.BACK_END.UTILISATEUR.CLIENT+\"update/\"+id, user);\r\n    }\r\n} ","export default \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\" class=\\\"flex-p\\\">\\r\\n    <div fxLayout=\\\"row\\\">\\r\\n        <mat-button-toggle-group #controls=\\\"matButtonToggleGroup\\\" appearance=\\\"legacy\\\">            \\r\\n            <mat-button-toggle value=\\\"search\\\">\\r\\n                <mat-icon>search</mat-icon>\\r\\n            </mat-button-toggle>           \\r\\n        </mat-button-toggle-group>            \\r\\n    </div>\\r\\n    <form class=\\\"user-search\\\" [class.show]=\\\"controls.value == 'search'\\\">\\r\\n        <mat-form-field class=\\\"user-search-input\\\">\\r\\n            <input matInput placeholder=\\\"Search user by name...\\\" [(ngModel)]=\\\"searchText\\\" name=\\\"search\\\">\\r\\n        </mat-form-field>\\r\\n    </form>\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n        <mat-button-toggle-group #viewType=\\\"matButtonToggleGroup\\\" appearance=\\\"legacy\\\" value=\\\"grid\\\">            \\r\\n            <mat-button-toggle value=\\\"grid\\\">\\r\\n                <mat-icon>view_module</mat-icon>\\r\\n            </mat-button-toggle>         \\r\\n        </mat-button-toggle-group>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"viewType.value == 'grid'\\\" fxLayout=\\\"row wrap\\\">    \\r\\n    <div *ngFor=\\\"let user of users | paginate: { itemsPerPage: 6, currentPage: page }\\\" fxFlex=\\\"100\\\" fxFlex.gt-md=\\\"33.3\\\" fxFlex.md=\\\"50\\\" class=\\\"flex-p\\\"> \\r\\n        <mat-card class=\\\"p-0\\\">  \\r\\n            <div class=\\\"bg-primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                <h3 class=\\\"user-name\\\">{{user.email}}</h3> \\r\\n                <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" #menuTrigger=\\\"matMenuTrigger\\\">\\r\\n                    <mat-icon>more_vert</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n            <mat-menu #menu=\\\"matMenu\\\" xPosition=\\\"before\\\" overlapTrigger=\\\"true\\\">\\r\\n                <span (mouseleave)=\\\"menuTrigger.closeMenu()\\\">\\r\\n                    <button mat-menu-item (click)=\\\"openDialog(user)\\\" >\\r\\n                        <mat-icon>mode_edit</mat-icon>\\r\\n                        <span>Edit</span>\\r\\n                    </button>\\r\\n                     <button mat-menu-item (click)=\\\"suprimerUser(user.id)\\\">\\r\\n                        <mat-icon>delete</mat-icon>\\r\\n                        <span>Delete</span>\\r\\n                    </button> \\r\\n                </span>\\r\\n            </mat-menu>\\r\\n            <div class=\\\"user-content\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\">\\r\\n                <div fxFlex=\\\"30\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n                    <div class=\\\"user-img\\\">\\r\\n                        <img *ngIf=\\\"user.statusFamiliale !='Mr'\\\"  src=\\\"./assets/img/avatars/avatar-5.png\\\" class=\\\"transition-2\\\" >  \\r\\n                        <img *ngIf=\\\"user.statusFamiliale =='Mr'\\\"  src=\\\"./assets/img/avatars/avatar-9.png\\\" class=\\\"transition-2\\\" >\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"70\\\" fxLayout=\\\"column\\\" class=\\\"user-details transition-2\\\" [class.blocked]=\\\"false\\\">\\r\\n                    <p fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n                        <mat-icon class=\\\"muted-text\\\">accessibility</mat-icon>\\r\\n                        <span><b><i>Civilité</i> : {{user.statusFamiliale}}</b></span>\\r\\n                    </p>\\r\\n                    <p fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n                        <mat-icon class=\\\"muted-text\\\">face</mat-icon>\\r\\n                        <span><b><i>Appellation</i> : {{user.nom}} {{user.prenom}}</b></span>\\r\\n                    </p>\\r\\n                    <p fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n                        <mat-icon class=\\\"muted-text\\\">call</mat-icon>\\r\\n                        <span><b><i>Contact</i> : {{user.contact}}</b></span>\\r\\n                    </p>\\r\\n                    <p fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n                        <mat-icon class=\\\"muted-text\\\">security</mat-icon>\\r\\n                        <span><b><i>Adresse</i> : {{user.adresse}}</b></span>\\r\\n                    </p>\\r\\n                </div>\\r\\n            </div>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div *ngIf=\\\"users\\\" fxLayout=\\\"row wrap\\\">\\r\\n    <div fxFlex=\\\"100\\\" class=\\\"flex-p\\\"> \\r\\n        <mat-card class=\\\"p-0 text-center\\\">           \\r\\n            <pagination-controls class=\\\"gradus-pagination\\\" autoHide=\\\"true\\\" maxSize=\\\"3\\\" (pageChange)=\\\"onPageChanged($event)\\\"></pagination-controls>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"isLoadingResults\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"user-spinner\\\">   \\r\\n    <mat-spinner color=\\\"primary\\\"></mat-spinner>\\r\\n</div>\\r\\n\\r\\n\";","export default \".user-name {\\n  padding: 0 12px;\\n  font-weight: 400;\\n}\\n\\n.user-content {\\n  padding: 10px;\\n}\\n\\n.user-content .user-img {\\n  position: relative;\\n}\\n\\n.user-content .user-img img {\\n  border-radius: 50%;\\n  width: 80px;\\n  height: 80px;\\n}\\n\\n.user-content .user-img img.blocked {\\n  opacity: 0.5;\\n}\\n\\n.user-content .user-img .mat-icon {\\n  position: absolute;\\n  top: -8px;\\n  left: -8px;\\n  font-size: 96px;\\n  height: 96px;\\n  width: 96px;\\n}\\n\\n.user-content .mat-slide-toggle {\\n  margin-top: 15px;\\n}\\n\\n.user-content .user-details span {\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n}\\n\\n.user-content .user-details .mat-icon {\\n  padding: 2px 10px;\\n}\\n\\n.user-content .user-details.blocked {\\n  opacity: 0.5;\\n}\\n\\n.user-search {\\n  width: 0;\\n  overflow: hidden;\\n  transition: 0.3s;\\n}\\n\\n.user-search .mat-form-field {\\n  width: 100% !important;\\n  text-align: center !important;\\n  height: 36px;\\n}\\n\\n.user-search .mat-form-field-infix {\\n  padding: 5px;\\n}\\n\\n.user-search .mat-input-element {\\n  text-align: center;\\n}\\n\\n.user-search.show {\\n  width: 100%;\\n  overflow: visible;\\n}\\n\\n.user-spinner {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFxjbGllbnQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxlQUFBO0VBQ0EsZ0JBQUE7QUFDSjs7QUFDQTtFQUNJLGFBQUE7QUFFSjs7QUFESTtFQUNJLGtCQUFBO0FBR1I7O0FBRlE7RUFDSSxrQkFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0FBSVo7O0FBSFk7RUFDSSxZQUFBO0FBS2hCOztBQUZRO0VBQ0ksa0JBQUE7RUFDQSxTQUFBO0VBQ0EsVUFBQTtFQUNBLGVBQUE7RUFDQSxZQUFBO0VBQ0EsV0FBQTtBQUlaOztBQURJO0VBQ0ksZ0JBQUE7QUFHUjs7QUFBUTtFQUNJLGdCQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtBQUVaOztBQUFRO0VBQ0ksaUJBQUE7QUFFWjs7QUFBUTtFQUNJLFlBQUE7QUFFWjs7QUFHQTtFQUNJLFFBQUE7RUFDQSxnQkFBQTtFQUNBLGdCQUFBO0FBQUo7O0FBQ0k7RUFDSSxzQkFBQTtFQUNBLDZCQUFBO0VBQ0EsWUFBQTtBQUNSOztBQUNJO0VBQ0ksWUFBQTtBQUNSOztBQUNJO0VBQ0ksa0JBQUE7QUFDUjs7QUFDSTtFQUNJLFdBQUE7RUFDQSxpQkFBQTtBQUNSOztBQUdBO0VBQ0ksa0JBQUE7RUFDQSxNQUFBO0VBQU8sUUFBQTtFQUFVLFNBQUE7RUFBVyxPQUFBO0FBR2hDIiwiZmlsZSI6ImNsaWVudC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi51c2VyLW5hbWV7XHJcbiAgICBwYWRkaW5nOiAwIDEycHg7XHJcbiAgICBmb250LXdlaWdodDogNDAwO1xyXG59XHJcbi51c2VyLWNvbnRlbnR7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgLnVzZXItaW1ne1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICBpbWd7XHJcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgICAgICAgICAgd2lkdGg6IDgwcHg7XHJcbiAgICAgICAgICAgIGhlaWdodDogODBweDtcclxuICAgICAgICAgICAgJi5ibG9ja2Vke1xyXG4gICAgICAgICAgICAgICAgb3BhY2l0eTogMC41O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC5tYXQtaWNvbntcclxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICB0b3A6IC04cHg7XHJcbiAgICAgICAgICAgIGxlZnQ6IC04cHg7ICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogOTZweDtcclxuICAgICAgICAgICAgaGVpZ2h0OiA5NnB4O1xyXG4gICAgICAgICAgICB3aWR0aDogOTZweDsgICAgICAgICAgICBcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAubWF0LXNsaWRlLXRvZ2dsZXtcclxuICAgICAgICBtYXJnaW4tdG9wOiAxNXB4O1xyXG4gICAgfVxyXG4gICAgLnVzZXItZGV0YWlsc3tcclxuICAgICAgICBzcGFue1xyXG4gICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgICAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcclxuICAgICAgICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICAgICAgICB9XHJcbiAgICAgICAgLm1hdC1pY29ue1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAycHggMTBweDtcclxuICAgICAgICB9IFxyXG4gICAgICAgICYuYmxvY2tlZHtcclxuICAgICAgICAgICAgb3BhY2l0eTogMC41O1xyXG4gICAgICAgIH1cclxuICAgIH0gICAgXHJcbn1cclxuXHJcbi51c2VyLXNlYXJjaHtcclxuICAgIHdpZHRoOiAwO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIHRyYW5zaXRpb246IDAuM3M7XHJcbiAgICAubWF0LWZvcm0tZmllbGR7XHJcbiAgICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXIgIWltcG9ydGFudDtcclxuICAgICAgICBoZWlnaHQ6IDM2cHg7ICAgICAgICBcclxuICAgIH1cclxuICAgIC5tYXQtZm9ybS1maWVsZC1pbmZpeHtcclxuICAgICAgICBwYWRkaW5nOiA1cHg7XHJcbiAgICB9XHJcbiAgICAubWF0LWlucHV0LWVsZW1lbnR7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgfVxyXG4gICAgJi5zaG93e1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIG92ZXJmbG93OiB2aXNpYmxlO1xyXG4gICAgfVxyXG59XHJcblxyXG4udXNlci1zcGlubmVye1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOjA7IHJpZ2h0OiAwOyBib3R0b206IDA7IGxlZnQ6MDtcclxufSJdfQ== */\";","import { ClientAdminService } from './../client-admin-service';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { SnackBarService } from 'src/app/shared/services/SnackBar';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-update',\r\n  templateUrl: './update.component.html',\r\n  styleUrls: ['./update.component.scss']\r\n})\r\nexport class UpdateClientAdminComponent implements OnInit {\r\n\r\n  user : FormGroup;\r\n  isLoadingResults= false;\r\n  constructor(public dialogRef: MatDialogRef<UpdateClientAdminComponent>,private snackBar: SnackBarService, private clientServices: ClientAdminService,\r\n    public dialog: MatDialog, @Inject(MAT_DIALOG_DATA) public data: any,private _fb: FormBuilder,) {\r\n      \r\n     }\r\n  ngOnInit(): void {\r\n    this.init();\r\n  }\r\n\r\n  init(){\r\n    if(this.data.user){\r\n        this.user = this._fb.group({\r\n          id : [this.data.user.id],\r\n          nom : [this.data.user.nom, Validators.required],\r\n          prenom: [this.data.user.prenom, Validators.required],\r\n          provider: this.data.user.provider,\r\n          email: [this.data.user.email],\r\n          contact: this.data.user.contact,\r\n          imgUrl : this.data.user.imgUrl,\r\n          societe : this.data.user.societe,\r\n          statusFamiliale: [this.data.user.statusFamiliale, Validators.required],\r\n          heureAContacter: this.data.user.heureAContacter,\r\n          adresse:[this.data.user.adresse]\r\n        })\r\n    }\r\n  }\r\n\r\n  onSubmit(){\r\n    //console.log(this.user.value);\r\n   if(this.user.valid){\r\n    this.isLoadingResults=true;\r\n      this.clientServices.updateUser(this.user.value, this.data.user.id).subscribe( (data)=>{\r\n        this.isLoadingResults=false;\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n            this.isLoadingResults=false;\r\n            if(error.status<300)\r\n            {\r\n              this.dialogRef.close();\r\n              this.snackBar.openSnackBar(\"Element modifier  avec succès\", \"OK\",3000);\r\n            }\r\n            else{\r\n              this.snackBar.openSnackBar(\"Element non Ajouter car le mail existe deja\", \"OK\",3000);\r\n            }\r\n        });\r\n   }\r\n   else{\r\n    this.snackBar.openSnackBar(\"Remplire tous les champs svp\", \"OK\",5000);\r\n   }\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ1cGRhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { ClientAdminService } from './client-admin-service';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ClientComponent } from './client.component';\r\nimport { UpdateClientAdminComponent } from './update/update.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { UtilsModule } from 'src/app/shared/utils/utils.module';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { authInterceptorProviders } from '../login/_helper/AuthInterceptorService';\r\nimport { ErrorInterceptor } from '../login/_helper/error.interceptor';\r\n\r\nexport const routes = [\r\n  { path: '', component: ClientComponent, data: { breadcrumb: 'Client' } },\r\n];\r\n\r\n\r\n@NgModule({\r\n  declarations: [ClientComponent, UpdateClientAdminComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PerfectScrollbarModule,\r\n    SharedModule,\r\n    HttpClientModule,\r\n    UtilsModule,\r\n    NgxPaginationModule,\r\n  ],\r\n  providers:[ClientAdminService,\r\n    authInterceptorProviders,\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },]\r\n})\r\nexport class ClientModule { }\r\n"]}