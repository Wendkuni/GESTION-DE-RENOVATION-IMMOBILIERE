{"version":3,"sources":["webpack:///src/app/features/statistique/statistique-duree/statistique-duree.component.scss","webpack:///src/app/features/statistique/statistique-elements/statistique-elements.component.html","webpack:///src/app/features/statistique/statistique.component.ts","webpack:///src/app/features/statistique/statistique-budget/statistique-budget.component.scss","webpack:///src/app/features/statistique/statistique-elements/statistique-elements.component.scss","webpack:///src/app/features/statistique/statistique-duree/statistique-duree.component.html","webpack:///src/app/features/statistique/statistique-duree/statistique-duree.component.ts","webpack:///src/app/features/statistique/statistique.component.scss","webpack:///src/app/features/statistique/statistique.module.ts","webpack:///src/app/features/statistique/statistique-elements/statistique-elements.component.ts","webpack:///src/app/features/statistique/statistique-budget/statistique-budget.component.ts","webpack:///src/app/features/statistique/statistique.component.html","webpack:///src/app/features/statistique/statistique-budget/statistique-budget.component.html"],"names":["StatistiqueComponent","projetService","donneeMois","donneeAnnee","dateYear","listYear","listMois","listBudgetGeneral","listBudgetAnnee","listBudgetMois","budgetAnnee","colorRapprot","domain","budgetMois","listPro","isLoadingResults","optionAnnee","showXAxis","showYAxis","gradient","showLegend","showXAxisLabel","xAxisLabelAnnee","xAxisLabelMois","showYAxisLabel","yAxisLabel","yAxisLabelBudget","colorScheme","autoScale","optionMois","optionUtilisateur","optionClient","optionBudget","budgetCritere","MOIS","id","name","getAllyear","getProjet","subscribe","data","projet","console","log","statistique","series","getElement","i","Date","getFullYear","push","arr","requete","filter","el","projetRenovation","renovation","nomRenovation","toLowerCase","indexOf","requete2","undefined","dateDemarrage","dateFinission","getMonth","budget","client","email","rechercheOptionAnnee","anneeDebut","anneeFin","rechercheOptionMois","moisDebut","moisFin","rechercheOptionClient","nomClient","rechercheOptionBudget","annee","BudgetMois","list","nbA","listAnneeStatistique","length","anneeValue","toString","value","forEach","budgetAnneeValue","nbM","listMoisStatistique","moisValue","budgetMoisValue","selector","template","StatistiqueDureeComponent","appSettings","listeAnnee","listeMois","settings","routes","path","component","breadcrumb","StatistiqueModule","declarations","imports","forChild","providers","StatistiqueElementsComponent","StatistiqueBudgetComponent","xAxisLabel","statistiqueBugetAnnee","statistiqueBugetMois"],"mappings":"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","file":"features-statistique-statistique-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzdGF0aXN0aXF1ZS1kdXJlZS5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<p>statistique-elements works!</p>\\n\";","import { Component, OnInit } from '@angular/core';\nimport { CloturerRenovation } from 'src/app/shared/models/cloturerRenovation.class';\nimport { ProjetRenauvation } from 'src/app/shared/models/demarrage-projet/projet-renovation.model';\nimport { CloturerRenovationService } from '../fin-projet-renovation/cloturerProjet.service';\n\n@Component({\n  selector: 'app-statistique',\n  templateUrl: './statistique.component.html',\n  styleUrls: ['./statistique.component.scss']\n})\nexport class StatistiqueComponent implements OnInit {\n  donneeMois: any=[];\n  donneeAnnee: any=[];\n  dateYear=[];\n  listYear= [];\n  listMois = [];\n  listBudgetGeneral = [];\n  listBudgetAnnee = [];\n  listBudgetMois= [];\n  budgetAnnee = 0;\n  public colorRapprot = {\n    domain: ['#2F3E9E', '#D22E2E', '#378D3B', '#0096A6', '#F47B00', '#606060']\n  };\n  budgetMois =0;\n  projet :CloturerRenovation[];\n  listPro :CloturerRenovation[] = [];\n  isLoadingResults=true;\n  optionAnnee = false;\n  anneeDebut; anneeFin;\n  public showXAxis = true;\n  public showYAxis = true;\n  public gradient = false;\n  public showLegend = false;\n  public showXAxisLabel = true;\n  public xAxisLabelAnnee = 'Années';\n  public xAxisLabelMois = 'Mois';\n  public showYAxisLabel = true;\n  public yAxisLabel = 'nombre de projet';\n  public yAxisLabelBudget = 'Budget Total';\n  public colorScheme = {\n    domain: ['#2F3E9E']\n  }; \n  public autoScale = true;\n\n\n  optionMois= false;\n  moisDebut; moisFin;\n\n\n  optionUtilisateur = false;\n  nomUtilisateur;\n\n\n  optionClient = false;\n  nomClient;\n\n\n  optionBudget = false;\n  budget;budgetCritere=\"egale\";\n\n  constructor(public projetService: CloturerRenovationService) { \n    this.getAllyear();\n  }\n\n  getElement(){\n    this.isLoadingResults=true;\n    this.projetService.getProjet().subscribe((data) =>{\n      this.projet = data;\n      console.log(this.projet);\n      this.statistique(this.projet);\n      this.donneeMois = [{\n        name:\"Nombre de projet cloturé au mois de  \",\n        series:this.listMois\n      }]\n  \n      this.donneeAnnee = [{\n        name:\"Nombre de projet cloturé à l'année \",\n        series:this.listYear\n      }]\n      this.isLoadingResults=false;\n    })\n  }\n  ngOnInit(): void {\n    this.getElement();\n  }\n  getAllyear(){\n    for(let i=1996;i<=new Date().getFullYear();i++)\n    {\n      this.dateYear.push(i+1);\n    }\n  }\n\n  rechercheNomRenovation(arr : CloturerRenovation[], requete) {\n    return arr.filter(function (el) {\n      return  el.projetRenovation.renovation.nomRenovation.toLowerCase().indexOf(requete.toLowerCase()) !== -1;\n    })\n  }\n\n\n  rechercheOptionAnnee(arr : CloturerRenovation[], requete, requete2) :CloturerRenovation[]  {\n    return arr.filter(function (el) {\n      if(requete2==undefined){\n        return  (new Date(el.projetRenovation.dateDemarrage).getFullYear() >=requete);\n      }\n      else if(requete==undefined){\n        return  (new Date(el.projetRenovation.dateFinission).getFullYear() <=requete2);\n      }\n      else{\n       return  (new Date(el.projetRenovation.dateDemarrage).getFullYear() >=requete && new Date(el.projetRenovation.dateFinission).getFullYear() <=requete2);\n      }\n    \n      //el.projetRenovation.dateFinission.toString().toLowerCase().indexOf(requete2.toString()) !== 1;\n    })\n  }\n\n  rechercheOptionMois(arr : CloturerRenovation[], requete, requete2) :CloturerRenovation[]  {\n    return arr.filter(function (el) {\n     if(requete2==undefined){\n       return  (new Date(el.projetRenovation.dateDemarrage).getMonth() >=requete);\n     }\n     else if(requete==undefined){\n      return  (new Date(el.projetRenovation.dateFinission).getMonth() <requete2);\n     }\n     else{\n      return  (new Date(el.projetRenovation.dateDemarrage).getMonth() ==requete && new Date(el.projetRenovation.dateFinission).getMonth() ==requete2);\n     }\n      //el.projetRenovation.dateFinission.toString().toLowerCase().indexOf(requete2.toString()) !== 1;\n    })\n  }\n  rechercheOptionBudget(arr : CloturerRenovation[], requete, requete2) :CloturerRenovation[]  {\n    return arr.filter(function (el) {\n      switch(requete2){\n        case \"egale\":\n          return el.projetRenovation.budget==requete;\n          break;\n        case \"superieure\":\n          return el.projetRenovation.budget>requete;\n          break;\n        default:\n          return el.projetRenovation.budget<requete;\n      }\n      return el.projetRenovation.budget==requete;\n      //el.projetRenovation.dateFinission.toString().toLowerCase().indexOf(requete2.toString()) !== 1;\n    })\n  }\n  rechercheOptionClient(arr : CloturerRenovation[], requete) :CloturerRenovation[]  {\n    return arr.filter(function (el) {\n      return  el.projetRenovation.renovation.client.email.toLowerCase().indexOf(requete.toLowerCase()) !== -1;\n    })\n  }\n\n  recherche(){\n    this.isLoadingResults=true;\n    if(this.optionAnnee)\n    {\n      this.listPro = this.rechercheOptionAnnee(this.projet, this.anneeDebut, this.anneeFin)\n    }\n    if(this.optionMois){\n      if(this.optionAnnee)\n      {\n        this.listPro = this.rechercheOptionMois(this.listPro, this.moisDebut, this.moisFin)\n      }\n      else{\n        this.listPro = this.rechercheOptionMois(this.projet, this.moisDebut, this.moisFin)\n      }\n    }\n    if(this.optionClient)\n    {\n      if(this.optionAnnee || this.optionMois)\n      {\n        this.listPro = this.rechercheOptionClient(this.listPro, this.nomClient)\n      }\n      else{\n        this.listPro = this.rechercheOptionClient(this.projet, this.nomClient)\n      }\n    }\n    if(this.optionBudget)\n    {\n      if(this.optionAnnee || this.optionClient || this.optionMois)\n      {\n        this.listPro = this.rechercheOptionBudget(this.listPro, this.budget, this.budgetCritere)\n      }\n      else{\n        this.listPro = this.rechercheOptionBudget(this.projet, this.budget, this.budgetCritere)\n      }\n    }\n    console.log()\n    this.statistique(this.listPro);\n    this.donneeMois = [{\n      name:\"Nombre de projet cloturé au mois de  \",\n      series:this.listMois\n    }]\n\n    this.donneeAnnee = [{\n      name:\"Nombre de projet cloturé à l'année \",\n      series:this.listYear\n    }]\n    this.isLoadingResults=false;\n  }\n\n  listAnneeStatistique(arr, requete) : CloturerRenovation[]{\n    return arr.filter(function (el) {\n      //this.budgetAnnee +=el.projetRenovation.budget;\n        return  (new Date(el.projetRenovation.dateFinission).getFullYear() ==requete);\n     })\n  }\n  listMoisStatistique(arr, requete, annee, BudgetMois) : CloturerRenovation[]{\n    return arr.filter(function (el) {\n        BudgetMois +=el.projetRenovation.budget;\n        return (new Date(el.projetRenovation.dateFinission).getFullYear() ==annee) && (new Date(el.projetRenovation.dateFinission).getMonth() ==requete);\n     })\n  }\n\n  statistique(list: CloturerRenovation[]){\n    this.listYear=[];\n    this.listBudgetAnnee=[];\n    this.listMois=[];\n    this.listBudgetMois=[];\n      for(let i=1996;i<=new Date().getFullYear();i++){\n        this.budgetAnnee=0;\n        let nbA = this.listAnneeStatistique(list,i);\n        if(nbA.length>0 || this.listYear.length>0){\n          //console.log(this.budgetAnnee)\n          let anneeValue= {\n            name : i.toString(),\n            value : nbA.length\n          }\n          this.listYear.push(anneeValue);\n          nbA.forEach(value=>{\n            this.budgetAnnee+=value.projetRenovation.budget;\n          })\n          let budgetAnneeValue = {\n            name : i.toString(),\n            value : this.budgetAnnee\n          }\n          this.listBudgetAnnee.push(budgetAnneeValue);\n        }\n          this.MOIS.forEach((value)=>{\n            this.budgetMois=0;\n            let nbM = this.listMoisStatistique(list,value.id,i,this.budgetMois);\n            if(nbM.length>0 || this.listMois.length>0)\n            {\n              let moisValue= {\n                name : value.name+\" \"+i.toString(),\n                value : nbM.length\n              }\n              this.listMois.push(moisValue);\n              nbM.forEach(value=>{\n                this.budgetMois+=value.projetRenovation.budget;\n              })\n              let budgetMoisValue = {\n                name : value.name+\" \"+i.toString(),\n                value : this.budgetMois\n              }\n              this.listBudgetMois.push(budgetMoisValue);\n            }\n          })\n       }\n       console.log(this.listYear);\n       console.log(this.listMois);\n       console.log(this.listBudgetAnnee);\n       console.log(this.listBudgetMois);\n  }\n\n  MOIS = [{\n    id: 0,\n    name: 'Janvier'\n  },\n  {\n    id: 1,\n    name: 'Fevrier'\n  },\n  {\n    id: 2,\n    name: 'Mars'\n  },\n  {\n    id: 3,\n    name: 'Avril'\n  },\n  {\n    id: 4,\n    name: 'Mai'\n  },\n  {\n    id: 5,\n    name: 'Juin'\n  },\n  {\n    id: 6,\n    name: 'Juillet'\n  },\n  {\n    id: 7,\n    name: 'Aout'\n  },\n  {\n    id: 8,\n    name: 'Septembre'\n  },\n  {\n    id: 9,\n    name: 'Octobre'\n  },\n  {\n    id: 10,\n    name: 'Novembre'\n  },\n  {\n    id: 11,\n    name: 'Decembre'\n  },\n]\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzdGF0aXN0aXF1ZS1idWRnZXQuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzdGF0aXN0aXF1ZS1lbGVtZW50cy5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"\";","import { tacheInterface } from './../../demarrage-projet-renovation/bilan/circulaire/circulaire.component';\nimport { single, multi } from './../charts.data';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { AppSettings } from 'src/app/app.settings';\nimport { Settings } from 'src/app/app.settings.model';\n\nexport interface DataAnalyse{\n  name: string;\n  serie: tacheInterface[];\n}\n\n@Component({\n  selector: 'app-statistique-duree',\n  templateUrl: './statistique-duree.component.html',\n  styleUrls: ['./statistique-duree.component.scss']\n})\nexport class StatistiqueDureeComponent implements OnInit {\n  public single: any[];\n  public multi: any[];\n  donneeMois: any=[];\n  donneeAnnee: any=[];\n  @Input('listeAnnee')\n  listeAnnee :tacheInterface[] = [];\n  @Input('listeMois')\n  listeMois:tacheInterface[] = [];\n  public showXAxis = true;\n  public showYAxis = true;\n  public gradient = false;\n  public showLegend = false;\n  public showXAxisLabel = true;\n  public xAxisLabelAnnee = 'Années';\n  public xAxisLabelMois = 'Mois';\n  public showYAxisLabel = true;\n  public yAxisLabel = 'nombre de projet';\n  public colorScheme = {\n    domain: ['#2F3E9E']\n  }; \n  public autoScale = true;\n  public settings: Settings;\n  constructor(public appSettings:AppSettings) {\n    this.settings = this.appSettings.settings; \n    //Object.assign(this, {single, multi})   \n  }\n\n  ngOnInit(): void {\n    this.donneeMois = [{\n      name:\"Nombre de projet cloturé au mois de  \",\n      series:this.listeMois\n    }]\n\n    this.donneeAnnee = [{\n      name:\"Nombre de projet cloturé à l'année \",\n      series:this.listeAnnee\n    }]\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzdGF0aXN0aXF1ZS5jb21wb25lbnQuc2NzcyJ9 */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StatistiqueComponent } from './statistique.component';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { NgGanttEditorModule } from 'ng-gantt';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { CloturerRenovationService } from '../fin-projet-renovation/cloturerProjet.service';\nimport { StatistiqueDureeComponent } from './statistique-duree/statistique-duree.component';\nimport { StatistiqueBudgetComponent } from './statistique-budget/statistique-budget.component';\nimport { StatistiqueElementsComponent } from './statistique-elements/statistique-elements.component';\n\nexport const routes = [\n  { path: '', component: StatistiqueComponent, data: { breadcrumb: 'Statistique' } },\n];\n\n\n@NgModule({\n  declarations: [StatistiqueComponent, StatistiqueDureeComponent, StatistiqueBudgetComponent, StatistiqueElementsComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    FormsModule,\n    NgxChartsModule,\n    ReactiveFormsModule,\n    NgGanttEditorModule,\n    SharedModule,\n    NgSelectModule\n  ],\n  providers: [CloturerRenovationService]\n})\nexport class StatistiqueModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-statistique-elements',\n  templateUrl: './statistique-elements.component.html',\n  styleUrls: ['./statistique-elements.component.scss']\n})\nexport class StatistiqueElementsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { multi, single } from './../charts.data';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { AppSettings } from 'src/app/app.settings';\nimport { Settings } from 'src/app/app.settings.model';\n\n@Component({\n  selector: 'app-statistique-budget',\n  templateUrl: './statistique-budget.component.html',\n  styleUrls: ['./statistique-budget.component.scss']\n})\nexport class StatistiqueBudgetComponent implements OnInit {\n\n  public single: any[];\n  public multi: any[];\n  public showXAxis = true;\n  public showYAxis = true;\n  public gradient = false;\n  public showLegend = false;\n  public showXAxisLabel = true;\n  public xAxisLabel = 'Country';\n  public showYAxisLabel = true;\n  @Input('budgetStatistique')\n  statistiqueBugetAnnee: any=[]\n  @Input('budgetStatistiqueMois')\n  statistiqueBugetMois: any=[]\n  public yAxisLabel = 'Population';\n  public colorScheme = {\n    domain: ['#378D3B', '#0096A6', '#F47B00', '#606060']\n  };  \n  public settings: Settings;\n\n  constructor(public appSettings:AppSettings) {\n    this.settings = this.appSettings.settings; \n    //Object.assign(this, {single, multi}); \n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","export default \"<div fxLayout=\\\"row wrap\\\">\\n    <div fxFlex=\\\"100\\\" class=\\\"flex-p\\\">\\n        <mat-accordion>\\n                    <mat-expansion-panel expanded hideToggle>\\n                        <mat-expansion-panel-header>\\n                        <mat-panel-title>\\n                           <h3>Critere Extraction</h3>\\n                        </mat-panel-title>\\n                    </mat-expansion-panel-header>\\n                    <mat-divider></mat-divider>\\n                        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\n                            <mat-checkbox \\n                                [color]=\\\"'primary'\\\" \\n                                (change)=\\\"optionAnnee=$event.checked\\\"\\n                                [checked]=\\\"optionAnnee\\\" \\n                                class=\\\"example-margin\\\">Analyse selon les années </mat-checkbox>\\n                            <ng-select *ngIf=\\\"optionAnnee\\\" class=\\\"select\\\"  [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"100\\\" [fxFlex.xl]=\\\"100\\\" [items]=\\\"dateYear\\\"\\n                                placeholder=\\\"Selectionner l'année de demarrage\\\"\\n                                [(ngModel)]=\\\"anneeDebut\\\">\\n                                <ng-template ng-loadingspinner-tmp>\\n                                    <div class=\\\"lds-ellipsis\\\">\\n                                        <div></div>\\n                                        <div></div>\\n                                        <div></div>\\n                                        <div></div>\\n                                    </div>\\n                                </ng-template>\\n                            </ng-select>\\n                            <ng-select *ngIf=\\\"optionAnnee\\\" class=\\\"select\\\"  [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"100\\\" [fxFlex.xl]=\\\"100\\\" [items]=\\\"dateYear\\\"\\n                                placeholder=\\\"Selectionner l'année de demarrage\\\"\\n                                [(ngModel)]=\\\"anneeFin\\\">\\n                                <ng-template ng-loadingspinner-tmp>\\n                                    <div class=\\\"lds-ellipsis\\\">\\n                                        <div></div>\\n                                        <div></div>\\n                                        <div></div>\\n                                        <div></div>\\n                                    </div>\\n                                </ng-template>\\n                            </ng-select>\\n                            \\n                        </div>\\n\\n                        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\n                        <mat-checkbox \\n                            [color]=\\\"'primary'\\\" \\n                            (change)=\\\"optionMois=$event.checked\\\"\\n                            [checked]=\\\"optionMois\\\" \\n                            class=\\\"example-margin\\\">Analyse selon les mois </mat-checkbox>\\n                            <mat-form-field appearance=\\\"outline\\\" *ngIf=\\\"optionMois\\\">\\n                                <mat-label>mois de depart chantier</mat-label>\\n                                <mat-select [(ngModel)]=\\\"moisDebut\\\">\\n                                    <mat-option></mat-option>\\n                                    <mat-option [value]=\\\"option.id\\\" *ngFor=\\\"let option of MOIS\\\">{{ option.name }}</mat-option>\\n                                </mat-select>\\n                            </mat-form-field>\\n                            <mat-form-field appearance=\\\"outline\\\" *ngIf=\\\"optionMois\\\">\\n                                <mat-label>mois de cloture chantier</mat-label>\\n                                <mat-select [(ngModel)]=\\\"moisFin\\\">\\n                                    <mat-option></mat-option>\\n                                    <mat-option [value]=\\\"option.id\\\" *ngFor=\\\"let option of MOIS\\\">{{ option.name }}</mat-option>\\n                                </mat-select>\\n                            </mat-form-field>\\n                            \\n                        </div>\\n\\n                        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\n                            <mat-checkbox \\n                            [color]=\\\"'primary'\\\" \\n                            (change)=\\\"optionClient=$event.checked\\\"\\n                            [checked]=\\\"optionClient\\\" \\n                            class=\\\"example-margin\\\">Analyse selon les clients</mat-checkbox>\\n                            <mat-form-field appearance=\\\"outline\\\" *ngIf=\\\"optionClient\\\">\\n                                <mat-label>mail de client</mat-label>\\n                                <input matInput [(ngModel)]=\\\"nomClient\\\" (keyup)=\\\"rechercheOptionClient(projet, nomClient)\\\">\\n                            </mat-form-field>\\n                        </div>\\n                        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\n                            <mat-checkbox \\n                                [color]=\\\"'primary'\\\" \\n                                (change)=\\\"optionBudget=$event.checked\\\"\\n                                [checked]=\\\"optionBudget\\\" \\n                                class=\\\"example-margin\\\">Analyse selon le budget</mat-checkbox>\\n                            <mat-form-field appearance=\\\"outline\\\" *ngIf=\\\"optionBudget\\\">\\n                                <mat-label>entre le bugdet</mat-label>\\n                                <input matInput [(ngModel)]=\\\"budget\\\">\\n                            </mat-form-field>\\n                            <mat-form-field appearance=\\\"outline\\\" *ngIf=\\\"optionBudget\\\">\\n                                <mat-label>Critere </mat-label>\\n                                <mat-select [(ngModel)]=\\\"budgetCritere\\\">\\n                                    <mat-option value=\\\"egale\\\">egale</mat-option>\\n                                    <mat-option value=\\\"superieure\\\">superieure</mat-option>\\n                                    <mat-option value=\\\"inferieure\\\">inferieure</mat-option>\\n                                </mat-select>\\n                            </mat-form-field>\\n                        </div>\\n                        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\n                            <button mat-raised-button \\n                            (click)=\\\"recherche()\\\" color=\\\"primary\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\" >\\n                                Rechercher\\n                            </button>\\n                        </div>\\n                    </mat-expansion-panel>\\n        </mat-accordion>\\n    </div>\\n</div>\\n\\n<div fxLayout=\\\"row wrap\\\" *ngIf=\\\"!isLoadingResults\\\">\\n    <div fxFlex=\\\"100\\\" class=\\\"flex-p\\\">\\n<mat-tab-group mat-stretch-tabs>\\n  <mat-tab label=\\\"Statistique en fonction de la durée\\\">\\n  <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row wrap\\\">\\n    <div fxFlex=\\\"100\\\" class=\\\"flex-p\\\"> \\n        <mat-card>\\n            <mat-card-header fxLayoutAlign=\\\"center center\\\">                \\n                <mat-card-subtitle><h2>nombre de projet realiser en fonction des années</h2></mat-card-subtitle>\\n            </mat-card-header>\\n            <div class=\\\"w-100 h-300p\\\">\\n                <ngx-charts-line-chart\\n                    [scheme]=\\\"colorScheme\\\"\\n                    [results]=\\\"donneeAnnee\\\"\\n                    [gradient]=\\\"gradient\\\"\\n                    [xAxis]=\\\"showXAxis\\\"\\n                    [yAxis]=\\\"showYAxis\\\"\\n                    [legend]=\\\"showLegend\\\"\\n                    [showXAxisLabel]=\\\"showXAxisLabel\\\"\\n                    [showYAxisLabel]=\\\"showYAxisLabel\\\"\\n                    [xAxisLabel]=\\\"xAxisLabelAnnee\\\"\\n                    [yAxisLabel]=\\\"yAxisLabel\\\"\\n                    [autoScale]=\\\"autoScale\\\">\\n                </ngx-charts-line-chart>                  \\n            </div>\\n        </mat-card>\\n    </div>\\n    <div fxFlex=\\\"100\\\" class=\\\"flex-p\\\">\\n        <mat-card>\\n            <mat-card-header fxLayoutAlign=\\\"center center\\\">                \\n                <mat-card-subtitle><h2>nombre de projet realiser en fonction des mois</h2></mat-card-subtitle>\\n            </mat-card-header>\\n            <div class=\\\"w-100 h-300p\\\">\\n                <ngx-charts-area-chart\\n                    [scheme]=\\\"colorScheme\\\"\\n                    [results]=\\\"donneeMois\\\"\\n                    [gradient]=\\\"gradient\\\"\\n                    [xAxis]=\\\"showXAxis\\\"\\n                    [yAxis]=\\\"showYAxis\\\"\\n                    [legend]=\\\"showLegend\\\"\\n                    [showXAxisLabel]=\\\"showXAxisLabel\\\"\\n                    [showYAxisLabel]=\\\"showYAxisLabel\\\"\\n                    [xAxisLabel]=\\\"xAxisLabelMois\\\"\\n                    [yAxisLabel]=\\\"yAxisLabel\\\"\\n                    [autoScale]=\\\"autoScale\\\">\\n                </ngx-charts-area-chart>         \\n            </div>\\n        </mat-card>\\n    </div>\\n    <div fxFlex=\\\"100\\\" > \\n        <mat-card>\\n            <mat-card-header fxLayoutAlign=\\\"center center\\\">                \\n                <mat-card-subtitle><h2>Rapport total du budget des projets realisés en fonction des années</h2></mat-card-subtitle>\\n            </mat-card-header>\\n            <div class=\\\"w-100 h-300p\\\">\\n                <ngx-charts-bar-vertical\\n                      [scheme]=\\\"colorScheme\\\"\\n                      [gradient]=\\\"gradient\\\"\\n                      [xAxis]=\\\"showXAxis\\\"\\n                      [yAxis]=\\\"showYAxis\\\"\\n                      [legend]=\\\"showLegend\\\"\\n                      [showXAxisLabel]=\\\"showXAxisLabel\\\"\\n                      [showYAxisLabel]=\\\"showYAxisLabel\\\"\\n                      [xAxisLabel]=\\\"xAxisLabelAnnee\\\"\\n                      [yAxisLabel]=\\\"yAxisLabelBudget\\\"\\n                      [results]=\\\"listBudgetAnnee\\\">\\n                </ngx-charts-bar-vertical>                  \\n            </div>\\n        </mat-card>\\n    </div>\\n    <div fxFlex=\\\"100\\\" class=\\\"flex-p\\\"> \\n        <mat-card>\\n            <mat-card-header fxLayoutAlign=\\\"center center\\\">                \\n                <mat-card-subtitle><h2>Rapport total du budget des projets realisés en fonction des mois</h2></mat-card-subtitle>\\n            </mat-card-header>\\n            <div class=\\\"w-100 h-300p\\\">\\n                <ngx-charts-bar-vertical\\n                      [scheme]=\\\"colorScheme\\\"\\n                      [gradient]=\\\"gradient\\\"\\n                      [xAxis]=\\\"showXAxis\\\"\\n                      [yAxis]=\\\"showYAxis\\\"\\n                      [legend]=\\\"showLegend\\\"\\n                      [showXAxisLabel]=\\\"showXAxisLabel\\\"\\n                      [showYAxisLabel]=\\\"showYAxisLabel\\\"\\n                      [xAxisLabel]=\\\"xAxisLabelMois\\\"\\n                      [yAxisLabel]=\\\"yAxisLabelBudget\\\"\\n                      [results]=\\\"listBudgetMois\\\">\\n                </ngx-charts-bar-vertical>                  \\n            </div>\\n        </mat-card>\\n    </div>\\n    \\n</div>\\n\\n  </mat-tab>\\n  <mat-tab label=\\\"Statistique en fonction du buget\\\">\\n<div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row wrap\\\">\\n    <div fxFlex=\\\"100\\\" class=\\\"flex-p\\\"> \\n        <mat-card>\\n            <mat-card-header fxLayoutAlign=\\\"center center\\\">                \\n                <mat-card-subtitle><h2>Rapport total du budget des projets realisés en fonction des années</h2></mat-card-subtitle>\\n            </mat-card-header>\\n            <div fxLayoutAlign=\\\"center center\\\">\\n                <ngx-charts-advanced-pie-chart\\n                    [scheme]=\\\"colorRapprot\\\"\\n                    [results]=\\\"listBudgetAnnee\\\"\\n                    [gradient]=\\\"gradient\\\">\\n                </ngx-charts-advanced-pie-chart>         \\n            </div>\\n        </mat-card>\\n    </div>\\n     <div fxFlex=\\\"100\\\" class=\\\"flex-p\\\"> \\n        <mat-card>\\n            <mat-card-header fxLayoutAlign=\\\"center center\\\">                \\n                <mat-card-subtitle><h2>Rapport total du budget des projets realisés en fonction des mois</h2></mat-card-subtitle>\\n            </mat-card-header>\\n            <div fxLayoutAlign=\\\"center center\\\">\\n                <ngx-charts-advanced-pie-chart\\n                    [scheme]=\\\"colorRapprot\\\"\\n                    [results]=\\\"listBudgetMois\\\"\\n                    [gradient]=\\\"gradient\\\">\\n                </ngx-charts-advanced-pie-chart>         \\n            </div>\\n        </mat-card>\\n    </div>\\n</div>\\n  </mat-tab>\\n</mat-tab-group>\\n    </div>\\n</div>\\n\\n\";","export default \"\";"]}