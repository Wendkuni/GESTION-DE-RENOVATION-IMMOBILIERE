{"version":3,"sources":["webpack:///src/app/features/demarrage-projet-renovation/taches/update-taches/update-taches.component.scss","webpack:///src/app/features/demarrage-projet-renovation/taches/taches.component.ts","webpack:///src/app/features/demarrage-projet-renovation/taches/taches.component.html","webpack:///src/app/features/demarrage-projet-renovation/taches/update-taches/update-taches.component.ts","webpack:///src/app/features/demarrage-projet-renovation/taches/taches.module.ts","webpack:///src/app/features/demarrage-projet-renovation/taches/update-taches/update-taches.component.html","webpack:///src/app/features/demarrage-projet-renovation/taches/taches.component.scss","webpack:///src/app/features/demarrage-projet-renovation/taches/gestion-taches.services.ts"],"names":["TachesComponent","appSettings","route","userTache","projetStorage","tacheService","router","tokenService","dialog","confirm","snackBar","tacheList","evolution","aFaire","aReFaire","valider","enCours","rechercheGeneral","isLoadingResults","displayedColumns","dataSources","settings","projet","projetRenovation","Gerant","parseInt","getGestionTache","elementGerant","elementUser","gettachess","id","subscribe","data","forEach","tache","index","niveauAvancer","push","paginator","sort","error","status","navigate","FRONTEND_ROUTES","DASHBOARD","temps","Date","dateFinition","getTime","dateDemarrage","event","types","console","log","currentIndex","previousContainer","container","previousIndex","updatetaches","openSnackBar","ngOnInit","String","supprimerAndAssigneElemet","element","tab1","tab2","t","splice","filter","trim","toLowerCase","recherche","dialogRef","open","width","disableClose","afterClosed","result","title","message","$choix","deletetaches","selector","template","providers","animations","host","UpdateTachesComponent","fb","userList","getUser","init","tacheForm","group","appellation","required","description","utilisateur","enregistre","sommeTache","verifierTaches","value","list","length","TachesExisteDeja","enregistrer","Remeniation","buttun1","buttun2","get","setValue","close","addtaches","routes","path","component","breadcrumb","TachesModule","declarations","imports","forChild","exports","GestionTacheService","http","BACK_END","DEMARRAGERENAUVATION","GESTION_TACHE","taches","post","put","AGENDA_SYSTEM"],"mappings":"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","file":"taches-taches-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ1cGRhdGUtdGFjaGVzLmNvbXBvbmVudC5zY3NzIn0= */\";","import { GestionTachesComponent } from './gestion-taches/gestion-taches.component';\r\nimport { ListTacheService } from './../projet-user/user-projet.service';\r\nimport { AvancerTache, ProjetRenauvation } from './../../../shared/models/demarrage-projet/projet-renovation.model';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Route } from '@angular/compiler/src/core';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { Settings } from 'src/app/app.settings.model';\r\nimport { Tache } from 'src/app/shared/models/demarrage-projet/projet-renovation.model';\r\nimport { SnackBarService } from 'src/app/shared/services/SnackBar';\r\nimport { AppConfirmService } from 'src/app/shared/utils/app-confirm/app-confirm.service';\r\nimport { GestionTacheService } from './gestion-taches.services';\r\nimport { UpdateTachesComponent } from './update-taches/update-taches.component';\r\nimport { environment } from 'src/environments/environment';\r\nimport { DemarrageProjetRenovationComponent } from '../demarrage-projet-renovation.component';\r\nimport { TokenStorageService } from '../../login/_helper/localStorage';\r\nimport { ProjetStorageService } from 'src/app/shared/services/ProjetRenovation.localStorage';\r\nimport { blockTransition } from 'src/app/theme/utils/app-animation';\r\n\r\n@Component({\r\n  selector: 'app-taches',\r\n  templateUrl: './taches.component.html',\r\n  styleUrls: ['./taches.component.scss'],\r\n  providers: [ListTacheService],\r\n  animations: [ blockTransition ],\r\n  host: {\r\n    '[@blockTransition]': ''\r\n  }\r\n})\r\nexport class TachesComponent implements OnInit {\r\n  tacheList: Tache[] = [];\r\n  evolution= [0,25,50,75,100];\r\n  aFaire: Tache[] = [];\r\n  aReFaire: Tache[] = [];\r\n  valider: Tache[] = [];\r\n  enCours: Tache[] = [];\r\n  pourcentage:number;\r\n\r\n  id: number;\r\n  projet: ProjetRenauvation;\r\n  rechercheGeneral = '';\r\n  isLoadingResults = false;\r\n  public settings: Settings;\r\n  Gerant: number;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  displayedColumns =['appellation', 'description','status', 'dateD', 'DateF', 'user',  'action'];\r\n  dataSources = new MatTableDataSource<Tache>(this.tacheList);\r\n  constructor(private appSettings: AppSettings,private route: ActivatedRoute,\r\n    private userTache: ListTacheService,private projetStorage: ProjetStorageService,\r\n     private tacheService: GestionTacheService,private router: Router,private tokenService: TokenStorageService,\r\n    public dialog: MatDialog, private confirm: AppConfirmService, private snackBar: SnackBarService) {\r\n    this.settings = this.appSettings.settings; \r\n    this.projet = DemarrageProjetRenovationComponent.projetRenovation;\r\n    this.Gerant = parseInt(projetStorage.getGestionTache());\r\n    // this.id = this.route.snapshot.params.id;\r\n    // console.log(this.route.snapshot.parent)\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.aFaire= [];\r\n    this.aReFaire = [];\r\n    this.valider = [];\r\n    this.enCours= [];\r\n    if(this.Gerant ==1)\r\n    {\r\n      this.elementGerant();\r\n    }\r\n    else{\r\n      this.elementUser();\r\n    }\r\n  }\r\n  elementUser(){\r\n    this.isLoadingResults = true;\r\n    this.userTache.gettachess(this.projet.id).subscribe((data)=>{\r\n      this.tacheList = data;\r\n      this.dataSources = new MatTableDataSource<Tache>(this.tacheList);\r\n      this.tacheList.forEach((tache, index)=>{\r\n        if(tache.niveauAvancer == 'VALIDER')\r\n        {\r\n          this.valider.push(tache);\r\n        }\r\n        else if(tache.niveauAvancer === 'ENCOURS')\r\n        {\r\n          this.enCours.push(tache);\r\n        }\r\n        else if(tache.niveauAvancer == 'AREFAIRE')\r\n        {\r\n          this.aReFaire.push(tache);\r\n        }\r\n        else{\r\n          this.aFaire.push(tache);\r\n        }\r\n      })\r\n      //console.log(this.dataSources);\r\n      this.isLoadingResults = false;\r\n      this.dataSources.paginator = this.paginator;\r\n      this.dataSources.sort = this.sort;\r\n    },(error:HttpErrorResponse)=>{\r\n      if(error.status>300)\r\n      {\r\n        this.router.navigate([environment.FRONTEND_ROUTES.DASHBOARD]);\r\n      }\r\n      \r\n    })\r\n  }\r\n\r\nnombreJour(tache: Tache): number\r\n{\r\n    let temps = new Date(tache.dateFinition).getTime() - new Date(tache.dateDemarrage).getTime();\r\n    return temps/(1000*60*60*24);\r\n}\r\n\r\n  elementGerant(){\r\n    this.isLoadingResults = true;\r\n    this.tacheService.gettachess(this.projet.id).subscribe((data)=>{\r\n      this.tacheList = data;\r\n      this.dataSources = new MatTableDataSource<Tache>(this.tacheList);\r\n      this.tacheList.forEach((tache, index)=>{\r\n        if(tache.niveauAvancer == 'VALIDER')\r\n        {\r\n          this.valider.push(tache);\r\n        }\r\n        else if(tache.niveauAvancer == 'ENCOURS')\r\n        {\r\n          this.enCours.push(tache);\r\n        }\r\n        else if(tache.niveauAvancer == 'AREFAIRE')\r\n        {\r\n          this.aReFaire.push(tache);\r\n        }\r\n        else{\r\n          this.aFaire.push(tache);\r\n        }\r\n      })\r\n      //console.log(this.dataSources);\r\n      this.isLoadingResults = false;\r\n      this.dataSources.paginator = this.paginator;\r\n      this.dataSources.sort = this.sort;\r\n    },(error:HttpErrorResponse)=>{\r\n      if(error.status>300)\r\n      {\r\n        this.router.navigate([environment.FRONTEND_ROUTES.DASHBOARD]);\r\n      }\r\n      \r\n    })\r\n  }\r\n\r\n  drop(event: CdkDragDrop<string[]>, types) {\r\n    console.log(event.currentIndex)\r\n    this.isLoadingResults = true;\r\n    let tache: Tache;\r\n    if (event.previousContainer === event.container) {\r\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\r\n    } else {\r\n      \r\n      transferArrayItem(event.previousContainer.data,\r\n                        event.container.data,\r\n                        event.previousIndex,\r\n                        event.currentIndex);\r\n      if(types=='VALIDER')\r\n      {\r\n        tache = this.valider[event.currentIndex];\r\n      }\r\n      else if(types=='ENCOURS')\r\n      {\r\n        tache = this.enCours[event.currentIndex];\r\n      }\r\n      else if(types=='AREFAIRE')\r\n      {\r\n        tache =this.aReFaire[event.currentIndex];\r\n      }\r\n      else{\r\n        tache = this.aFaire[event.currentIndex];\r\n      }\r\n     // if(this.tokenService.getMenu()==tache.utilisateur.utilisateurs.id || tache.utilisateur.utilisateurs.profile.libelle.substil )\r\n\r\n      tache.niveauAvancer = types;\r\n      this.userTache.updatetaches(tache.id, tache).subscribe((data)=>{\r\n        console.log(data);\r\n      },(error:HttpErrorResponse)=>{\r\n        if(error.status<300)\r\n        {\r\n          this.isLoadingResults = false;\r\n          this.snackBar.openSnackBar(\"status de la tache changer avec success\", \"OK\",3000);\r\n        }\r\n        else{\r\n          this.isLoadingResults = false;\r\n          this.snackBar.openSnackBar(\"status de la tache non changer\", \"OK\",3000);\r\n          this.ngOnInit();\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  onChangePourcentage(event, tache: Tache)\r\n  {\r\n    console.log(event);\r\n    if(event>0)\r\n    {\r\n      if(String(event) === '100')\r\n      {\r\n        tache.niveauAvancer = 'VALIDER';\r\n        this.supprimerAndAssigneElemet(tache,this.enCours, this.valider);\r\n      }\r\n      this.userTache.updatetaches(tache.id, tache).subscribe((data)=>{\r\n      },(error:HttpErrorResponse)=>{\r\n        if(error.status<300)\r\n        {\r\n          this.snackBar.openSnackBar(\"status de la tache changer avec success\", \"OK\",3000);\r\n        }\r\n        else{\r\n          this.snackBar.openSnackBar(\"status de la tache non changer\", \"OK\",3000);\r\n          this.ngOnInit();\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  public supprimerAndAssigneElemet(element : Tache, tab1: Tache[], tab2:Tache[])\r\n  {\r\n    tab1.forEach((t, index) => {\r\n        if(t.id = element.id)\r\n        {\r\n          console.log(index);\r\n          tab1.splice(index,1);\r\n        }\r\n    });\r\n    tab2.push(element);\r\n  }\r\n\r\n  recherche() {\r\n    this.dataSources.filter = this.rechercheGeneral.trim().toLowerCase();\r\n  }\r\n\r\n  annulerRechercheGeneral()\r\n  {\r\n    this.rechercheGeneral = '';\r\n    this.recherche();\r\n  }\r\n\r\n  openDialog(tache): void {\r\n    const dialogRef = this.dialog.open(UpdateTachesComponent, {\r\n      width: '600px',\r\n      data: {tache: tache},\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result ==null)\r\n      {\r\n        this.ngOnInit();\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  voirPlus(tache): void {\r\n    const dialogRef = this.dialog.open(GestionTachesComponent, {\r\n      width: '600px',\r\n      data: {tache: tache},\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result ==null)\r\n      {\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  supprimerRenovation(index){\r\n    this.confirm.confirm({\r\n      title:\"Confirmation\",\r\n      message:`Voulez-vous supprimer cette taches ? `\r\n    }).subscribe(($choix)=> {\r\n\r\n      if($choix) {\r\n        this.isLoadingResults=true;\r\n        this.tacheService.deletetaches(index).subscribe(()=>{\r\n          \r\n        },\r\n        (error: HttpErrorResponse) => {\r\n              this.isLoadingResults=false;\r\n              if(error.status<300)\r\n              {\r\n                this.snackBar.openSnackBar(\"Element supprimé avec succès\", \"OK\",3000);\r\n                this.ngOnInit();\r\n              }\r\n              else{\r\n                this.snackBar.openSnackBar(\"Element non supprimer \", \"OK\",3000);\r\n              }\r\n              \r\n          });\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"\\r\\n    \\r\\n    <mat-tab-group mat-stretch-tabs class=\\\"header-card mat-elevation-z4 block p-0\\\">\\r\\n        <mat-tab label=\\\"Liste des taches\\\" *ngIf=\\\"Gerant==1\\\">\\r\\n            <div fxLayout=\\\"row wrap\\\" class=\\\" button-add\\\">\\r\\n                <div class=\\\"table-bouton-ajout\\\" >\\r\\n                    <div *ngIf=\\\"isLoadingResults\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"user-spinner mat-elevation-z8\\\">   \\r\\n                        <mat-spinner color=\\\"primary\\\"></mat-spinner>\\r\\n                      </div>\\r\\n                    <mat-button-toggle-group appearance=\\\"legacy\\\" >\\r\\n                        <mat-button-toggle (click)=\\\"openDialog(null)\\\" class=\\\"bg-primary\\\">\\r\\n                            <mat-icon>add_circle_outline</mat-icon>\\r\\n                        </mat-button-toggle>\\r\\n                    </mat-button-toggle-group>\\r\\n                </div>\\r\\n                    <div class=\\\"recherche\\\">\\r\\n                        <mat-form-field class=\\\"recherche\\\">\\r\\n                            <input matInput [(ngModel)]=\\\"rechercheGeneral\\\" placeholder=\\\"Rechercher generale...\\\" autocomplete=\\\"off\\\" (keyup)=\\\"recherche()\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                            <mat-icon matSuffix (click)=\\\"rechercheGeneral = ''; recherche()\\\" class=\\\"sycad-element-clickable\\\">clear</mat-icon>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n              </div>\\r\\n              <div fxLayout=\\\"row wrap\\\">\\r\\n                  <div fxFlex=\\\"100\\\" class=\\\"flex-p\\\"> \\r\\n                      <div class=\\\"example-container mat-elevation-z8\\\">\\r\\n                          <table mat-table [dataSource]=\\\"dataSources\\\" matSort>\\r\\n                        \\r\\n                            <!-- Name Column -->\\r\\n                            <ng-container matColumnDef=\\\"appellation\\\">\\r\\n                              <th mat-header-cell *matHeaderCellDef mat-sort-header> Appellation </th>\\r\\n                              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.appellation}} </td>\\r\\n                            </ng-container>\\r\\n                        \\r\\n                            <!-- Position Column -->\\r\\n                            <ng-container matColumnDef=\\\"description\\\">\\r\\n                              <th mat-header-cell *matHeaderCellDef mat-sort-header> Description </th>\\r\\n                              <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                                <button [matMenuTriggerFor]=\\\"descri\\\" mat-button color=\\\"warn\\\">Voir description</button>\\r\\n                                <mat-menu #descri=\\\"matMenu\\\">\\r\\n                                  <mat-list>\\r\\n                                      <mat-list-item>{{element.description}}</mat-list-item>\\r\\n                                  </mat-list>\\r\\n                                </mat-menu>\\r\\n                              </td>\\r\\n                            </ng-container>\\r\\n                        \\r\\n                            <!-- Weight Column -->\\r\\n                            <ng-container matColumnDef=\\\"status\\\">\\r\\n                              <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\\r\\n                              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.niveauAvancer}} </td>\\r\\n                            </ng-container>\\r\\n              \\r\\n                            <ng-container matColumnDef=\\\"dateD\\\">\\r\\n                              <th mat-header-cell *matHeaderCellDef > Date debut </th>\\r\\n                              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.dateDemarrage | date : 'dd LLLL yyyy'}} </td>\\r\\n                            </ng-container>\\r\\n                        \\r\\n                            <!-- Symbol Column -->\\r\\n                            <ng-container matColumnDef=\\\"DateF\\\">\\r\\n                              <th mat-header-cell *matHeaderCellDef> Date Fin </th>\\r\\n                              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.dateFinition | date : 'dd LLLL yyyy'}} </td>\\r\\n                            </ng-container>\\r\\n              \\r\\n                            <ng-container matColumnDef=\\\"user\\\">\\r\\n                              <th mat-header-cell *matHeaderCellDef mat-sort-header> user </th>\\r\\n                              <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                                  <button [matMenuTriggerFor]=\\\"user\\\" mat-icon-button>Voir+</button>\\r\\n                                  <mat-menu #user=\\\"matMenu\\\">\\r\\n                                    <mat-list>\\r\\n                                        <mat-list-item>Email: {{element.utilisateur.utilisateurs.email}}</mat-list-item>\\r\\n                                        <mat-list-item>Nom: {{element.utilisateur.utilisateurs.civilite}} {{element.utilisateur.utilisateurs.nom}} {{element.utilisateur.utilisateurs.prenom}}</mat-list-item>\\r\\n                                    </mat-list>\\r\\n                                  </mat-menu>\\r\\n                            </td>\\r\\n                            </ng-container>\\r\\n\\r\\n                            <ng-container matColumnDef=\\\"projet\\\">\\r\\n                              <th mat-header-cell *matHeaderCellDef> Projet </th>\\r\\n                              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id }} </td>\\r\\n                            </ng-container>\\r\\n                            \\r\\n                            <!-- Star Column -->\\r\\n                            <ng-container matColumnDef=\\\"action\\\" stickyEnd>\\r\\n                              <th mat-header-cell *matHeaderCellDef>Action</th>\\r\\n                              <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                                  <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" aria-label=\\\"Example icon-button with a menu\\\">\\r\\n                                      <mat-icon>more_vert</mat-icon>\\r\\n                                    </button>\\r\\n                                    <mat-menu #menu=\\\"matMenu\\\">\\r\\n                                      <button mat-menu-item (click)=\\\"openDialog(element)\\\">\\r\\n                                        <mat-icon>edite</mat-icon>\\r\\n                                        <span>Modifier</span>\\r\\n                                      </button>\\r\\n                                      <button mat-menu-item color=\\\"warn\\\" (click)=\\\"supprimerRenovation(element.id)\\\">\\r\\n                                        <mat-icon>delete</mat-icon>\\r\\n                                        <span>Supprimer</span>\\r\\n                                      </button>\\r\\n                                    </mat-menu>\\r\\n                              </td>\\r\\n                            </ng-container>\\r\\n                        \\r\\n                            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n                          </table>\\r\\n                          <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n                        </div>\\r\\n                  </div>\\r\\n              </div>\\r\\n        </mat-tab>\\r\\n        <mat-tab label=\\\"Gestion des taches\\\">\\r\\n          \\r\\n                <div fxLayout=\\\"row\\\"  fxLayout.lt-md=\\\"row wrap\\\">\\r\\n                  <div *ngIf=\\\"isLoadingResults\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"user-spinner mat-elevation-z8\\\">   \\r\\n                    <mat-spinner color=\\\"primary\\\"></mat-spinner>\\r\\n                  </div>\\r\\n              <mat-card\\r\\n              [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" \\r\\n              [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n              <mat-card-header fxLayoutAlign=\\\"center center\\\">\\r\\n                  <mat-card-title>\\r\\n                      Travail A Realiser\\r\\n                  </mat-card-title>\\r\\n              </mat-card-header>\\r\\n                  <mat-card-content>\\r\\n                      <div\\r\\n                        cdkDropList\\r\\n                        #aFaireList=\\\"cdkDropList\\\"\\r\\n                        [cdkDropListData]=\\\"aFaire\\\"\\r\\n                        [cdkDropListConnectedTo]=\\\"[encoursList,refaireList, validerList]\\\"\\r\\n                        class=\\\"example-list\\\"\\r\\n                        (cdkDropListDropped)=\\\"drop($event, 'AFAIRE')\\\">\\r\\n                          <div class=\\\"example-box init\\\" *ngFor=\\\"let item of aFaire\\\" fxLayout=\\\"column\\\" cdkDrag>\\r\\n                            <h4>{{item.appellation}}</h4>\\r\\n                            <p  class=\\\"w-100\\\"><i>date demarrage</i> : {{item.dateDemarrage | date : 'dd LLLL yyyy'}}</p>\\r\\n                            <p  class=\\\"w-100\\\"><i>Date finition </i>: {{item.dateFinition | date : 'dd LLLL yyyy'}} </p>\\r\\n                            <p class=\\\"w-100\\\"><i>Nombre de jour</i> : {{nombreJour(item)}} Jours</p>\\r\\n                            <p class=\\\"w-100\\\"><i>Assigné à</i> : {{item.utilisateur.utilisateurs.nom | uppercase}} {{item.utilisateur.utilisateurs.nom}}</p>\\r\\n                            <span fxLayoutAlign=\\\"end center\\\">\\r\\n                              <button mat-icon-button (click)=\\\"voirPlus(item)\\\">\\r\\n                                  voir+\\r\\n                              </button>\\r\\n                          </span>\\r\\n                          </div>\\r\\n                          <div class=\\\"example-box init\\\">\\r\\n                            \\r\\n                          </div>\\r\\n                      </div>\\r\\n                  </mat-card-content>\\r\\n              </mat-card>\\r\\n              <mat-card\\r\\n              [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" \\r\\n              [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n              <mat-card-header fxLayoutAlign=\\\"center center\\\">\\r\\n                  <mat-card-title>\\r\\n                      Travail En Cours\\r\\n                  </mat-card-title>\\r\\n              </mat-card-header>\\r\\n                  <mat-card-content>\\r\\n                    <div\\r\\n                        cdkDropList\\r\\n                        #encoursList=\\\"cdkDropList\\\"\\r\\n                        [cdkDropListData]=\\\"enCours\\\"\\r\\n                        [cdkDropListConnectedTo]=\\\"[aFaireList,refaireList, validerList]\\\"\\r\\n                        class=\\\"example-list\\\"\\r\\n                        (cdkDropListDropped)=\\\"drop($event, 'ENCOURS')\\\">\\r\\n                          <div class=\\\"example-box encours\\\" *ngFor=\\\"let item of enCours\\\" fxLayout=\\\"column\\\" cdkDrag>\\r\\n                            <h4>{{item.appellation}}</h4>\\r\\n                            <ng-select class=\\\"w-100\\\" [items]=\\\"evolution\\\"\\r\\n                            [(ngModel)]=\\\"item.tauxProgression\\\"\\r\\n                            (change)=\\\"onChangePourcentage($event,item)\\\"\\r\\n                            placeholder=\\\"Evolution de la tache\\\"\\r\\n                            >\\r\\n\\r\\n                            </ng-select>\\r\\n                            <p class=\\\"w-100\\\"><i>date demarrage</i> : {{item.dateDemarrage | date : 'dd LLLL yyyy'}}</p>\\r\\n                            <p class=\\\"w-100\\\"><i>Date finition </i>: {{item.dateFinition | date : 'dd LLLL yyyy'}} </p>\\r\\n                            <p class=\\\"w-100\\\"><i>Nombre de jour</i> : {{nombreJour(item)}} Jours</p>\\r\\n                            <p class=\\\"w-100\\\"><i>Assigné à</i> : {{item.utilisateur.utilisateurs.nom | uppercase}} {{item.utilisateur.utilisateurs.nom}}</p>\\r\\n                            <span fxLayoutAlign=\\\"end center\\\">\\r\\n                              <button mat-icon-button (click)=\\\"voirPlus(item)\\\">\\r\\n                                  voir+\\r\\n                              </button>\\r\\n                              </span>\\r\\n                          </div>\\r\\n\\r\\n                          <div class=\\\"example-box encours\\\">\\r\\n                            \\r\\n                          </div>\\r\\n                      </div>\\r\\n                  </mat-card-content>\\r\\n              </mat-card>\\r\\n\\r\\n              <mat-card\\r\\n              [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" \\r\\n              [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n              <mat-card-header fxLayoutAlign=\\\"center center\\\">\\r\\n                  <mat-card-title>\\r\\n                      Travail A Refaire\\r\\n                  </mat-card-title>\\r\\n              </mat-card-header>\\r\\n                  <mat-card-content>\\r\\n                    <div\\r\\n                    cdkDropList\\r\\n                    #refaireList=\\\"cdkDropList\\\"\\r\\n                    [cdkDropListData]=\\\"aReFaire\\\"\\r\\n                    [cdkDropListConnectedTo]=\\\"[aFaireList, encoursList, validerList]\\\"\\r\\n                    class=\\\"example-list\\\"\\r\\n                    (cdkDropListDropped)=\\\"drop($event, 'AREFAIRE')\\\">\\r\\n                      <div class=\\\"example-box revoir\\\" *ngFor=\\\"let item of aReFaire\\\" fxLayout=\\\"column\\\" cdkDrag>\\r\\n                        <h4>{{item.appellation}}</h4>\\r\\n                            <p class=\\\"w-100\\\"><i>date demarrage</i> : {{item.dateDemarrage | date : 'dd LLLL yyyy'}}</p>\\r\\n                            <p class=\\\"w-100\\\"><i>Date finition </i>: {{item.dateFinition | date : 'dd LLLL yyyy'}} </p>\\r\\n                            <p class=\\\"w-100\\\"><i>Nombre de jour</i> : {{nombreJour(item)}} Jours</p>\\r\\n                            <p class=\\\"w-100\\\"><i>Assigné à</i> : {{item.utilisateur.utilisateurs.nom | uppercase}} {{item.utilisateur.utilisateurs.nom}}</p>\\r\\n                            <span fxLayoutAlign=\\\"end center\\\">\\r\\n                              <button mat-icon-button (click)=\\\"voirPlus(item)\\\">\\r\\n                                  voir+\\r\\n                              </button>\\r\\n                            </span>\\r\\n                      </div>\\r\\n                      <div class=\\\"example-box revoir\\\">\\r\\n                            \\r\\n                      </div>\\r\\n                  </div>\\r\\n                  </mat-card-content>\\r\\n              </mat-card>\\r\\n\\r\\n              <mat-card\\r\\n              [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" \\r\\n              [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                  <mat-card-header fxLayoutAlign=\\\"center center\\\">\\r\\n                      <mat-card-title>\\r\\n                          Travail Valider\\r\\n                      </mat-card-title>\\r\\n                  </mat-card-header>\\r\\n                  <mat-card-content>\\r\\n                    <div\\r\\n                    cdkDropList\\r\\n                    #validerList=\\\"cdkDropList\\\"\\r\\n                    [cdkDropListData]=\\\"valider\\\"\\r\\n                    [cdkDropListConnectedTo]=\\\"[aFaireList, encoursList,refaireList]\\\"\\r\\n                    class=\\\"example-list\\\"\\r\\n                    (cdkDropListDropped)=\\\"drop($event, 'VALIDER')\\\">\\r\\n                      <div class=\\\"example-box valider\\\" *ngFor=\\\"let item of valider\\\" fxLayout=\\\"column\\\" cdkDrag>\\r\\n                        <h4>{{item.appellation}}</h4>\\r\\n                            <p class=\\\"w-100\\\"><i>date demarrage</i> : {{item.dateDemarrage | date : 'dd LLLL yyyy'}}</p>\\r\\n                            <p class=\\\"w-100\\\"><i>Date finition </i>: {{item.dateFinition | date : 'dd LLLL yyyy'}} </p>\\r\\n                            <p class=\\\"w-100\\\"><i>Nombre de jour</i> : {{nombreJour(item)}} Jours</p>\\r\\n                            <p class=\\\"w-100\\\"><i>Assigné à</i> : {{item.utilisateur.utilisateurs.nom | uppercase}} {{item.utilisateur.utilisateurs.nom}}</p>\\r\\n                            <span fxLayoutAlign=\\\"end center\\\">\\r\\n                              <button mat-icon-button (click)=\\\"voirPlus(item)\\\">\\r\\n                                  voir+\\r\\n                              </button>\\r\\n                           </span>\\r\\n                      </div>\\r\\n                      <div class=\\\"example-box valider\\\">\\r\\n                            \\r\\n                      </div>\\r\\n                  </div>\\r\\n                  </mat-card-content>\\r\\n              </mat-card>\\r\\n      </div>\\r\\n        </mat-tab>\\r\\n      </mat-tab-group>\\r\\n\";","import { Tache, UserAffecterProjet } from 'src/app/shared/models/demarrage-projet/projet-renovation.model';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { UserAffecterProjetRenovationServices } from 'src/app/features/user-affecter-projet-renovation/user-affecter-projet.service';\r\nimport { SnackBarService } from 'src/app/shared/services/SnackBar';\r\nimport { DemarrageProjetRenovationComponent } from '../../demarrage-projet-renovation.component';\r\nimport { GestionTacheService } from '../gestion-taches.services';\r\nimport { AppConfirmService } from 'src/app/shared/utils/app-confirm/app-confirm.service';\r\n\r\n@Component({\r\n  selector: 'app-update-taches',\r\n  templateUrl: './update-taches.component.html',\r\n  styleUrls: ['./update-taches.component.scss'],\r\n  providers: [UserAffecterProjetRenovationServices]\r\n})\r\nexport class UpdateTachesComponent implements OnInit {\r\n  tacheForm : FormGroup;\r\n  userList: UserAffecterProjet[] =[];\r\n  isLoadingResults=false;\r\n  constructor(private confirm: AppConfirmService,public dialogRef: MatDialogRef<UpdateTachesComponent>,private snackBar: SnackBarService,\r\n    public dialog: MatDialog, @Inject(MAT_DIALOG_DATA) public data: any,private fb: FormBuilder, private tacheService: GestionTacheService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.isLoadingResults=true;\r\n    this.tacheService.getUser(DemarrageProjetRenovationComponent.projetRenovation.id).subscribe((data)=>{\r\n      this.userList = data;\r\n      this.isLoadingResults=false;\r\n    });\r\n    this.init();\r\n  }\r\n\r\n  init(){\r\n      if(this.data.tache){\r\n        this.tacheForm = this.fb.group({\r\n          id:[this.data.tache.id],\r\n          appellation: [this.data.tache.appellation, Validators.required],\r\n          description: [this.data.tache.description, Validators.required],\r\n          dateDemarrage: [this.data.tache.dateDemarrage, Validators.required],\r\n          dateFinition: [this.data.tache.dateFinition, Validators.required],\r\n          utilisateur: [this.data.tache.utilisateur, Validators.required],\r\n          enregistre: [null],\r\n          niveauAvancer: this.data.tache.niveauAvancer,\r\n          sommeTache:[this.data.tache.sommeTache, Validators.required],\r\n          projetRenovation: [DemarrageProjetRenovationComponent.projetRenovation,],\r\n    })\r\n    }\r\n    else{\r\n      \r\n        this.tacheForm = this.fb.group({\r\n          id:[null],\r\n          appellation: [null, Validators.required],\r\n          description: [null, Validators.required],\r\n          dateDemarrage: [null, Validators.required],\r\n          dateFinition: [null, Validators.required],\r\n          utilisateur: [null, Validators.required],\r\n          enregistre: [null],\r\n          niveauAvancer: null,\r\n          sommeTache:[null, Validators.required],\r\n          projetRenovation: [DemarrageProjetRenovationComponent.projetRenovation,],\r\n    })\r\n    }\r\n  }\r\n\r\n  onSubmit(){\r\n    this.isLoadingResults=true;\r\n    this.tacheService.verifierTaches(this.tacheForm.value).subscribe((data)=>{\r\n       var list: Tache[] = data;\r\n      console.log(data);\r\n      if(list.length>0)\r\n      {\r\n        this.TachesExisteDeja();\r\n      }\r\n      else{\r\n        this.enregistrer();\r\n      }\r\n    },(error:HttpErrorResponse)=>{\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  TachesExisteDeja(){\r\n    this.confirm.confirm({\r\n      title:\"Conflit de Taches\",\r\n      message:\"Il y a deja une tache en cours selon la date choisi. Voulez-vous continuer ? \"\r\n    }).subscribe(($choix)=> {\r\n\r\n      if($choix) {\r\n        this.Remeniation();\r\n      }\r\n      else{\r\n        this.isLoadingResults=false;\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  Remeniation(){\r\n    this.confirm.confirm({\r\n      title:\"Comment Enregistrer la tache\",\r\n      message:` doit-on enregistrer la tache parallelement ou decaller les dates? `,\r\n      buttun1: `Enregistré simplement`,\r\n      buttun2:`Enregistré avec decallage`\r\n    }).subscribe(($choix)=> {\r\n\r\n      if($choix) {\r\n        this.tacheForm.get('enregistre').setValue(\"Decaller\");\r\n      }\r\n      else{\r\n        this.tacheForm.get('enregistre').setValue(\"Parallele\");\r\n      }\r\n      console.log(this.tacheForm.value)\r\n      this.enregistrer();\r\n    });\r\n  }\r\n\r\n\r\nenregistrer(){\r\n  if(this.data.tache){\r\n      this.tacheService.updatetaches(this.data.tache.id, this.tacheForm.value).subscribe( (data)=>{\r\n        this.isLoadingResults=false;\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n            this.isLoadingResults=false;\r\n            if(error.status<300)\r\n            {\r\n              this.dialogRef.close();\r\n              this.snackBar.openSnackBar(\"Element modifier  avec succès\", \"OK\",3000);\r\n            }\r\n            else{\r\n              this.snackBar.openSnackBar(\"Element non Ajouter car tache existe deja\", \"OK\",3000);\r\n            }\r\n            \r\n            \r\n        });\r\n    }\r\n    else{\r\n      this.tacheService.addtaches(this.tacheForm.value).subscribe( (data)=>{\r\n        //console.log(data);\r\n        this.isLoadingResults=false;\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n            this.isLoadingResults=false;\r\n            if(error.status<300)\r\n            {\r\n              this.dialogRef.close();\r\n              this.snackBar.openSnackBar(\"Element Ajouter  avec succès\", \"OK\",3000);\r\n            }\r\n            else{\r\n              this.snackBar.openSnackBar(\"Element non Ajouter car tache existe deja\", \"OK\",3000);\r\n            }\r\n            \r\n        });\r\n    }\r\n}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TachesComponent } from './taches.component';\r\nimport { UpdateTachesComponent } from './update-taches/update-taches.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { DropzoneModule } from 'ngx-dropzone-wrapper';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { DragulaModule } from 'ng2-dragula';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport { GestionTachesComponent } from './gestion-taches/gestion-taches.component';\r\nimport { GestionTacheService } from './gestion-taches.services';\r\n\r\nexport const routes = [\r\n  { path: '', component: TachesComponent, data: { breadcrumb: 'taches' } },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [TachesComponent, UpdateTachesComponent, GestionTachesComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    DropzoneModule,\r\n    NgxPaginationModule,\r\n    NgSelectModule,\r\n    DragDropModule\r\n  ],\r\n  providers: [\r\n    GestionTacheService\r\n  ],\r\n  exports:[\r\n    GestionTachesComponent\r\n  ]\r\n})\r\nexport class TachesModule { }\r\n","export default \"<div *ngIf=\\\"isLoadingResults\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"user-spinner\\\">   \\r\\n    <mat-spinner color=\\\"primary\\\"></mat-spinner>\\r\\n  </div>\\r\\n\\r\\n<div class=\\\"header\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" mat-dialog-title color=\\\"primary\\\">\\r\\n    <h3 *ngIf=\\\"data.tache\\\">Modifier Une tache</h3>\\r\\n    <h3 *ngIf=\\\"!data.tache\\\">AJouter Une tache</h3>\\r\\n</div>\\r\\n<div mat-dialog-content *ngIf=\\\"!isLoadingResults\\\">\\r\\n    <form [formGroup]=\\\"tacheForm\\\">\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start\\\" fxLayout.lt-md=\\\"row wrap\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                <mat-label>appellation de la tache</mat-label>\\r\\n                <input matInput #input  placeholder=\\\"Ex. Nougat\\\"  formControlName=\\\"appellation\\\">\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n            \\r\\n\\r\\n            <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                \\r\\n                    <mat-label>date de debut et de fin</mat-label>\\r\\n                    <mat-date-range-input [rangePicker]=\\\"picker\\\">\\r\\n                      <input matStartDate formControlName=\\\"dateDemarrage\\\" placeholder=\\\"Start date\\\">\\r\\n                      <input matEndDate formControlName=\\\"dateFinition\\\" placeholder=\\\"End date\\\">\\r\\n                    </mat-date-range-input>\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n                    <mat-date-range-picker #picker></mat-date-range-picker>\\r\\n                  \\r\\n                    <!-- <mat-error *ngIf=\\\"range.controls.dateDemarrage.hasError('matStartDateInvalid')\\\">Invalid start date</mat-error>\\r\\n                    <mat-error *ngIf=\\\"range.controls.dateFinition.hasError('matEndDateInvalid')\\\">Invalid end date</mat-error> -->\\r\\n            </mat-form-field>\\r\\n\\r\\n            <ng-select class=\\\"select\\\"  [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"100\\\" [fxFlex.xl]=\\\"100\\\" [items]=\\\"userList\\\"\\r\\n                   bindLabel=\\\"utilisateurs.email\\\"\\r\\n                   placeholder=\\\"Selectionner l'utilisateur pour la tache\\\"\\r\\n                   formControlName=\\\"utilisateur\\\">\\r\\n                   <ng-template ng-loadingspinner-tmp>\\r\\n                    <div class=\\\"lds-ellipsis\\\">\\r\\n                        <div></div>\\r\\n                        <div></div>\\r\\n                        <div></div>\\r\\n                        <div></div>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </ng-select>\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                <mat-label>Description de la tache</mat-label>\\r\\n                <textarea matInput placeholder=\\\"Description de la tache\\\" formControlName=\\\"description\\\" maxlength=\\\"300\\\"></textarea>\\r\\n                \\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                <mat-label>Budget reserver pour la tache</mat-label>\\r\\n                <input matInput type=\\\"number\\\" #input formControlName=\\\"sommeTache\\\" max=\\\"80000000\\\" min=\\\"0\\\">\\r\\n                <span matSuffix ><b>euros</b></span>\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\\r\\n<div mat-dialog-actions align=\\\"end\\\">\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n        <button mat-raised-button color=\\\"warn\\\" [mat-dialog-close]=\\\"tacheForm.value\\\" >Annuler</button>\\r\\n        <button mat-raised-button (click)=\\\"onSubmit()\\\" [disabled]=\\\"tacheForm.invalid\\\" color=\\\"primary\\\" >Enregistrer</button>\\r\\n    </div>\\r\\n</div>\";","export default \".example-container {\\n  width: 400px;\\n  max-width: 100%;\\n  margin: 0 25px 25px 0;\\n  display: inline-block;\\n  vertical-align: top;\\n}\\n\\n.containe {\\n  width: 100%;\\n}\\n\\n.example-list {\\n  border: solid 1px #ccc;\\n  min-height: 60px;\\n  background: white;\\n  border-radius: 4px;\\n  overflow: hidden;\\n  display: block;\\n  width: 100%;\\n}\\n\\n.example-box {\\n  padding: 20px 10px;\\n  border-bottom: solid 1px #ccc;\\n  color: rgba(0, 0, 0, 0.87);\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  justify-content: space-between;\\n  box-sizing: border-box;\\n  cursor: move;\\n  background: white;\\n  font-size: 14px;\\n}\\n\\n.cdk-drag-preview {\\n  box-sizing: border-box;\\n  border-radius: 4px;\\n  box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2), 0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12);\\n}\\n\\n.cdk-drag-placeholder {\\n  opacity: 0;\\n}\\n\\n.cdk-drag-animating {\\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\\n}\\n\\n.example-box:last-child {\\n  border: none;\\n}\\n\\n.example-list.cdk-drop-list-dragging .example-box:not(.cdk-drag-placeholder) {\\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\\n}\\n\\n.valider {\\n  border-left: 6px solid #09ac73;\\n  color: #09ac73;\\n  margin-bottom: 5px;\\n  font-weight: bold;\\n}\\n\\n.init {\\n  border-left: 6px solid #2206c2;\\n  color: #2206c2;\\n  margin-bottom: 5px;\\n  font-weight: bold;\\n}\\n\\n.encours {\\n  border-left: 6px solid #ec8b0b;\\n  color: #ec8b0b;\\n  margin-bottom: 5px;\\n  font-weight: bold;\\n}\\n\\n.revoir {\\n  border-left: 6px solid #ec0b69;\\n  color: #ec0b69;\\n  margin-bottom: 5px;\\n  font-weight: bold;\\n}\\n\\n.header-card {\\n  width: 100%;\\n}\\n\\n.example-container {\\n  width: 100%;\\n  max-width: 100%;\\n  overflow: auto;\\n}\\n\\ntable {\\n  width: 100%;\\n}\\n\\ntd.mat-column-star {\\n  width: 20px;\\n  padding-right: 8px;\\n}\\n\\nth.mat-column-position, td.mat-column-position {\\n  padding-left: 8px;\\n}\\n\\n.mat-table-sticky-border-elem-right {\\n  border-left: 1px solid #e0e0e0;\\n}\\n\\n.mat-table-sticky-border-elem-left {\\n  border-right: 1px solid #e0e0e0;\\n}\\n\\n.user-name {\\n  padding: 0 12px;\\n  font-weight: 400;\\n}\\n\\n.user-content {\\n  padding: 10px;\\n}\\n\\n.user-content .user-img {\\n  position: relative;\\n}\\n\\n.user-content .user-img img {\\n  border-radius: 50%;\\n  width: 80px;\\n  height: 80px;\\n}\\n\\n.user-content .user-img img.blocked {\\n  opacity: 0.5;\\n}\\n\\n.user-content .user-img .mat-icon {\\n  position: absolute;\\n  top: -8px;\\n  left: -8px;\\n  font-size: 96px;\\n  height: 96px;\\n  width: 96px;\\n}\\n\\n.user-content .mat-slide-toggle {\\n  margin-top: 15px;\\n}\\n\\n.user-content .user-details span {\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n}\\n\\n.user-content .user-details .mat-icon {\\n  padding: 2px 10px;\\n}\\n\\n.user-content .user-details.blocked {\\n  opacity: 0.5;\\n}\\n\\n.user-search {\\n  width: 0;\\n  overflow: hidden;\\n  transition: 0.3s;\\n}\\n\\n.user-search .mat-form-field {\\n  width: 100% !important;\\n  text-align: center !important;\\n  height: 36px;\\n}\\n\\n.user-search .mat-form-field-infix {\\n  padding: 5px;\\n}\\n\\n.user-search .mat-input-element {\\n  text-align: center;\\n}\\n\\n.user-search.show {\\n  width: 100%;\\n  overflow: visible;\\n}\\n\\n.example-full-width {\\n  width: 60%;\\n  cursor: pointer;\\n}\\n\\n.mat-row:nth-child(even) {\\n  background-color: rgba(8, 106, 235, 0.247);\\n}\\n\\n.mat-row:nth-child(odd) {\\n  background-color: rgba(252, 249, 249, 0.116);\\n}\\n\\nth.mat-sort-header-sorted {\\n  color: red;\\n}\\n\\n.recherche {\\n  width: 80%;\\n}\\n\\n.button-add {\\n  padding: 20px;\\n}\\n\\np {\\n  text-align: left;\\n  font-size: 10px;\\n  padding: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\";","import { UserAffecterProjet } from './../../../shared/models/demarrage-projet/projet-renovation.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Renovation } from 'src/app/shared/models/Renovation';\r\nimport { Tache } from 'src/app/shared/models/demarrage-projet/projet-renovation.model';\r\n\r\n@Injectable()\r\nexport class GestionTacheService {\r\n    \r\n    constructor(public http:HttpClient) { }\r\n    \r\n    gettachess(id): Observable<Tache[]> {\r\n        return this.http.get<Tache[]>(environment.BACK_END.DEMARRAGERENAUVATION.GESTION_TACHE+\"\"+id);\r\n    }\r\n    addtaches(taches){\t    \r\n        return this.http.post(environment.BACK_END.DEMARRAGERENAUVATION.GESTION_TACHE, taches);\r\n    }\r\n\r\n    deletetaches(id: number) {\r\n        return this.http.delete(environment.BACK_END.DEMARRAGERENAUVATION.GESTION_TACHE + \"\" + id);\r\n    } \r\n\r\n    updatetaches( id, taches){\t    \r\n        return this.http.put(environment.BACK_END.DEMARRAGERENAUVATION.GESTION_TACHE+\"\"+id, taches);\r\n    }\r\n\r\n    verifierTaches(taches) : Observable<Tache[]>{\t    \r\n        return this.http.post<Tache[]>(environment.BACK_END.DEMARRAGERENAUVATION.GESTION_TACHE+\"verifierTache\", taches);\r\n    }\r\n\r\n    getUser(id): Observable<UserAffecterProjet[]>\r\n    {\r\n        return this.http.get<UserAffecterProjet[]>(environment.BACK_END.DEMARRAGERENAUVATION.AGENDA_SYSTEM+\"user-projet/\"+id);\r\n    }\r\n} "]}