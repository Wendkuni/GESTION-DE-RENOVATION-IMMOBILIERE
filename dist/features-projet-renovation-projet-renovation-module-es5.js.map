{"version":3,"sources":["webpack:///src/app/features/projet-renovation/update-projet-renovation/update-projet-renovation.component.html","webpack:///src/app/features/projet-renovation/utilisateur-affecter-modal/utilisateur-affecter-modal.component.html","webpack:///src/app/features/projet-renovation/update-projet-renovation/update-projet-renovation.component.scss","webpack:///src/app/features/projet-renovation/projet-renovation.component.scss","webpack:///src/app/features/projet-renovation/projet-renovation.service.ts","webpack:///src/app/features/projet-renovation/update-projet-renovation/update-projet-renovation.component.ts","webpack:///src/app/features/projet-renovation/projet-renovation.component.html","webpack:///src/app/features/projet-renovation/utilisateur-affecter-modal/utilisateur-affecter-modal.component.ts","webpack:///src/app/features/projet-renovation/utilisateur-affecter-modal/utilisateur-affecter-modal.component.scss","webpack:///src/app/features/projet-renovation/projet-renovation.component.ts","webpack:///src/app/features/projet-renovation/projet-renovation.module.ts"],"names":["ProjetRenauvationService","http","get","BACK_END","DEMARRAGERENAUVATION","PROJET_RENAUVATION_GERANT","id","projet","post","put","UpdateProjetRenovationComponent","fb","projetService","route","confirm","snackBar","router","isLoadingResults","img","URLpage","FILEUPLOAD","config","clickable","maxFiles","autoReset","resizeWidth","resizeHeight","thumbnailHeight","thumbnailWidth","acceptedFiles","errorReset","cancelReset","snapshot","params","init","parseInt","getProjetById","subscribe","getAllRenovation","data","listeRenovation","photo","projetRenovation","group","budget","required","dateDemarrage","dateFinission","renovation","error","args","dropzoneComponentRef","directiveRef","reset","setValue","remoteResponse","contentType","url","valid","updateprojet","value","status","openSnackBar","navigate","addprojet","selector","template","UtilisateurAffecterModalComponent","dialogRef","dialog","userAffecter","userAffect","displayedColumns","dataSources","initDonner","listUserNonAffecter","listeUser","console","log","getUsers","userA","paginator","sort","userForm","utilisateurs","addUser","index","title","message","$choix","deleteUser","ngOnInit","providers","ProjetRenovationComponent","appSettings","elementRecheche","settings","getElement","p","getprojets","event","page","fixedHeader","document","getElementById","scrollTop","getElementsByClassName","open","width","height","disableClose","afterClosed","result","deleteprojet","arr","requete","filter","el","indexOf","toLowerCase","nomRenovation","client","email","encapsulation","None","DEFAULT_DROPZONE_CONFIG","maxFilesize","addRemoveLinks","routes","path","component","breadcrumb","ProjetRenovationModule","declarations","imports","forChild","provide","useValue","exports"],"mappings":"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","file":"features-projet-renovation-projet-renovation-module-es5.js","sourcesContent":["export default \"<div *ngIf=\\\"isLoadingResults\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"user-spinner\\\">   \\r\\n    <mat-spinner color=\\\"primary\\\"></mat-spinner>\\r\\n  </div>\\r\\n\\r\\n<!-- <div class=\\\"header\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" mat-dialog-title color=\\\"primary\\\">\\r\\n    <h2 *ngIf=\\\"data.menu\\\">Modifier Un Menu</h2>\\r\\n    <h2 *ngIf=\\\"!data.menu\\\">AJouter Un Menu</h2>\\r\\n</div> -->\\r\\n\\r\\n\\r\\n<mat-card *ngIf=\\\"!isLoadingResults\\\">\\r\\n    <mat-card-content>\\r\\n        <form [formGroup]=\\\"projetRenovation\\\">\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start\\\" fxLayout.lt-md=\\\"row wrap\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                    <mat-label>Budget total reserver pour le projet</mat-label>\\r\\n                    <input matInput type=\\\"number\\\" #input formControlName=\\\"budget\\\">\\r\\n                    <span matSuffix ><b>euros</b></span>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"50\\\" [fxFlex.xl]=\\\"50\\\">\\r\\n                \\r\\n                    <mat-label>date de debut et de fin</mat-label>\\r\\n                    <mat-date-range-input [rangePicker]=\\\"picker\\\">\\r\\n                      <input matStartDate formControlName=\\\"dateDemarrage\\\" placeholder=\\\"Start date\\\">\\r\\n                      <input matEndDate formControlName=\\\"dateFinission\\\" placeholder=\\\"End date\\\">\\r\\n                    </mat-date-range-input>\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n                    <mat-date-range-picker #picker></mat-date-range-picker>\\r\\n                  \\r\\n                    <!-- <mat-error *ngIf=\\\"range.controls.dateDemarrage.hasError('matStartDateInvalid')\\\">Invalid start date</mat-error>\\r\\n                    <mat-error *ngIf=\\\"range.controls.dateFinition.hasError('matEndDateInvalid')\\\">Invalid end date</mat-error> -->\\r\\n            </mat-form-field>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n                <ng-select class=\\\"select\\\"  [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"100\\\" [fxFlex.xl]=\\\"100\\\" [items]=\\\"listeRenovation\\\"\\r\\n                   bindLabel=\\\"nomRenovation\\\"\\r\\n                   placeholder=\\\"Selectionner Selectionner la renovation\\\"\\r\\n                   formControlName=\\\"renovation\\\">\\r\\n                   <ng-template ng-loadingspinner-tmp>\\r\\n                    <div class=\\\"lds-ellipsis\\\">\\r\\n                        <div></div>\\r\\n                        <div></div>\\r\\n                        <div></div>\\r\\n                        <div></div>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </ng-select>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"row\\\" *ngIf=\\\"img!='' && photo.value\\\" fxLayoutAlign=\\\"center center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n                <div fxLayoutAlign=\\\"center end\\\" class=\\\"content-container\\\" *ngIf=\\\"id>0\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"100\\\" [fxFlex.xl]=\\\"100\\\">\\r\\n                    <img class=\\\"image\\\" src=\\\"{{URLpage}}{{img.split('/')[2]}}\\\"><br/>\\r\\n                    <b><p>Image actuellement utiliser</p></b>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n                \\r\\n                <div class=\\\"content-container\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"100\\\" [fxFlex.xl]=\\\"100\\\">\\r\\n                    <dropzone class=\\\"dropzone-container\\\" [fxFlex]=\\\"100\\\" [config]=\\\"config\\\" [message]=\\\"'Cliquez ou faites glisser la pièce ici jointe'\\\" (init)=\\\"onUploadInit($event)\\\" (error)=\\\"onUploadError($event)\\\" (success)=\\\"onUploadSuccess($event)\\\">\\r\\n                    </dropzone>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </mat-card-content>\\r\\n    <mat-card-actions align=\\\"end\\\">\\r\\n        <button mat-raised-button color=\\\"warn\\\" routerLink=\\\"/projet-renovation\\\"  >Annuler</button>\\r\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onSubmit()\\\">Enregistrer</button>\\r\\n    </mat-card-actions>\\r\\n</mat-card>\";","export default \"\\r\\n<div *ngIf=\\\"isLoadingResults\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"user-spinner\\\">   \\r\\n    <mat-spinner color=\\\"primary\\\"></mat-spinner>\\r\\n  </div>\\r\\n\\r\\n\\r\\n<div *ngIf=\\\"!isLoadingResults\\\"  class=\\\"header\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" mat-dialog-title color=\\\"primary\\\">\\r\\n    <h3>Gestion des utilisateur du Projet {{data.projet.renovation.nomRenovation}}</h3>\\r\\n</div>\\r\\n<div mat-dialog-content class=\\\"body-content contenu-body\\\" *ngIf=\\\"!isLoadingResults\\\" >\\r\\n    <form   [formGroup]=\\\"userForm\\\">\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start\\\" fxLayout.lt-md=\\\"row wrap\\\">\\r\\n            <mat-form-field  appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"100\\\" [fxFlex.xl]=\\\"100\\\">\\r\\n                <mat-label>Libelle de la renovation</mat-label>\\r\\n                <input matInput #input  placeholder=\\\"Ex. Nougat\\\" [value]=\\\"data.projet.renovation.nomRenovation\\\" readonly>\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start\\\" fxLayout.lt-md=\\\"row wrap\\\">\\r\\n            <ng-select  [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"100\\\" [fxFlex.xl]=\\\"100\\\" [items]=\\\"listeUser\\\"\\r\\n                   bindLabel=\\\"email\\\"\\r\\n                   placeholder=\\\" Selectionner l'tilisateur conserner\\\"\\r\\n                   formControlName=\\\"utilisateurs\\\">\\r\\n                   <ng-template ng-loadingspinner-tmp>\\r\\n                    <div class=\\\"lds-ellipsis\\\">\\r\\n                        <div></div>\\r\\n                        <div></div>\\r\\n                        <div></div>\\r\\n                        <div></div>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </ng-select>\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\\r\\n\\r\\n<div  *ngIf=\\\"!isLoadingResults\\\"  mat-dialog-actions align=\\\"end\\\">\\r\\n    <div fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n        <button mat-raised-button color=\\\"warn\\\" [mat-dialog-close]=\\\"userForm.value\\\" >Fermer</button>\\r\\n        <button mat-raised-button [disabled]=\\\"userForm.invalid\\\" (click)=\\\"onSubmit()\\\" color=\\\"primary\\\" >Enregistrer</button>\\r\\n    </div>\\r\\n</div>\\r\\n<div fxLayout=\\\"row wrap\\\" class=\\\"table\\\">\\r\\n    <div fxFlex=\\\"100\\\" class=\\\"flex-p\\\"> \\r\\n        <div class=\\\"example-container\\\">\\r\\n            <table mat-table [dataSource]=\\\"dataSources\\\" matSort>\\r\\n                <ng-container matColumnDef=\\\"id\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> id </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n                  </ng-container>\\r\\n              <!-- Name Column -->\\r\\n              <ng-container matColumnDef=\\\"libelle\\\" sticky>\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.utilisateurs.email}} </td>\\r\\n              </ng-container>\\r\\n          \\r\\n              <!-- Position Column -->\\r\\n              \\r\\n          \\r\\n              <!-- Weight Column -->\\r\\n              <ng-container matColumnDef=\\\"roles\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Nom</th>\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\">{{element.utilisateurs.nom}} {{element.utilisateurs.prenom}}</td>\\r\\n              </ng-container>\\r\\n              \\r\\n              <!-- Star Column -->\\r\\n              <ng-container matColumnDef=\\\"action\\\" stickyEnd>\\r\\n                <th mat-header-cell *matHeaderCellDef>Action</th>\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                    <button mat-button  color=\\\"warn\\\" (click)=\\\"supprimerUser(element.id)\\\">\\r\\n                        <mat-icon>delete</mat-icon>\\r\\n                        <span>Supprimer</span>\\r\\n                      </button>\\r\\n                </td>\\r\\n              </ng-container>\\r\\n          \\r\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n            </table>\\r\\n            <mat-paginator [pageSizeOptions]=\\\"[4]\\\"></mat-paginator>\\r\\n          </div>\\r\\n    </div>\";","export default \".image {\\n  width: 100px;\\n  height: 100px;\\n  border-radius: 20px 20px 20px 20px;\\n  border: 1px solid rgba(8, 8, 146, 0.651);\\n  margin-top: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcdXBkYXRlLXByb2pldC1yZW5vdmF0aW9uLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFBQTtFQUNBLGFBQUE7RUFDQSxrQ0FBQTtFQUNBLHdDQUFBO0VBQ0EsZ0JBQUE7QUFDSiIsImZpbGUiOiJ1cGRhdGUtcHJvamV0LXJlbm92YXRpb24uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaW1hZ2V7XHJcbiAgICB3aWR0aDogMTAwcHg7XHJcbiAgICBoZWlnaHQ6IDEwMHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogMjBweCAyMHB4IDIwcHggMjBweDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoOCwgOCwgMTQ2LCAwLjY1MSk7XHJcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG59Il19 */\";","export default \".element {\\n  color: white;\\n}\\n\\n.image {\\n  height: 200px;\\n}\\n\\n.example-tooltip-red {\\n  background: #080883;\\n  font-weight: bold;\\n}\\n\\n.infor {\\n  font-size: 13px;\\n  padding: 5px;\\n}\\n\\n.infor mat-icon {\\n  margin-right: 10px;\\n}\\n\\n.buton-action {\\n  float: right;\\n}\\n\\n.recherche {\\n  width: 70%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFxwcm9qZXQtcmVub3ZhdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFlBQUE7QUFDSjs7QUFFQTtFQUNJLGFBQUE7QUFDSjs7QUFFQTtFQUNJLG1CQUFBO0VBQ0EsaUJBQUE7QUFDSjs7QUFDQTtFQUNJLGVBQUE7RUFDQSxZQUFBO0FBRUo7O0FBREk7RUFDSSxrQkFBQTtBQUdSOztBQUNBO0VBQ0ksWUFBQTtBQUVKOztBQUNBO0VBQ0ksVUFBQTtBQUVKIiwiZmlsZSI6InByb2pldC1yZW5vdmF0aW9uLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmVsZW1lbnR7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbi5pbWFnZXtcclxuICAgIGhlaWdodDogMjAwcHg7XHJcbn1cclxuXHJcbi5leGFtcGxlLXRvb2x0aXAtcmVke1xyXG4gICAgYmFja2dyb3VuZDogcmdiKDgsIDgsIDEzMSk7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxufVxyXG4uaW5mb3J7XHJcbiAgICBmb250LXNpemU6IDEzcHg7XHJcbiAgICBwYWRkaW5nOiA1cHg7XHJcbiAgICBtYXQtaWNvbntcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5idXRvbi1hY3Rpb257XHJcbiAgICBmbG9hdDogcmlnaHQ7XHJcbn1cclxuXHJcbi5yZWNoZXJjaGV7XHJcbiAgICB3aWR0aDogNzAlO1xyXG4gIH0iXX0= */\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Client } from 'src/app/shared/models/utilisateeur';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ProjetRenauvation } from 'src/app/shared/models/demarrage-projet/projet-renovation.model';\r\nimport { Renovation } from 'src/app/shared/models/Renovation';\r\n\r\n@Injectable()\r\nexport class ProjetRenauvationService {\r\n    \r\n    constructor(public http:HttpClient) { }\r\n    \r\n    getprojets(): Observable<ProjetRenauvation[]> {\r\n        return this.http.get<ProjetRenauvation[]>(environment.BACK_END.DEMARRAGERENAUVATION.PROJET_RENAUVATION_GERANT);\r\n    }\r\n    getProjetById(id): Observable<ProjetRenauvation> {\r\n        return this.http.get<ProjetRenauvation>(environment.BACK_END.DEMARRAGERENAUVATION.PROJET_RENAUVATION_GERANT+\"\"+id);\r\n    }\r\n\r\n    addprojet(projet){\t    \r\n        return this.http.post(environment.BACK_END.DEMARRAGERENAUVATION.PROJET_RENAUVATION_GERANT, projet);\r\n    }\r\n\r\n    deleteprojet(id: number) {\r\n        return this.http.delete(environment.BACK_END.DEMARRAGERENAUVATION.PROJET_RENAUVATION_GERANT + \"\" + id);\r\n    } \r\n\r\n    updateprojet(projet, id){\t    \r\n        return this.http.put(environment.BACK_END.DEMARRAGERENAUVATION.PROJET_RENAUVATION_GERANT+\"\"+id, projet);\r\n    }\r\n\r\n    getAllRenovation(): Observable<Renovation[]> {\r\n        return this.http.get<Renovation[]>(environment.BACK_END.DEMARRAGERENAUVATION.PROJET_RENAUVATION_GERANT+\"renovation/\");\r\n    }\r\n} ","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { DropzoneComponent, DropzoneConfigInterface } from 'ngx-dropzone-wrapper';\r\nimport { Renovation } from 'src/app/shared/models/Renovation';\r\nimport { ProjetRenauvationService } from '../projet-renovation.service';\r\nimport { ClientRenovation } from '../../renovations/client-renovation';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AppConfirmService } from 'src/app/shared/utils/app-confirm/app-confirm.service';\r\nimport { SnackBarService } from 'src/app/shared/services/SnackBar';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-update-projet-renovation',\r\n  templateUrl: './update-projet-renovation.component.html',\r\n  styleUrls: ['./update-projet-renovation.component.scss']\r\n})\r\nexport class UpdateProjetRenovationComponent implements OnInit {\r\n  isLoadingResults = true;\r\n  projetRenovation : FormGroup;\r\n  listeRenovation: Renovation[];\r\n  img : string ='';\r\n  id = null\r\n\r\n  dropzoneComponentRef?: DropzoneComponent;\r\n\r\n  get photo(){return this.projetRenovation.get('photo')}\r\n  \r\n  URLpage=environment.BACK_END.FILEUPLOAD+'download/';\r\n\r\n  constructor(private fb : FormBuilder, private projetService: ProjetRenauvationService,\r\n    private route: ActivatedRoute,\r\n    private confirm: AppConfirmService,\r\n    private snackBar:SnackBarService,\r\n    private router: Router) { \r\n      this.id = this.route.snapshot.params.id;\r\n    }\r\n\r\n  ngOnInit(): void {\r\n    this.init();\r\n  }\r\n\r\n  init(){\r\n    this.id = parseInt(this.id);\r\n    if(this.id >0)\r\n    {\r\n      this.projetService.getProjetById(this.id).subscribe((projet)=>{\r\n        this.projetService.getAllRenovation().subscribe((data)=>{\r\n          this.listeRenovation = data;\r\n          this.isLoadingResults = false\r\n        })\r\n        this.img = projet.photo;\r\n        this.projetRenovation = this.fb.group({\r\n          id:projet.id,\r\n          budget: [projet.budget, Validators.required] ,\r\n          dateDemarrage: [projet.dateDemarrage, Validators.required],\r\n          dateFinission: [projet.dateFinission, Validators.required],\r\n          renovation :[projet.renovation, Validators.required],\r\n          photo:[projet.photo, Validators.required]\r\n        })\r\n      },\r\n      (error: HttpErrorResponse) =>{\r\n        this.id = null;\r\n        this.projetService.getAllRenovation().subscribe((data)=>{\r\n          this.listeRenovation = data;\r\n          this.isLoadingResults = false\r\n        })\r\n        this.projetRenovation = this.fb.group({\r\n          id:null,\r\n          budget: [null, Validators.required] ,\r\n          dateDemarrage: [null, Validators.required],\r\n          dateFinission: [null, Validators.required],\r\n          renovation :[null, Validators.required],\r\n          photo:[null, Validators.required]\r\n        })\r\n      })\r\n    }\r\n    else{\r\n      this.projetService.getAllRenovation().subscribe((data)=>{\r\n        this.listeRenovation = data;\r\n        this.isLoadingResults = false\r\n      })\r\n      this.projetRenovation = this.fb.group({\r\n        id:null,\r\n        budget: [null, Validators.required] ,\r\n        dateDemarrage: [null, Validators.required],\r\n        dateFinission: [null, Validators.required],\r\n        renovation :[null, Validators.required],\r\n        photo:[null, Validators.required]\r\n      })\r\n    }\r\n  }\r\n\r\n  public onUploadError(args: any): void {\r\n    this.dropzoneComponentRef.directiveRef.reset();\r\n  }\r\n  public resetDropZone(): void {\r\n    this.dropzoneComponentRef.directiveRef.reset();\r\n    this.photo.setValue(null);\r\n  }\r\n  public onUploadSuccess(remoteResponse): void {\r\n    this.photo.setValue(\"data:\"+remoteResponse[1].contentType+\";base64,\"+remoteResponse[1].url);\r\n  }\r\n\r\n  public onUploadInit(args: any): void {\r\n\r\n  }\r\n  onSubmit()\r\n  {\r\n    if(this.projetRenovation.valid){\r\n      this.isLoadingResults = true;\r\n        if(this.id > 0){\r\n          this.projetService.updateprojet(this.projetRenovation.value, this.id).subscribe((data)=>{\r\n\r\n          },(error: HttpErrorResponse)=>{\r\n            if(error.status<300){\r\n              this.snackBar.openSnackBar(\"Projet modifier avec success\",\"OK\",5000);\r\n              this.router.navigate([\"/projet-renovation\"]);\r\n            }else{\r\n              this.isLoadingResults = false;\r\n              this.snackBar.openSnackBar(\"Projet non Modifier car la renovation choisis existe deja\",\"OK\",5000);\r\n            }\r\n          })\r\n        }\r\n        else{\r\n          this.projetService.addprojet(this.projetRenovation.value).subscribe((data)=>{\r\n\r\n          },(error: HttpErrorResponse)=>{\r\n            if(error.status<300){\r\n              this.snackBar.openSnackBar(\"Projet enregistrer avec success\",\"OK\",5000);\r\n              this.router.navigate([\"/projet-renovation\"]);\r\n            }else{\r\n              this.isLoadingResults = false;\r\n              this.snackBar.openSnackBar(\"Projet non enregistrer car la renovation choisis existe deja\",\"OK\",5000);\r\n            }\r\n          })\r\n        }\r\n    }\r\n    else{\r\n      this.snackBar.openSnackBar(\"Remplire tous les champs svp\",\"OK\",5000);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  public config: DropzoneConfigInterface = {\r\n    clickable: true,\r\n    maxFiles: 1,\r\n    autoReset: null,\r\n    resizeWidth :300,\r\n    resizeHeight :300,\r\n    thumbnailHeight: 300,\r\n    thumbnailWidth: 300,\r\n    acceptedFiles: 'image/*',\r\n    errorReset: null,\r\n    cancelReset: null\r\n  };\r\n}\r\n","export default \"\\r\\n<div fxLayout=\\\"row wrap\\\">\\r\\n    <div class=\\\"table-bouton-ajout\\\">\\r\\n        <mat-button-toggle-group appearance=\\\"legacy\\\">\\r\\n            <button routerLink=\\\"update/null\\\" mat-raised-button color=\\\"primary\\\">Demarrer un projet de renovation</button>\\r\\n        </mat-button-toggle-group>\\r\\n    </div>\\r\\n        <!--<div class=\\\"recherche\\\">\\r\\n            <mat-form-field class=\\\"recherche\\\">\\r\\n                <input matInput  placeholder=\\\"Rechercher generale...\\\" >\\r\\n                <mat-icon matSuffix >clear</mat-icon>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>indice de recherche</mat-label>\\r\\n                <mat-select >\\r\\n                    <mat-option [value]=\\\"'budget'\\\"></mat-option>\\r\\n                    <mat-option *ngFor=\\\"let e of elementRecheche\\\" [value]=\\\"e\\\">{{e}}</mat-option>\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n        </div>-->\\r\\n  </div>\\r\\n\\r\\n    <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"32\\\" class=\\\"flex-p\\\" *ngFor=\\\"let p of projet  | paginate: { itemsPerPage: 6, currentPage: page }\\\"> \\r\\n            <mat-card class=\\\"custom-card\\\">\\r\\n                    <mat-card-header class=\\\"bg-primary p-1\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                        <mat-card-title  class=\\\"m-0\\\"><h3><button mat-button>{{p.renovation.nomRenovation}}</button></h3></mat-card-title>\\r\\n                        <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\"><mat-icon>more_vert</mat-icon></button>\\r\\n                    </mat-card-header>\\r\\n                    <mat-menu #menu=\\\"matMenu\\\">\\r\\n                        <button mat-menu-item routerLink=\\\"update/{{p.id}}\\\">\\r\\n                          <mat-icon>edite</mat-icon>\\r\\n                          <span>Modifier</span>\\r\\n                        </button>\\r\\n                        <button mat-menu-item color=\\\"warn\\\" (click)=\\\"supprimerRenovation(p.id)\\\">\\r\\n                          <mat-icon>delete</mat-icon>\\r\\n                          <span>Supprimer</span>\\r\\n                        </button>\\r\\n                      </mat-menu>\\r\\n                <img class=\\\"image\\\" mat-card-image src=\\\"{{URLpage}}{{p.photo.split('/')[2]}}\\\" alt=\\\"5\\\">\\r\\n                <mat-card-content class=\\\"p-\\\">\\r\\n                    <p fxLayout=\\\"row\\\" class=\\\"infor\\\">\\r\\n                        <mat-icon>face</mat-icon>  \\r\\n                        <span> <strong><i>Client : </i> {{p.renovation.client.email}}</strong></span>\\r\\n                    </p>\\r\\n                    <p fxLayout=\\\"row\\\" class=\\\"infor\\\">\\r\\n                        <mat-icon>local_atm</mat-icon>  \\r\\n                        <span> <strong><i>Budget : </i> {{p.budget}} euros</strong></span>\\r\\n                    </p>\\r\\n                    <p fxLayout=\\\"row\\\"  class=\\\"infor\\\">\\r\\n                        <mat-icon>timer</mat-icon>  \\r\\n                        <span> <strong><i>Durée :</i> {{p.dateDemarrage| date:'dd/MM/yyyy'}} - {{p.dateFinission| date:'dd/MM/yyyy'}}</strong></span>\\r\\n                    </p>\\r\\n                    \\r\\n                    <p fxLayout=\\\"row\\\" class=\\\"infor\\\">\\r\\n                        <mat-icon>location_on</mat-icon>  \\r\\n                        <span> <strong><i>Adresse : </i> {{p.renovation.adressChantier}}</strong></span>\\r\\n                    </p>\\r\\n                </mat-card-content>\\r\\n                <mat-divider></mat-divider>\\r\\n                <mat-card-actions fxLayoutAlign=\\\"end center\\\">\\r\\n                    <button\\r\\n                        matTooltip=\\\"Utilisateurs affecter au projet pour la renovation\\\"\\r\\n                        matTooltipClass=\\\"example-tooltip-red\\\"\\r\\n                        aria-label=\\\"Button that shows a red tooltip\\\"\\r\\n                     button mat-icon-button (click)=\\\"openDialog(p)\\\">\\r\\n                        <mat-icon>groups</mat-icon>\\r\\n                    </button>\\r\\n                </mat-card-actions>\\r\\n            </mat-card>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n<div fxLayout=\\\"row wrap\\\" *ngIf=\\\"projet\\\">\\r\\n    <div fxFlex=\\\"100\\\" class=\\\"flex-p\\\"> \\r\\n        <mat-card class=\\\"p-0 text-center\\\">           \\r\\n            <pagination-controls class=\\\"gradus-pagination\\\" autoHide=\\\"true\\\" maxSize=\\\"3\\\" (pageChange)=\\\"onPageChanged($event)\\\"></pagination-controls>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"isLoadingResults\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"user-spinner\\\">   \\r\\n    <mat-spinner color=\\\"primary\\\"></mat-spinner>\\r\\n  </div>\";","import { UserAffecterProjetRenovationServices } from './../../user-affecter-projet-renovation/user-affecter-projet.service';\r\nimport { Component, Inject, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { SnackBarService } from 'src/app/shared/services/SnackBar';\r\nimport { Utilisateur } from 'src/app/shared/models/utilisateeur';\r\nimport { UserAffecterProjet } from 'src/app/shared/models/demarrage-projet/projet-renovation.model';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { AppConfirmService } from 'src/app/shared/utils/app-confirm/app-confirm.service';\r\n\r\n@Component({\r\n  selector: 'app-utilisateur-affecter-modal',\r\n  templateUrl: './utilisateur-affecter-modal.component.html',\r\n  styleUrls: ['./utilisateur-affecter-modal.component.scss'],\r\n  providers:[UserAffecterProjetRenovationServices]\r\n})\r\nexport class UtilisateurAffecterModalComponent implements OnInit {\r\n  isLoadingResults = false;\r\n  listeUser:Utilisateur[];\r\n  userAffect: UserAffecterProjet[]=[];\r\n  userForm: FormGroup;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  displayedColumns =['id','libelle', 'roles','action'];\r\n  dataSources = new MatTableDataSource<UserAffecterProjet>(this.userAffect);\r\n  constructor(public dialogRef: MatDialogRef<UtilisateurAffecterModalComponent>,private snackBar: SnackBarService,\r\n    public dialog: MatDialog, @Inject(MAT_DIALOG_DATA) public data: any,private fb: FormBuilder, \r\n    private userAffecter: UserAffecterProjetRenovationServices,private confirm: AppConfirmService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.initDonner();\r\n    this.init();\r\n  }\r\n\r\n  initDonner(){\r\n    this.isLoadingResults = true;\r\n    this.userAffecter.listUserNonAffecter(\"\"+this.data.projet.id).subscribe((data)=>{\r\n      this.listeUser = data;\r\n      console.log(this.listeUser);\r\n      this.userAffecter.getUsers(this.data.projet.id).subscribe((userA)=>{\r\n        this.userAffect = userA;\r\n        this.dataSources = new MatTableDataSource<UserAffecterProjet>(this.userAffect);\r\n        this.dataSources.paginator = this.paginator;\r\n      this.dataSources.sort = this.sort;\r\n      this.isLoadingResults = false;\r\n      })\r\n    })\r\n  }\r\n\r\n  init(){\r\n    this.userForm = this.fb.group({\r\n      id: null,\r\n      utilisateurs: [null, Validators.required],\r\n      projetRenovation: this.data.projet,\r\n    })\r\n  }\r\n\r\n  onSubmit(){\r\n    console.log(this.userForm.value)\r\n   if(this.userForm.valid){\r\n    this.isLoadingResults = true;\r\n    this.userAffecter.addUser(this.userForm.value).subscribe((data)=>{\r\n\r\n    },(error:HttpErrorResponse)=>{\r\n      if(error.status<300)\r\n      {\r\n        this.snackBar.openSnackBar(\"utilisateur ajouter avec success\", \"success\", 3000);\r\n        this.initDonner();\r\n        this.userForm.get('utilisateurs').setValue(null);\r\n      }\r\n      else{\r\n        this.isLoadingResults = false;\r\n        this.snackBar.openSnackBar(\"utilisateur est deja affecter au projet\", \"error\", 3000);\r\n      }\r\n    })\r\n   }else{\r\n      this.snackBar.openSnackBar(\"Remplirer tous les champs svp\", \"error\", 3000);\r\n   }\r\n  }\r\n\r\n  supprimerUser(index){\r\n    this.confirm.confirm({\r\n      title:\"Confirmation\",\r\n      message:`Voulez-vous supprimer cette pièce complémentaire ? `\r\n    }).subscribe(($choix)=> {\r\n\r\n      if($choix) {\r\n        this.isLoadingResults=true;\r\n        this.userAffecter.deleteUser(index).subscribe(()=>{\r\n          \r\n        },\r\n        (error: HttpErrorResponse) => {\r\n              this.isLoadingResults=false;\r\n              if(error.status<300)\r\n              {\r\n                this.snackBar.openSnackBar(\"Element supprimé avec succès\", \"OK\",3000);\r\n                this.ngOnInit();\r\n              }\r\n              else{\r\n                this.snackBar.openSnackBar(\"Element non supprimer \", \"OK\",3000);\r\n              }\r\n              \r\n          });\r\n      }\r\n\r\n    });\r\n  }\r\n}\r\n","export default \".contenu-body {\\n  height: 200px;\\n}\\n\\n.example-container {\\n  width: 100%;\\n  max-width: 100%;\\n  overflow: auto;\\n}\\n\\ntable {\\n  width: 100%;\\n}\\n\\n.recherche {\\n  width: 80%;\\n}\\n\\ntd.mat-column-star {\\n  width: 20px;\\n  padding-right: 8px;\\n}\\n\\nth.mat-column-position, td.mat-column-position {\\n  padding-left: 8px;\\n}\\n\\n.mat-table-sticky-border-elem-right {\\n  border-left: 1px solid #e0e0e0;\\n}\\n\\n.mat-table-sticky-border-elem-left {\\n  border-right: 1px solid #e0e0e0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcdXRpbGlzYXRldXItYWZmZWN0ZXItbW9kYWwuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBSUE7RUFDSSxhQUFBO0FBSEo7O0FBTUE7RUFDSSxXQUFBO0VBQ0EsZUFBQTtFQUNBLGNBQUE7QUFISjs7QUFNRTtFQUNFLFdBQUE7QUFISjs7QUFNRTtFQUNFLFVBQUE7QUFISjs7QUFNRTtFQUNFLFdBQUE7RUFDQSxrQkFBQTtBQUhKOztBQU1FO0VBQ0UsaUJBQUE7QUFISjs7QUFNRTtFQUNFLDhCQUFBO0FBSEo7O0FBTUU7RUFDRSwrQkFBQTtBQUhKIiwiZmlsZSI6InV0aWxpc2F0ZXVyLWFmZmVjdGVyLW1vZGFsLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRhYmxle1xyXG5cclxufVxyXG5cclxuLmNvbnRlbnUtYm9keXtcclxuICAgIGhlaWdodDogMjAwcHg7XHJcbn1cclxuXHJcbi5leGFtcGxlLWNvbnRhaW5lciB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIG1heC13aWR0aDogMTAwJTtcclxuICAgIG92ZXJmbG93OiBhdXRvO1xyXG4gIH1cclxuICBcclxuICB0YWJsZSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcblxyXG4gIC5yZWNoZXJjaGV7XHJcbiAgICB3aWR0aDogODAlO1xyXG4gIH1cclxuICBcclxuICB0ZC5tYXQtY29sdW1uLXN0YXIge1xyXG4gICAgd2lkdGg6IDIwcHg7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiA4cHg7XHJcbiAgfVxyXG4gIFxyXG4gIHRoLm1hdC1jb2x1bW4tcG9zaXRpb24sIHRkLm1hdC1jb2x1bW4tcG9zaXRpb24ge1xyXG4gICAgcGFkZGluZy1sZWZ0OiA4cHg7XHJcbiAgfVxyXG4gIFxyXG4gIC5tYXQtdGFibGUtc3RpY2t5LWJvcmRlci1lbGVtLXJpZ2h0IHtcclxuICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgI2UwZTBlMDtcclxuICB9XHJcbiAgXHJcbiAgLm1hdC10YWJsZS1zdGlja3ktYm9yZGVyLWVsZW0tbGVmdCB7XHJcbiAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjZTBlMGUwO1xyXG4gIH0iXX0= */\";","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { stringify } from '@angular/compiler/src/util';\r\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { Settings } from 'src/app/app.settings.model';\r\nimport { ProjetRenauvation } from 'src/app/shared/models/demarrage-projet/projet-renovation.model';\r\nimport { SnackBarService } from 'src/app/shared/services/SnackBar';\r\nimport { AppConfirmService } from 'src/app/shared/utils/app-confirm/app-confirm.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ProjetRenauvationService } from './projet-renovation.service';\r\nimport { UtilisateurAffecterModalComponent } from './utilisateur-affecter-modal/utilisateur-affecter-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-projet-renovation',\r\n  templateUrl: './projet-renovation.component.html',\r\n  styleUrls: ['./projet-renovation.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ProjetRenovationComponent implements OnInit {\r\nprojet :ProjetRenauvation[];\r\npage: any;\r\nelementRecheche=['budget', 'dateDemarrage', 'email', 'nomRenovation']\r\npublic settings: Settings;\r\nisLoadingResults=false;\r\nURLpage=environment.BACK_END.FILEUPLOAD+'download/';\r\nconstructor(public appSettings:AppSettings,private snackBar: SnackBarService,\r\n            public dialog: MatDialog,private confirm: AppConfirmService,\r\n            public projetService: ProjetRenauvationService){\r\n    this.settings = this.appSettings.settings; \r\n}\r\n\r\n  ngOnInit(): void {\r\n    this.getElement();\r\n  }\r\n\r\n  getImgUsrl(p: ProjetRenauvation): string\r\n  {\r\n    //console.log(p.photo);\r\n    return p.photo;\r\n    //return this.URLpage+\"\"+img.split('/')[2];\r\n  }\r\n\r\n  getElement(){\r\n    this.isLoadingResults=true;\r\n    this.projetService.getprojets().subscribe((data) =>{\r\n      this.projet = data;\r\n      console.log(this.projet);\r\n      this.isLoadingResults=false;\r\n    })\r\n  }\r\n\r\n    public onPageChanged(event){\r\n      this.page = event;\r\n      //this.getUsers();\r\n      if(this.settings.fixedHeader){      \r\n          document.getElementById('main-content').scrollTop = 0;\r\n      }\r\n      else{\r\n          document.getElementsByClassName('mat-drawer-content')[0].scrollTop = 0;\r\n      }\r\n  }\r\n\r\n  openDialog(projet: ProjetRenauvation): void {\r\n    const dialogRef = this.dialog.open(UtilisateurAffecterModalComponent, {\r\n      width: '600px',\r\n      height:'700px',\r\n      data: {projet: projet},\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result ==null)\r\n      {\r\n        this.getElement();\r\n      }\r\n    });\r\n  }\r\n\r\n  supprimerRenovation(index){\r\n    this.confirm.confirm({\r\n      title:\"Confirmation\",\r\n      message:`Voulez-vous supprimer cette pièce complémentaire ? `\r\n    }).subscribe(($choix)=> {\r\n\r\n      if($choix) {\r\n        this.isLoadingResults=true;\r\n        this.projetService.deleteprojet(index).subscribe(()=>{\r\n          \r\n        },\r\n        (error: HttpErrorResponse) => {\r\n              this.isLoadingResults=false;\r\n              if(error.status<300)\r\n              {\r\n                this.snackBar.openSnackBar(\"Element supprimé avec succès\", \"OK\",3000);\r\n                this.getElement();\r\n              }\r\n              else{\r\n                this.snackBar.openSnackBar(\"Element non supprimer \", \"OK\",3000);\r\n              }\r\n              \r\n          });\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  rechercheBudget(arr : ProjetRenauvation[], requete) {\r\n    return arr.filter(function (el) {\r\n      return  el.budget+\"\".indexOf(requete.toLowerCase()) !== -1;\r\n    })\r\n  }\r\n\r\n  rechercheNomRenovation(arr : ProjetRenauvation[], requete) {\r\n    return arr.filter(function (el) {\r\n      return  el.renovation.nomRenovation.toLowerCase().indexOf(requete.toLowerCase()) !== -1;\r\n    })\r\n  }\r\n\r\n  rechercheEmail(arr : ProjetRenauvation[], requete) {\r\n    return arr.filter(function (el) {\r\n      return  el.renovation.client.email.toLowerCase().indexOf(requete.toLowerCase()) !== -1;\r\n    })\r\n  }\r\n\r\n}\r\n","import { RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ProjetRenovationComponent } from './projet-renovation.component';\r\nimport { UpdateProjetRenovationComponent } from './update-projet-renovation/update-projet-renovation.component';\r\nimport { ProjetRenauvationService } from './projet-renovation.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { DropzoneConfigInterface, DropzoneModule, DROPZONE_CONFIG } from 'ngx-dropzone-wrapper';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { RenovationsModule } from '../renovations/renovations.module';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { ClientRenovation } from '../renovations/client-renovation';\r\nimport { UtilisateurAffecterModalComponent } from './utilisateur-affecter-modal/utilisateur-affecter-modal.component';\r\n\r\n\r\nconst DEFAULT_DROPZONE_CONFIG: DropzoneConfigInterface = {\r\n  // Change this to your upload POST address:\r\n   url: environment.BACK_END.FILEUPLOAD+'file',\r\n   maxFilesize: 50,\r\n   acceptedFiles: 'image/*,application/pdf',\r\n   addRemoveLinks: true,\r\n };\r\n \r\nexport const routes = [\r\n  { path: '', component: ProjetRenovationComponent, data: { breadcrumb: 'Projet Renauvation' } },\r\n  { path: 'update/:id', component: UpdateProjetRenovationComponent, data: { breadcrumb: 'update' } },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [ProjetRenovationComponent, UpdateProjetRenovationComponent, UtilisateurAffecterModalComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    DropzoneModule,\r\n    NgxPaginationModule,\r\n    NgSelectModule\r\n  ],\r\n  providers: [\r\n    ProjetRenauvationService,\r\n    ClientRenovation,\r\n    {\r\n      provide: DROPZONE_CONFIG,\r\n      useValue: DEFAULT_DROPZONE_CONFIG,\r\n    }\r\n  ],\r\n  exports: [UtilisateurAffecterModalComponent]\r\n})\r\nexport class ProjetRenovationModule { }\r\n"]}