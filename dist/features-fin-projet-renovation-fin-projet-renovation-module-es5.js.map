{"version":3,"sources":["webpack:///src/app/features/fin-projet-renovation/projet/projet.component.ts","webpack:///src/app/features/fin-projet-renovation/fin-projet-renovation.module.ts","webpack:///src/app/features/fin-projet-renovation/fin-projet-renovation.component.scss","webpack:///src/app/features/fin-projet-renovation/fin-projet-renovation.component.html","webpack:///src/app/features/fin-projet-renovation/projet/projet.component.html","webpack:///src/app/features/fin-projet-renovation/fin-projet-renovation.component.ts","webpack:///src/app/features/fin-projet-renovation/projet-realiser/projet-realiser.component.scss","webpack:///src/app/features/fin-projet-renovation/projet/projet.component.scss","webpack:///src/app/features/fin-projet-renovation/projet-realiser/projet-realiser.component.ts","webpack:///src/app/features/fin-projet-renovation/projet-realiser/projet-realiser.component.html"],"names":["ProjetComponent","fb","projetService","confirm","dialogRef","snackBar","isLoadingResults","projetRenovation","group","id","dateCloture","Date","required","getprojetRenovation","subscribe","data","listeRenovation","console","log","value","valid","addProjet","error","status","openSnackBar","close","selector","template","routes","path","component","breadcrumb","FinProjetRenovationModule","declarations","imports","forChild","providers","FinProjetRenovationComponent","appSettings","dialog","elementRecheche","URLpage","BACK_END","FILEUPLOAD","settings","getElement","getProjet","projet","event","page","fixedHeader","document","getElementById","scrollTop","getElementsByClassName","open","width","height","disableClose","afterClosed","result","index","title","message","$choix","deleteProjet","ProjetRealiserComponent","getAllProjet","encapsulation","None"],"mappings":"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","file":"features-fin-projet-renovation-fin-projet-renovation-module-es5.js","sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { ProjetRenauvation } from 'src/app/shared/models/demarrage-projet/projet-renovation.model';\r\nimport { SnackBarService } from 'src/app/shared/services/SnackBar';\r\nimport { AppConfirmService } from 'src/app/shared/utils/app-confirm/app-confirm.service';\r\nimport { CloturerRenovationService } from '../cloturerProjet.service';\r\n\r\n@Component({\r\n  selector: 'app-projet',\r\n  templateUrl: './projet.component.html',\r\n  styleUrls: ['./projet.component.scss']\r\n})\r\nexport class ProjetComponent implements OnInit {\r\n  isLoadingResults = true;\r\n  projetRenovation : FormGroup;\r\n  listeRenovation: ProjetRenauvation[];\r\n\r\n  constructor(private fb : FormBuilder, private projetService: CloturerRenovationService,\r\n    private confirm: AppConfirmService,\r\n    public dialogRef: MatDialogRef<ProjetComponent>,\r\n    private snackBar:SnackBarService) {\r\n      this.projetRenovation = fb.group({\r\n        id: 0.0,\r\n        dateCloture: new Date(),\r\n        projetRenovation : [null, Validators.required]\r\n      });\r\n     }\r\n\r\n  ngOnInit(): void {\r\n    this.isLoadingResults =true;\r\n    this.projetService.getprojetRenovation().subscribe(data=>{\r\n      this.listeRenovation = data;\r\n      this.isLoadingResults =false;\r\n    })\r\n  }\r\n\r\n  onSubmit()\r\n  {\r\n   console.log(this.projetRenovation.value)\r\n    if(this.projetRenovation.valid){\r\n      this.isLoadingResults = true;\r\n          this.projetService.addProjet(this.projetRenovation.value).subscribe((data)=>{\r\n\r\n          },(error: HttpErrorResponse)=>{\r\n            if(error.status<300){\r\n              this.snackBar.openSnackBar(\"Projet cloturer avec success\",\"OK\",5000);\r\n              this.dialogRef.close();\r\n            }else{\r\n              console.log(error);\r\n              this.isLoadingResults = false;\r\n              this.snackBar.openSnackBar(\"Projet non cloturer car la renovation choisis existe deja\",\"OK\",5000);\r\n            }\r\n          })\r\n    }\r\n    else{\r\n      this.snackBar.openSnackBar(\"Remplire tous les champs svp\",\"OK\",5000);\r\n    }\r\n  }\r\n\r\n}\r\n","import { FinProjetRenovationComponent } from './fin-projet-renovation.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ProjetComponent } from './projet/projet.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { CloturerRenovationService } from './cloturerProjet.service';\r\nimport { ProjetRealiserComponent } from './projet-realiser/projet-realiser.component';\r\n\r\nexport const routes = [\r\n  { path: 'cloturer', component: FinProjetRenovationComponent, data: { breadcrumb: 'Projet Cloturé' } },\r\n  { path: '', component: ProjetRealiserComponent, data: { breadcrumb: 'projet realiser' } },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ProjetComponent,\r\n    FinProjetRenovationComponent,\r\n    ProjetRealiserComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    NgxPaginationModule,\r\n    NgSelectModule\r\n  ],\r\n  providers : [CloturerRenovationService]\r\n})\r\nexport class FinProjetRenovationModule { }\r\n","export default \".element {\\n  color: white;\\n}\\n\\n.image {\\n  height: 200px;\\n}\\n\\n.example-tooltip-red {\\n  background: #080883;\\n  font-weight: bold;\\n}\\n\\n.infor {\\n  font-size: 13px;\\n  padding: 5px;\\n}\\n\\n.infor mat-icon {\\n  margin-right: 10px;\\n}\\n\\n.buton-action {\\n  float: right;\\n}\\n\\n.recherche {\\n  width: 70%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFxmaW4tcHJvamV0LXJlbm92YXRpb24uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxZQUFBO0FBQ0o7O0FBRUE7RUFDSSxhQUFBO0FBQ0o7O0FBRUE7RUFDSSxtQkFBQTtFQUNBLGlCQUFBO0FBQ0o7O0FBQ0E7RUFDSSxlQUFBO0VBQ0EsWUFBQTtBQUVKOztBQURJO0VBQ0ksa0JBQUE7QUFHUjs7QUFDQTtFQUNJLFlBQUE7QUFFSjs7QUFDQTtFQUNJLFVBQUE7QUFFSiIsImZpbGUiOiJmaW4tcHJvamV0LXJlbm92YXRpb24uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZWxlbWVudHtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuLmltYWdle1xyXG4gICAgaGVpZ2h0OiAyMDBweDtcclxufVxyXG5cclxuLmV4YW1wbGUtdG9vbHRpcC1yZWR7XHJcbiAgICBiYWNrZ3JvdW5kOiByZ2IoOCwgOCwgMTMxKTtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59XHJcbi5pbmZvcntcclxuICAgIGZvbnQtc2l6ZTogMTNweDtcclxuICAgIHBhZGRpbmc6IDVweDtcclxuICAgIG1hdC1pY29ue1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogMTBweDtcclxuICAgIH1cclxufVxyXG5cclxuLmJ1dG9uLWFjdGlvbntcclxuICAgIGZsb2F0OiByaWdodDtcclxufVxyXG5cclxuLnJlY2hlcmNoZXtcclxuICAgIHdpZHRoOiA3MCU7XHJcbiAgfSJdfQ== */\";","export default \"\\r\\n<div fxLayout=\\\"row wrap\\\">\\r\\n    <div class=\\\"table-bouton-ajout\\\">\\r\\n        <mat-button-toggle-group appearance=\\\"legacy\\\">\\r\\n            <button (click)=\\\"openDialog()\\\" mat-raised-button color=\\\"primary\\\">cloturer un projet de renovation</button>\\r\\n        </mat-button-toggle-group>\\r\\n    </div>\\r\\n        <!--<div class=\\\"recherche\\\">\\r\\n            <mat-form-field class=\\\"recherche\\\">\\r\\n                <input matInput  placeholder=\\\"Rechercher generale...\\\" >\\r\\n                <mat-icon matSuffix >clear</mat-icon>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>indice de recherche</mat-label>\\r\\n                <mat-select >\\r\\n                    <mat-option [value]=\\\"'budget'\\\"></mat-option>\\r\\n                    <mat-option *ngFor=\\\"let e of elementRecheche\\\" [value]=\\\"e\\\">{{e}}</mat-option>\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n        </div>-->\\r\\n  </div>\\r\\n\\r\\n    <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row wrap\\\" *ngIf=\\\"!isLoadingResults\\\">\\r\\n        <div fxFlex=\\\"32\\\" class=\\\"flex-p\\\" *ngFor=\\\"let p of projet  | paginate: { itemsPerPage: 6, currentPage: page }\\\"> \\r\\n            <mat-card class=\\\"custom-card\\\">\\r\\n                    <mat-card-header class=\\\"bg-primary p-1\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                        <mat-card-title  class=\\\"m-0\\\"><h3><button mat-button> Projet {{p.projetRenovation.renovation.nomRenovation}}</button></h3></mat-card-title>\\r\\n                        <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\"><mat-icon>more_vert</mat-icon></button>\\r\\n                    </mat-card-header>\\r\\n                    <mat-menu #menu=\\\"matMenu\\\">\\r\\n                        <button mat-menu-item color=\\\"warn\\\" (click)=\\\"supprimerRenovation(p.id)\\\">\\r\\n                          <mat-icon>delete</mat-icon>\\r\\n                          <span>Supprimer</span>\\r\\n                        </button>\\r\\n                      </mat-menu>\\r\\n                <mat-card-content class=\\\"p-\\\">\\r\\n                <mat-divider></mat-divider>\\r\\n                    <p fxLayout=\\\"row\\\" class=\\\"infor\\\">\\r\\n                        <mat-icon>face</mat-icon>  \\r\\n                        <span> <strong><i>Client : </i> {{p.projetRenovation.renovation.client.email}}</strong></span>\\r\\n                    </p>\\r\\n                    <p fxLayout=\\\"row\\\" class=\\\"infor\\\">\\r\\n                        <mat-icon>local_atm</mat-icon>  \\r\\n                        <span> <strong><i>Budget : </i> {{p.projetRenovation.budget}} euros</strong></span>\\r\\n                    </p>\\r\\n                    <p fxLayout=\\\"row\\\"  class=\\\"infor\\\">\\r\\n                        <mat-icon>timer</mat-icon>  \\r\\n                        <span> <strong><i>Durée :</i> {{p.projetRenovation.dateDemarrage| date:'dd/MM/yyyy'}} - {{p.projetRenovation.dateFinission| date:'dd/MM/yyyy'}}</strong></span>\\r\\n                    </p>\\r\\n                    \\r\\n                    <p fxLayout=\\\"row\\\" class=\\\"infor\\\">\\r\\n                        <mat-icon>location_on</mat-icon>  \\r\\n                        <span> <strong><i>Adresse : </i> {{p.projetRenovation.renovation.adressChantier}}</strong></span>\\r\\n                    </p>\\r\\n                </mat-card-content>\\r\\n                <mat-divider></mat-divider>\\r\\n                <p fxLayout=\\\"row\\\"  class=\\\"infor\\\">\\r\\n                    <mat-icon>timer</mat-icon>  \\r\\n                    <span> <strong><i>Date cloture :</i> {{p.dateCloture| date:'dd/MM/yyyy'}}</strong></span>\\r\\n                </p>\\r\\n            </mat-card>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n<div fxLayout=\\\"row wrap\\\" *ngIf=\\\"projet\\\">\\r\\n    <div fxFlex=\\\"100\\\" class=\\\"flex-p\\\"> \\r\\n        <mat-card class=\\\"p-0 text-center\\\">           \\r\\n            <pagination-controls class=\\\"gradus-pagination\\\" autoHide=\\\"true\\\" maxSize=\\\"4\\\" (pageChange)=\\\"onPageChanged($event)\\\"></pagination-controls>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"isLoadingResults\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"user-spinner\\\">   \\r\\n    <mat-spinner color=\\\"primary\\\"></mat-spinner>\\r\\n  </div>\";","export default \"<div class=\\\"header\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" mat-dialog-title color=\\\"primary\\\">\\r\\n    <h3>Cloturer un projet de renovation</h3>\\r\\n</div>\\r\\n<div mat-dialog-content>\\r\\n    <div *ngIf=\\\"isLoadingResults\\\" fxLayout=\\\"row\\\"  fxLayoutAlign=\\\"center center\\\" fxLayout.lt-md=\\\"row wrap\\\">\\r\\n        <div projetRenovation=\\\"app-spinner\\\" > \\r\\n            <mat-spinner color=\\\"primary\\\"></mat-spinner>  \\r\\n            <h4>Chargement...</h4>\\r\\n        </div>\\r\\n    </div>\\r\\n    <form *ngIf=\\\"!isLoadingResults\\\"  [formGroup]=\\\"projetRenovation\\\">\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n            <ng-select class=\\\"select\\\"  [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"100\\\" [fxFlex.xl]=\\\"100\\\" [items]=\\\"listeRenovation\\\"\\r\\n                bindLabel=\\\"renovation.nomRenovation\\\"\\r\\n                placeholder=\\\"Selectionner la renovation\\\"\\r\\n                formControlName=\\\"projetRenovation\\\">\\r\\n                <ng-template ng-loadingspinner-tmp>\\r\\n                    <div class=\\\"lds-ellipsis\\\">\\r\\n                        <div></div>\\r\\n                        <div></div>\\r\\n                        <div></div>\\r\\n                        <div></div>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </ng-select>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"projetRenovation.get('projetRenovation').value !=null\\\">\\r\\n            <mat-card class=\\\"custom-card\\\">\\r\\n                    <mat-card-header class=\\\"bg-primary p-1\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                        <mat-card-title  class=\\\"m-0\\\"><h3><button mat-button>Informations du projet</button></h3></mat-card-title>\\r\\n                        <button mat-icon-button><mat-icon></mat-icon></button>\\r\\n                    </mat-card-header>\\r\\n                <mat-card-content class=\\\"p-\\\">\\r\\n                    <p fxLayout=\\\"row\\\" class=\\\"infor\\\">\\r\\n                        <mat-icon>face</mat-icon>  \\r\\n                        <span> \\r\\n                        <strong><i>Client : </i> \\r\\n                        {{projetRenovation.get('projetRenovation').value.renovation.client.email}} \\r\\n                        ({{projetRenovation.get('projetRenovation').value.renovation.client.nom}} \\r\\n                        {{projetRenovation.get('projetRenovation').value.renovation.client.prenom}})\\r\\n                        </strong></span>\\r\\n                    </p>\\r\\n                    <p fxLayout=\\\"row\\\" class=\\\"infor\\\">\\r\\n                        <mat-icon>local_atm</mat-icon>  \\r\\n                        <span> <strong><i>Budget : </i> {{projetRenovation.get('projetRenovation').value.budget}} euros</strong></span>\\r\\n                    </p>\\r\\n                    <p fxLayout=\\\"row\\\"  class=\\\"infor\\\">\\r\\n                        <mat-icon>timer</mat-icon>  \\r\\n                        <span> <strong><i>Durée :</i> {{projetRenovation.get('projetRenovation').value.dateDemarrage| date:'dd/MM/yyyy'}} - {{projetRenovation.get('projetRenovation').value.dateFinission| date:'dd/MM/yyyy'}}</strong></span>\\r\\n                    </p>\\r\\n                    \\r\\n                    <p fxLayout=\\\"row\\\" class=\\\"infor\\\">\\r\\n                        <mat-icon>location_on</mat-icon>  \\r\\n                        <span> <strong><i>Adresse : </i> {{projetRenovation.get('projetRenovation').value.renovation.adressChantier}}</strong></span>\\r\\n                    </p>\\r\\n                </mat-card-content>\\r\\n                <mat-divider></mat-divider>\\r\\n            </mat-card>\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\\r\\n<div mat-dialog-actions align=\\\"end\\\">\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n        <button mat-raised-button color=\\\"warn\\\" [mat-dialog-close]=\\\"projetRenovation.value\\\" >Annuler</button>\\r\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onSubmit()\\\" [disabled]=\\\"projetRenovation.invalid\\\">Enregistrer</button>\\r\\n    </div>\\r\\n</div>\\r\\n\";","import { ProjetComponent } from './projet/projet.component';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { Settings } from 'src/app/app.settings.model';\r\nimport { CloturerRenovation } from 'src/app/shared/models/cloturerRenovation.class';\r\nimport { SnackBarService } from 'src/app/shared/services/SnackBar';\r\nimport { AppConfirmService } from 'src/app/shared/utils/app-confirm/app-confirm.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { CloturerRenovationService } from './cloturerProjet.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-fin-projet-renovation',\r\n  templateUrl: './fin-projet-renovation.component.html',\r\n  styleUrls: ['./fin-projet-renovation.component.scss']\r\n})\r\nexport class FinProjetRenovationComponent implements OnInit {\r\n  projet :CloturerRenovation[];\r\n  page: any;\r\n  elementRecheche=['budget', 'dateDemarrage', 'email', 'nomRenovation']\r\n  public settings: Settings;\r\n  isLoadingResults=false;\r\n  URLpage=environment.BACK_END.FILEUPLOAD+'download/';\r\n  constructor(public appSettings:AppSettings,private snackBar: SnackBarService,\r\n              public dialog: MatDialog,private confirm: AppConfirmService,\r\n              public projetService: CloturerRenovationService){\r\n      this.settings = this.appSettings.settings; \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getElement();\r\n  }\r\n\r\n  getElement(){\r\n    this.isLoadingResults=true;\r\n    this.projetService.getProjet().subscribe((data) =>{\r\n      this.projet = data;\r\n      console.log(this.projet);\r\n      this.isLoadingResults=false;\r\n    })\r\n  }\r\n\r\n    public onPageChanged(event){\r\n      this.page = event;\r\n      //this.getUsers();\r\n      if(this.settings.fixedHeader){      \r\n          document.getElementById('main-content').scrollTop = 0;\r\n      }\r\n      else{\r\n          document.getElementsByClassName('mat-drawer-content')[0].scrollTop = 0;\r\n      }\r\n  }\r\n\r\n\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(ProjetComponent, {\r\n      width: '600px',\r\n      height:'700px',\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result ==null)\r\n      {\r\n        this.getElement();\r\n      }\r\n    });\r\n  }\r\n\r\n  supprimerRenovation(index){\r\n    this.confirm.confirm({\r\n      title:\"Confirmation\",\r\n      message:`Voulez-vous revoquer la cloture du projet ? `\r\n    }).subscribe(($choix)=> {\r\n\r\n      if($choix) {\r\n        this.isLoadingResults=true;\r\n        this.projetService.deleteProjet(index).subscribe(()=>{\r\n          \r\n        },\r\n        (error: HttpErrorResponse) => {\r\n              this.isLoadingResults=false;\r\n              if(error.status<300)\r\n              {\r\n                this.snackBar.openSnackBar(\"Element supprimé avec succès\", \"OK\",3000);\r\n                this.getElement();\r\n              }\r\n              else{\r\n                this.snackBar.openSnackBar(\"Element non supprimer \", \"OK\",3000);\r\n              }\r\n              \r\n          });\r\n      }\r\n\r\n    });\r\n  }\r\n}\r\n","export default \".element {\\n  color: white;\\n}\\n\\n.image {\\n  height: 200px;\\n}\\n\\n.example-tooltip-red {\\n  background: #080883;\\n  font-weight: bold;\\n}\\n\\n.infor {\\n  font-size: 13px;\\n  padding: 5px;\\n}\\n\\n.infor mat-icon {\\n  margin-right: 10px;\\n}\\n\\n.buton-action {\\n  float: right;\\n}\\n\\n.recherche {\\n  width: 70%;\\n}\\n\\n.example-tooltip-red {\\n  background: #080883;\\n  font-weight: bold;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxccHJvamV0LXJlYWxpc2VyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFBQTtBQUNKOztBQUVBO0VBQ0ksYUFBQTtBQUNKOztBQUVBO0VBQ0ksbUJBQUE7RUFDQSxpQkFBQTtBQUNKOztBQUNBO0VBQ0ksZUFBQTtFQUNBLFlBQUE7QUFFSjs7QUFESTtFQUNJLGtCQUFBO0FBR1I7O0FBQ0E7RUFDSSxZQUFBO0FBRUo7O0FBQ0E7RUFDSSxVQUFBO0FBRUo7O0FBQ0U7RUFDRSxtQkFBQTtFQUNBLGlCQUFBO0FBRUoiLCJmaWxlIjoicHJvamV0LXJlYWxpc2VyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmVsZW1lbnR7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbi5pbWFnZXtcclxuICAgIGhlaWdodDogMjAwcHg7XHJcbn1cclxuXHJcbi5leGFtcGxlLXRvb2x0aXAtcmVke1xyXG4gICAgYmFja2dyb3VuZDogcmdiKDgsIDgsIDEzMSk7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxufVxyXG4uaW5mb3J7XHJcbiAgICBmb250LXNpemU6IDEzcHg7XHJcbiAgICBwYWRkaW5nOiA1cHg7XHJcbiAgICBtYXQtaWNvbntcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5idXRvbi1hY3Rpb257XHJcbiAgICBmbG9hdDogcmlnaHQ7XHJcbn1cclxuXHJcbi5yZWNoZXJjaGV7XHJcbiAgICB3aWR0aDogNzAlO1xyXG4gIH1cclxuXHJcbiAgLmV4YW1wbGUtdG9vbHRpcC1yZWQge1xyXG4gICAgYmFja2dyb3VuZDogIzA4MDg4MztcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIH0iXX0= */\";","export default \"form {\\n  margin-bottom: 150px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxccHJvamV0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksb0JBQUE7QUFDSiIsImZpbGUiOiJwcm9qZXQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJmb3Jte1xyXG4gICAgbWFyZ2luLWJvdHRvbToxNTBweDtcclxufSJdfQ== */\";","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { Settings } from 'src/app/app.settings.model';\r\nimport { ProjetRenauvation } from 'src/app/shared/models/demarrage-projet/projet-renovation.model';\r\nimport { CloturerRenovationService } from '../cloturerProjet.service';\r\n\r\n@Component({\r\n  selector: 'app-projet-realiser',\r\n  templateUrl: './projet-realiser.component.html',\r\n  styleUrls: ['./projet-realiser.component.scss'],\r\n  providers : [CloturerRenovationService],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ProjetRealiserComponent implements OnInit {\r\n  projet :ProjetRenauvation[];\r\n  page: any;\r\n  elementRecheche=['budget', 'dateDemarrage', 'email', 'nomRenovation']\r\n  public settings: Settings;\r\n  isLoadingResults=false;\r\n  constructor(public appSettings:AppSettings,\r\n              public projetService: CloturerRenovationService){\r\n      this.settings = this.appSettings.settings; \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getElement();\r\n  }\r\n\r\n  getElement(){\r\n    this.isLoadingResults=true;\r\n    this.projetService.getAllProjet().subscribe((data) =>{\r\n      this.projet = data;\r\n      console.log(this.projet);\r\n      this.isLoadingResults=false;\r\n    })\r\n  }\r\n\r\n    public onPageChanged(event){\r\n      this.page = event;\r\n      //this.getUsers();\r\n      if(this.settings.fixedHeader){      \r\n          document.getElementById('main-content').scrollTop = 0;\r\n      }\r\n      else{\r\n          document.getElementsByClassName('mat-drawer-content')[0].scrollTop = 0;\r\n      }\r\n  }\r\n}\r\n","export default \"\\r\\n<!--<div fxLayout=\\\"row wrap\\\">\\r\\n        <div class=\\\"recherche\\\">\\r\\n            <mat-form-field class=\\\"recherche\\\">\\r\\n                <input matInput  placeholder=\\\"Rechercher generale...\\\" >\\r\\n                <mat-icon matSuffix >clear</mat-icon>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>indice de recherche</mat-label>\\r\\n                <mat-select >\\r\\n                    <mat-option [value]=\\\"'budget'\\\"></mat-option>\\r\\n                    <mat-option *ngFor=\\\"let e of elementRecheche\\\" [value]=\\\"e\\\">{{e}}</mat-option>\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n  </div>-->\\r\\n\\r\\n    <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row wrap\\\" >\\r\\n        <div fxFlex=\\\"32\\\" class=\\\"flex-p\\\" *ngFor=\\\"let p of projet  | paginate: { itemsPerPage: 6, currentPage: page }\\\"> \\r\\n            <mat-card class=\\\"custom-card\\\">\\r\\n                <mat-card-header class=\\\"bg-primary p-1\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                    <mat-card-title  class=\\\"m-0\\\"><h3><button mat-button routerLink=\\\"{{p.id}}/\\\">{{p.renovation.nomRenovation}}</button></h3></mat-card-title>\\r\\n                </mat-card-header>\\r\\n                <mat-card-content class=\\\"p-\\\">\\r\\n                    <p fxLayout=\\\"row\\\" class=\\\"infor\\\">\\r\\n                        <mat-icon>face</mat-icon>  \\r\\n                        <span> <strong><i>Client : </i> {{p.renovation.client.email}}</strong></span>\\r\\n                    </p>\\r\\n                    <p fxLayout=\\\"row\\\" class=\\\"infor\\\">\\r\\n                        <mat-icon>local_atm</mat-icon>  \\r\\n                        <span> <strong><i>Budget : </i> {{p.budget}} euros</strong></span>\\r\\n                    </p>\\r\\n                    <p fxLayout=\\\"row\\\"  class=\\\"infor\\\">\\r\\n                        <mat-icon>timer</mat-icon>  \\r\\n                        <span> <strong><i>Durée :</i> {{p.dateDemarrage| date:'dd/MM/yyyy'}} - {{p.dateFinission| date:'dd/MM/yyyy'}}</strong></span>\\r\\n                    </p>\\r\\n                    \\r\\n                    <p fxLayout=\\\"row\\\" class=\\\"infor\\\">\\r\\n                        <mat-icon>location_on</mat-icon>  \\r\\n                        <span> <strong><i>Adresse : </i> {{p.renovation.adressChantier}}</strong></span>\\r\\n                    </p>\\r\\n                </mat-card-content>\\r\\n                <mat-divider></mat-divider>\\r\\n                \\r\\n            </mat-card>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n<div fxLayout=\\\"row wrap\\\" *ngIf=\\\"projet\\\">\\r\\n    <div fxFlex=\\\"100\\\" class=\\\"flex-p\\\"> \\r\\n        <mat-card class=\\\"p-0 text-center\\\">           \\r\\n            <pagination-controls class=\\\"gradus-pagination\\\" autoHide=\\\"true\\\" maxSize=\\\"3\\\" (pageChange)=\\\"onPageChanged($event)\\\"></pagination-controls>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"isLoadingResults\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"user-spinner\\\">   \\r\\n    <mat-spinner color=\\\"primary\\\"></mat-spinner>\\r\\n  </div>\";"]}