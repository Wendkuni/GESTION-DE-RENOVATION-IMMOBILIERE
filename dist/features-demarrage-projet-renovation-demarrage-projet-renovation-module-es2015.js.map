{"version":3,"sources":["./src/app/features/demarrage-projet-renovation/projet-user/projet-user.component.scss","./src/app/features/demarrage-projet-renovation/user-affecter-demarrage/user-affecter-demarrage.component.ts","./src/app/features/demarrage-projet-renovation/demarrage-projet-renovation.module.ts","./src/app/features/demarrage-projet-renovation/projet-user/user-projet.service.ts","./src/app/features/demarrage-projet-renovation/demarrage-projet-renovation.component.scss","./src/app/features/demarrage-projet-renovation/user-affecter-demarrage/user-affecter-demarrage.component.html","./src/app/features/demarrage-projet-renovation/projet-user/projet-user.component.html","./src/app/features/demarrage-projet-renovation/projet-user/projet-user.component.ts","./src/app/features/demarrage-projet-renovation/demarrage-projet-renovation.component.ts","./src/app/features/demarrage-projet-renovation/demarrage-projet-renovation.component.html","./src/app/features/demarrage-projet-renovation/user-affecter-demarrage/user-affecter-demarrage.component.scss"],"names":[],"mappings":"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","file":"features-demarrage-projet-renovation-demarrage-projet-renovation-module-es2015.js","sourcesContent":["export default \".element {\\n  color: white;\\n}\\n\\n.image {\\n  height: 200px;\\n}\\n\\n.example-tooltip-red {\\n  background: #080883;\\n  font-weight: bold;\\n}\\n\\n.infor {\\n  font-size: 13px;\\n  padding: 5px;\\n}\\n\\n.infor mat-icon {\\n  margin-right: 10px;\\n}\\n\\n.buton-action {\\n  float: right;\\n}\\n\\n.recherche {\\n  width: 70%;\\n}\\n\\n.example-tooltip-red {\\n  background: #080883;\\n  font-weight: bold;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxccHJvamV0LXVzZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxZQUFBO0FBQ0o7O0FBRUE7RUFDSSxhQUFBO0FBQ0o7O0FBRUE7RUFDSSxtQkFBQTtFQUNBLGlCQUFBO0FBQ0o7O0FBQ0E7RUFDSSxlQUFBO0VBQ0EsWUFBQTtBQUVKOztBQURJO0VBQ0ksa0JBQUE7QUFHUjs7QUFDQTtFQUNJLFlBQUE7QUFFSjs7QUFDQTtFQUNJLFVBQUE7QUFFSjs7QUFDRTtFQUNFLG1CQUFBO0VBQ0EsaUJBQUE7QUFFSiIsImZpbGUiOiJwcm9qZXQtdXNlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5lbGVtZW50e1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG59XHJcblxyXG4uaW1hZ2V7XHJcbiAgICBoZWlnaHQ6IDIwMHB4O1xyXG59XHJcblxyXG4uZXhhbXBsZS10b29sdGlwLXJlZHtcclxuICAgIGJhY2tncm91bmQ6IHJnYig4LCA4LCAxMzEpO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuLmluZm9ye1xyXG4gICAgZm9udC1zaXplOiAxM3B4O1xyXG4gICAgcGFkZGluZzogNXB4O1xyXG4gICAgbWF0LWljb257XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG4gICAgfVxyXG59XHJcblxyXG4uYnV0b24tYWN0aW9ue1xyXG4gICAgZmxvYXQ6IHJpZ2h0O1xyXG59XHJcblxyXG4ucmVjaGVyY2hle1xyXG4gICAgd2lkdGg6IDcwJTtcclxuICB9XHJcblxyXG4gIC5leGFtcGxlLXRvb2x0aXAtcmVkIHtcclxuICAgIGJhY2tncm91bmQ6ICMwODA4ODM7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICB9Il19 */\";","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { SnackBarService } from 'src/app/shared/services/SnackBar';\r\nimport { Utilisateur } from 'src/app/shared/models/utilisateeur';\r\nimport { UserAffecterProjet } from 'src/app/shared/models/demarrage-projet/projet-renovation.model';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { AppConfirmService } from 'src/app/shared/utils/app-confirm/app-confirm.service';\r\nimport { UserAffecterProjetRenovationServices } from '../../user-affecter-projet-renovation/user-affecter-projet.service';\r\n\r\n@Component({\r\n  selector: 'app-user-affecter-demarrage',\r\n  templateUrl: './user-affecter-demarrage.component.html',\r\n  styleUrls: ['./user-affecter-demarrage.component.scss']\r\n})\r\nexport class UserAffecterDemarrageComponent implements OnInit {\r\n  isLoadingResults = false;\r\n  listeUser:Utilisateur[];\r\n  userAffect: UserAffecterProjet[]=[];\r\n  userForm: FormGroup;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  displayedColumns =['id','libelle', 'roles','action'];\r\n  dataSources = new MatTableDataSource<UserAffecterProjet>(this.userAffect);\r\n  constructor(public dialogRef: MatDialogRef<UserAffecterDemarrageComponent>,private snackBar: SnackBarService,\r\n    public dialog: MatDialog, @Inject(MAT_DIALOG_DATA) public data: any,private fb: FormBuilder, \r\n    private userAffecter: UserAffecterProjetRenovationServices,private confirm: AppConfirmService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.initDonner();\r\n    this.init();\r\n  }\r\n\r\n  initDonner(){\r\n    this.isLoadingResults = true;\r\n    this.userAffecter.listUserNonAffecter(\"\"+this.data.projet.id).subscribe((data)=>{\r\n      this.listeUser = data;\r\n      console.log(this.listeUser);\r\n      this.userAffecter.getUsers(this.data.projet.id).subscribe((userA)=>{\r\n        this.userAffect = userA;\r\n        this.dataSources = new MatTableDataSource<UserAffecterProjet>(this.userAffect);\r\n        this.dataSources.paginator = this.paginator;\r\n      this.dataSources.sort = this.sort;\r\n      this.isLoadingResults = false;\r\n      })\r\n    })\r\n  }\r\n\r\n  init(){\r\n    this.userForm = this.fb.group({\r\n      id: null,\r\n      utilisateurs: [null, Validators.required],\r\n      projetRenovation: this.data.projet,\r\n    })\r\n  }\r\n\r\n  onSubmit(){\r\n    console.log(this.userForm.value)\r\n   if(this.userForm.valid){\r\n    this.isLoadingResults = true;\r\n    this.userAffecter.addUser(this.userForm.value).subscribe((data)=>{\r\n\r\n    },(error:HttpErrorResponse)=>{\r\n      if(error.status<300)\r\n      {\r\n        this.snackBar.openSnackBar(\"utilisateur ajouter avec success\", \"success\", 3000);\r\n        this.initDonner();\r\n        this.userForm.get('utilisateurs').setValue(null);\r\n      }\r\n      else{\r\n        this.isLoadingResults = false;\r\n        this.snackBar.openSnackBar(\"utilisateur est deja affecter au projet\", \"error\", 3000);\r\n      }\r\n    })\r\n   }else{\r\n      this.snackBar.openSnackBar(\"Remplirer tous les champs svp\", \"error\", 3000);\r\n   }\r\n  }\r\n\r\n  supprimerUser(index){\r\n    this.confirm.confirm({\r\n      title:\"Confirmation\",\r\n      message:`Voulez-vous supprimer cette pièce complémentaire ? `\r\n    }).subscribe(($choix)=> {\r\n\r\n      if($choix) {\r\n        this.isLoadingResults=true;\r\n        this.userAffecter.deleteUser(index).subscribe(()=>{\r\n          \r\n        },\r\n        (error: HttpErrorResponse) => {\r\n              this.isLoadingResults=false;\r\n              if(error.status<300)\r\n              {\r\n                this.snackBar.openSnackBar(\"Element supprimé avec succès\", \"OK\",3000);\r\n                this.ngOnInit();\r\n              }\r\n              else{\r\n                this.snackBar.openSnackBar(\"Element non supprimer \", \"OK\",3000);\r\n              }\r\n              \r\n          });\r\n      }\r\n\r\n    });\r\n  }\r\n}\r\n","import { UserAffecterProjetRenovationServices } from './../user-affecter-projet-renovation/user-affecter-projet.service';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DemarrageProjetRenovationComponent } from './demarrage-projet-renovation.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { DropzoneModule } from 'ngx-dropzone-wrapper';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { ProjetUserComponent } from './projet-user/projet-user.component';\r\nimport { UserAffecterDemarrageComponent } from './user-affecter-demarrage/user-affecter-demarrage.component';\r\n\r\nexport const routes = [\r\n  { path: ':id',\r\n   component: DemarrageProjetRenovationComponent,\r\n   children:[\r\n    { path: 'taches', loadChildren: () => import('./taches/taches.module').then(m => m.TachesModule), data: { breadcrumb: 'taches' } },\r\n    { path: 'agenda', loadChildren: () => import('./agenda/agenda.module').then(m => m.AgendaModule), data: { breadcrumb: 'Agenda' } },\r\n    { path: 'bilan', loadChildren: () => import('./bilan/bilan.module').then(m => m.BilanModule), data: { breadcrumb: 'Bilan' } },\r\n    { path: 'fichier', loadChildren: () => import('./fichier/fichier.module').then(m => m.FichierModule), data: { breadcrumb: 'fichier' } },\r\n    { path: 'message', loadChildren: () => import('./chat/chat.module').then(m => m.ChatModule), data: { breadcrumb: 'chat' } },\r\n   ]\r\n  },\r\n  {path:'', component: ProjetUserComponent, data: { breadcrumb: 'Projet' } },\r\n  \r\n];\r\n\r\n@NgModule({\r\n  declarations: [DemarrageProjetRenovationComponent, ProjetUserComponent, UserAffecterDemarrageComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    DropzoneModule,\r\n    NgxPaginationModule,\r\n    NgSelectModule\r\n  ],\r\n  providers:[\r\n    UserAffecterProjetRenovationServices\r\n  ]\r\n})\r\nexport class DemarrageProjetRenovationModule { }\r\n","import { ProjetRenauvation } from './../../../shared/models/demarrage-projet/projet-renovation.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Renovation } from 'src/app/shared/models/Renovation';\r\nimport { Tache } from 'src/app/shared/models/demarrage-projet/projet-renovation.model';\r\n\r\n@Injectable()\r\nexport class ListTacheService {\r\n    \r\n    constructor(public http:HttpClient) { }\r\n    \r\n    gettachess(id): Observable<Tache[]> {\r\n        return this.http.get<Tache[]>(environment.BACK_END.DEMARRAGERENAUVATION.TACHES_USER+\"taches/\"+id);\r\n    }\r\n    getAllProjet(): Observable<ProjetRenauvation[]>{\t    \r\n        return this.http.get<ProjetRenauvation[]>(environment.BACK_END.DEMARRAGERENAUVATION.TACHES_USER+\"projet/\");\r\n    }\r\n    getProjet(id): Observable<ProjetRenauvation>{\t    \r\n        return this.http.get<ProjetRenauvation>(environment.BACK_END.DEMARRAGERENAUVATION.TACHES_USER+\"projet/\"+id);\r\n    }\r\n\r\n    updatetaches(id, taches){\t    \r\n        return this.http.put(environment.BACK_END.DEMARRAGERENAUVATION.TACHES_USER+\"taches/\"+id, taches);\r\n    }\r\n} ","export default \".example-tooltip-red {\\n  background: #080883;\\n  font-weight: bold;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFxkZW1hcnJhZ2UtcHJvamV0LXJlbm92YXRpb24uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxtQkFBQTtFQUNBLGlCQUFBO0FBQ0oiLCJmaWxlIjoiZGVtYXJyYWdlLXByb2pldC1yZW5vdmF0aW9uLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtdG9vbHRpcC1yZWQge1xyXG4gICAgYmFja2dyb3VuZDogIzA4MDg4MztcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIH0iXX0= */\";","export default \"\\r\\n<div *ngIf=\\\"isLoadingResults\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"user-spinner\\\">   \\r\\n    <mat-spinner color=\\\"primary\\\"></mat-spinner>\\r\\n  </div>\\r\\n\\r\\n\\r\\n<div *ngIf=\\\"!isLoadingResults\\\"  class=\\\"header\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" mat-dialog-title color=\\\"primary\\\">\\r\\n    <h3>Gestion des utilisateur du Projet {{data.projet.renovation.nomRenovation}}</h3>\\r\\n</div>\\r\\n<div mat-dialog-content class=\\\"body-content contenu-body\\\" *ngIf=\\\"!isLoadingResults\\\" >\\r\\n    <form   [formGroup]=\\\"userForm\\\">\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start\\\" fxLayout.lt-md=\\\"row wrap\\\">\\r\\n            <mat-form-field  appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"100\\\" [fxFlex.xl]=\\\"100\\\">\\r\\n                <mat-label>Libelle de la renovation</mat-label>\\r\\n                <input matInput #input  placeholder=\\\"Ex. Nougat\\\" [value]=\\\"data.projet.renovation.nomRenovation\\\" readonly>\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start\\\" fxLayout.lt-md=\\\"row wrap\\\">\\r\\n            <ng-select  [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"100\\\" [fxFlex.xl]=\\\"100\\\" [items]=\\\"listeUser\\\"\\r\\n                   bindLabel=\\\"email\\\"\\r\\n                   placeholder=\\\" Selectionner l'tilisateur conserner\\\"\\r\\n                   formControlName=\\\"utilisateurs\\\">\\r\\n                   <ng-template ng-loadingspinner-tmp>\\r\\n                    <div class=\\\"lds-ellipsis\\\">\\r\\n                        <div></div>\\r\\n                        <div></div>\\r\\n                        <div></div>\\r\\n                        <div></div>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </ng-select>\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\\r\\n\\r\\n<div  *ngIf=\\\"!isLoadingResults\\\"  mat-dialog-actions align=\\\"end\\\">\\r\\n    <div fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n        <button mat-raised-button color=\\\"warn\\\" [mat-dialog-close]=\\\"userForm.value\\\" >Fermer</button>\\r\\n        <button mat-raised-button [disabled]=\\\"userForm.invalid\\\" (click)=\\\"onSubmit()\\\" color=\\\"primary\\\" >Enregistrer</button>\\r\\n    </div>\\r\\n</div>\\r\\n<div fxLayout=\\\"row wrap\\\" class=\\\"table\\\">\\r\\n    <div fxFlex=\\\"100\\\" class=\\\"flex-p\\\"> \\r\\n        <div class=\\\"example-container\\\">\\r\\n            <table mat-table [dataSource]=\\\"dataSources\\\" matSort>\\r\\n                <ng-container matColumnDef=\\\"id\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> id </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n                  </ng-container>\\r\\n              <!-- Name Column -->\\r\\n              <ng-container matColumnDef=\\\"libelle\\\" sticky>\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.utilisateurs.email}} </td>\\r\\n              </ng-container>\\r\\n          \\r\\n              <!-- Position Column -->\\r\\n              \\r\\n          \\r\\n              <!-- Weight Column -->\\r\\n              <ng-container matColumnDef=\\\"roles\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Nom</th>\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\">{{element.utilisateurs.nom}} {{element.utilisateurs.prenom}}</td>\\r\\n              </ng-container>\\r\\n              \\r\\n              <!-- Star Column -->\\r\\n              <ng-container matColumnDef=\\\"action\\\" stickyEnd>\\r\\n                <th mat-header-cell *matHeaderCellDef>Action</th>\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                    <button mat-button *ngIf=\\\"element.utilisateurs.profile.libelle != 'CLIENT'\\\"   color=\\\"warn\\\" (click)=\\\"supprimerUser(element.id)\\\">\\r\\n                        <mat-icon>delete</mat-icon>\\r\\n                        <span>Supprimer</span>\\r\\n                      </button>\\r\\n                </td>\\r\\n              </ng-container>\\r\\n          \\r\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n            </table>\\r\\n            <mat-paginator [pageSizeOptions]=\\\"[4]\\\"></mat-paginator>\\r\\n          </div>\\r\\n    </div>\";","export default \"\\r\\n<!--<div fxLayout=\\\"row wrap\\\">\\r\\n        <div class=\\\"recherche\\\">\\r\\n            <mat-form-field class=\\\"recherche\\\">\\r\\n                <input matInput  placeholder=\\\"Rechercher generale...\\\" >\\r\\n                <mat-icon matSuffix >clear</mat-icon>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>indice de recherche</mat-label>\\r\\n                <mat-select >\\r\\n                    <mat-option [value]=\\\"'budget'\\\"></mat-option>\\r\\n                    <mat-option *ngFor=\\\"let e of elementRecheche\\\" [value]=\\\"e\\\">{{e}}</mat-option>\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n  </div>-->\\r\\n\\r\\n    <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row wrap\\\" >\\r\\n        <div fxFlex=\\\"32\\\" class=\\\"flex-p\\\" *ngFor=\\\"let p of projet  | paginate: { itemsPerPage: 6, currentPage: page }\\\"> \\r\\n            <mat-card class=\\\"custom-card\\\">\\r\\n                <mat-card-header class=\\\"bg-primary p-1\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                    <mat-card-title  class=\\\"m-0\\\"><h3><button mat-button routerLink=\\\"{{p.id}}/\\\">{{p.renovation.nomRenovation}}</button></h3></mat-card-title>\\r\\n                </mat-card-header>\\r\\n                <img class=\\\"image\\\" mat-card-image src=\\\"{{URLpage}}{{p.photo.split('/')[2]}}\\\" alt=\\\"image non charger\\\">\\r\\n                <mat-card-content class=\\\"p-\\\">\\r\\n                    <p fxLayout=\\\"row\\\" class=\\\"infor\\\">\\r\\n                        <mat-icon>face</mat-icon>  \\r\\n                        <span> <strong><i>Client : </i> {{p.renovation.client.email}}</strong></span>\\r\\n                    </p>\\r\\n                    <p fxLayout=\\\"row\\\" class=\\\"infor\\\">\\r\\n                        <mat-icon>local_atm</mat-icon>  \\r\\n                        <span> <strong><i>Budget : </i> {{p.budget}} euros</strong></span>\\r\\n                    </p>\\r\\n                    <p fxLayout=\\\"row\\\"  class=\\\"infor\\\">\\r\\n                        <mat-icon>timer</mat-icon>  \\r\\n                        <span> <strong><i>Durée :</i> {{p.dateDemarrage| date:'dd/MM/yyyy'}} - {{p.dateFinission| date:'dd/MM/yyyy'}}</strong></span>\\r\\n                    </p>\\r\\n                    \\r\\n                    <p fxLayout=\\\"row\\\" class=\\\"infor\\\">\\r\\n                        <mat-icon>location_on</mat-icon>  \\r\\n                        <span> <strong><i>Adresse : </i> {{p.renovation.adressChantier}}</strong></span>\\r\\n                    </p>\\r\\n                </mat-card-content>\\r\\n                <mat-divider></mat-divider>\\r\\n                <mat-card-actions fxLayoutAlign=\\\"end center\\\">\\r\\n                    <button routerLink=\\\"{{p.id}}/bilan\\\" mat-icon-button\\r\\n                    matTooltip=\\\"DIagramme d'evolution\\\"\\r\\n                    matTooltipClass=\\\"example-tooltip-red\\\"\\r\\n                    aria-label=\\\"Button that shows a red tooltip\\\">\\r\\n                        <mat-icon>poll</mat-icon>\\r\\n                    </button>\\r\\n                    <button mat-icon-button routerLink=\\\"{{p.id}}/agenda\\\"\\r\\n                    matTooltip=\\\"Agenda\\\"\\r\\n                    matTooltipClass=\\\"example-tooltip-red\\\"\\r\\n                    aria-label=\\\"Button that shows a red tooltip\\\">\\r\\n                        <mat-icon>event_note</mat-icon>\\r\\n                    </button>\\r\\n\\r\\n                    <button routerLink=\\\"{{p.id}}/taches\\\" mat-icon-button\\r\\n                    matTooltip=\\\"Taches\\\"\\r\\n                    matTooltipClass=\\\"example-tooltip-red\\\"\\r\\n                    aria-label=\\\"Button that shows a red tooltip\\\">\\r\\n                        <mat-icon>ballot</mat-icon>\\r\\n                    </button>\\r\\n                    \\r\\n                    <button mat-icon-button \\r\\n                    matTooltip=\\\"documents\\\"\\r\\n                    matTooltipClass=\\\"example-tooltip-red\\\"\\r\\n                    aria-label=\\\"Button that shows a red tooltip\\\">\\r\\n                        <mat-icon>insert_drive_file</mat-icon>\\r\\n                    </button>\\r\\n                </mat-card-actions>\\r\\n            </mat-card>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n<div fxLayout=\\\"row wrap\\\" *ngIf=\\\"projet\\\">\\r\\n    <div fxFlex=\\\"100\\\" class=\\\"flex-p\\\"> \\r\\n        <mat-card class=\\\"p-0 text-center\\\">           \\r\\n            <pagination-controls class=\\\"gradus-pagination\\\" autoHide=\\\"true\\\" maxSize=\\\"3\\\" (pageChange)=\\\"onPageChanged($event)\\\"></pagination-controls>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"isLoadingResults\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"user-spinner\\\">   \\r\\n    <mat-spinner color=\\\"primary\\\"></mat-spinner>\\r\\n  </div>\";","import { ListTacheService } from './user-projet.service';\r\nimport { ProjetRenauvation } from './../../../shared/models/demarrage-projet/projet-renovation.model';\r\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Settings } from 'src/app/app.settings.model';\r\nimport { environment } from 'src/environments/environment';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { ProjetStorageService } from 'src/app/shared/services/ProjetRenovation.localStorage';\r\n\r\n@Component({\r\n  selector: 'app-projet-user',\r\n  templateUrl: './projet-user.component.html',\r\n  styleUrls: ['./projet-user.component.scss'],\r\n  providers: [ListTacheService],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ProjetUserComponent implements OnInit {\r\n  projet :ProjetRenauvation[];\r\n  page: any;\r\n  elementRecheche=['budget', 'dateDemarrage', 'email', 'nomRenovation']\r\n  public settings: Settings;\r\n  isLoadingResults=true;\r\n  GererTache = 0;\r\n  GererUser = 0;\r\n  URLpage=environment.BACK_END.FILEUPLOAD+'download/';\r\n  constructor(public appSettings:AppSettings,private projetStorage: ProjetStorageService,\r\n              public projetService: ListTacheService){\r\n      this.settings = this.appSettings.settings; \r\n      this.GererTache = projetStorage.getGestionTache();\r\n      this.GererUser = parseInt(projetStorage.getGestionUser());\r\n  }\r\n  \r\n    ngOnInit(): void {\r\n      this.getElement();\r\n    }\r\n  \r\n    getElement(){\r\n      this.isLoadingResults=true;\r\n      this.projetService.getAllProjet().subscribe((data) =>{\r\n        this.projet = data;\r\n        //console.log(this.projet);\r\n        this.isLoadingResults=false;\r\n      })\r\n    }\r\n  \r\n      public onPageChanged(event){\r\n        this.page = event;\r\n        //this.getUsers();\r\n        if(this.settings.fixedHeader){      \r\n            document.getElementById('main-content').scrollTop = 0;\r\n        }\r\n        else{\r\n            document.getElementsByClassName('mat-drawer-content')[0].scrollTop = 0;\r\n        }\r\n    }\r\n  \r\n    rechercheBudget(arr : ProjetRenauvation[], requete) {\r\n      return arr.filter(function (el) {\r\n        return  el.budget+\"\".indexOf(requete.toLowerCase()) !== -1;\r\n      })\r\n    }\r\n  \r\n    rechercheNomRenovation(arr : ProjetRenauvation[], requete) {\r\n      return arr.filter(function (el) {\r\n        return  el.renovation.nomRenovation.toLowerCase().indexOf(requete.toLowerCase()) !== -1;\r\n      })\r\n    }\r\n  \r\n    rechercheEmail(arr : ProjetRenauvation[], requete) {\r\n      return arr.filter(function (el) {\r\n        return  el.renovation.client.email.toLowerCase().indexOf(requete.toLowerCase()) !== -1;\r\n      })\r\n    }\r\n  \r\n}\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { ProjetRenauvationService } from './../projet-renovation/projet-renovation.service';\r\nimport { ProjetRenauvation } from './../../shared/models/demarrage-projet/projet-renovation.model';\r\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { environment } from 'src/environments/environment';\r\nimport { TokenStorageService } from '../login/_helper/localStorage';\r\nimport { ListTacheService } from './projet-user/user-projet.service';\r\nimport { UtilisateurAffecterModalComponent } from '../projet-renovation/utilisateur-affecter-modal/utilisateur-affecter-modal.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ProjetStorageService } from 'src/app/shared/services/ProjetRenovation.localStorage';\r\nimport { UserAffecterDemarrageComponent } from './user-affecter-demarrage/user-affecter-demarrage.component';\r\n\r\n@Component({\r\n  selector: 'app-demarrage-projet-renovation',\r\n  templateUrl: './demarrage-projet-renovation.component.html',\r\n  styleUrls: ['./demarrage-projet-renovation.component.scss'],\r\n  providers :[ListTacheService],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class DemarrageProjetRenovationComponent implements OnInit {\r\n  id:number;\r\n  static projetRenovation: ProjetRenauvation;\r\n  Gerant: number;\r\n  GererUser = 0;\r\n  isLoadingResults=  true;\r\n  projet: ProjetRenauvation;\r\n  constructor(private route: ActivatedRoute,public dialog: MatDialog,\r\n    private router: Router, private projetStorage: ProjetStorageService,\r\n     private projetServices: ListTacheService) { \r\n    this.id = route.snapshot.params.id;\r\n    this.GererUser = parseInt(projetStorage.getGestionUser());\r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.projetServices.getProjet(this.id).subscribe((data : ProjetRenauvation)=>{\r\n      this.projet = data;\r\n      DemarrageProjetRenovationComponent.projetRenovation = data;\r\n      \r\n      this.isLoadingResults = false;\r\n    },(error:HttpErrorResponse)=>{\r\n      this.router.navigate([environment.FRONTEND_ROUTES.PROJET_RENAUVATION]);\r\n    })\r\n  }\r\n\r\n  openDialog(projet: ProjetRenauvation): void {\r\n    const dialogRef = this.dialog.open(UserAffecterDemarrageComponent, {\r\n      width: '600px',\r\n      height:'700px',\r\n      data: {projet: projet},\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result ==null)\r\n      {\r\n        \r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"<div *ngIf=\\\"isLoadingResults\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"user-spinner\\\">   \\r\\n    <mat-spinner color=\\\"primary\\\"></mat-spinner>\\r\\n  </div>\\r\\n\\r\\n<div fxLayout=\\\"row wrap\\\" *ngIf=\\\"!isLoadingResults\\\">\\r\\n    <div fxFlex=\\\"100\\\" class=\\\"flex-p\\\"> \\r\\n        <mat-card>\\r\\n            <div [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"70\\\" [fxFlex.xl]=\\\"70\\\">\\r\\n                <h2>Projet {{projet.renovation.nomRenovation | uppercase}}</h2>\\r\\n            </div>\\r\\n            \\r\\n            <div fxLayoutAlign=\\\"center end\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"20\\\" [fxFlex.xl]=\\\"20\\\">\\r\\n                    <button *ngIf=\\\"GererUser==1\\\" \\r\\n                        matTooltip=\\\"Utilisateur affecter au Projet\\\"\\r\\n                        matTooltipClass=\\\"example-tooltip-red\\\"\\r\\n                        aria-label=\\\"Button that shows a red tooltip\\\"\\r\\n                     button mat-icon-button (click)=\\\"openDialog(projet)\\\">\\r\\n                        <mat-icon>groups</mat-icon>\\r\\n                    </button>\\r\\n                    <button mat-icon-button routerLink=\\\"bilan\\\"\\r\\n                        matTooltip=\\\"Diagramme de l'evolution du projet\\\"\\r\\n                        matTooltipClass=\\\"example-tooltip-red\\\"\\r\\n                        aria-label=\\\"Button that shows a red tooltip\\\"\\r\\n                    >\\r\\n                        <mat-icon>poll</mat-icon>\\r\\n                    </button>\\r\\n                    <button mat-icon-button routerLink=\\\"agenda\\\"\\r\\n                        matTooltip=\\\"Agenda d'evenement\\\"\\r\\n                        matTooltipClass=\\\"example-tooltip-red\\\"\\r\\n                        aria-label=\\\"Button that shows a red tooltip\\\"\\r\\n                    >\\r\\n                        <mat-icon>event_note</mat-icon>\\r\\n                    </button>\\r\\n                    <button mat-icon-button routerLink=\\\"taches\\\"\\r\\n                        matTooltip=\\\"Les taches\\\"\\r\\n                        matTooltipClass=\\\"example-tooltip-red\\\"\\r\\n                        aria-label=\\\"Button that shows a red tooltip\\\"\\r\\n                    >\\r\\n                        <mat-icon>ballot</mat-icon>\\r\\n                    </button>\\r\\n                    <button mat-icon-button routerLink=\\\"fichier\\\"\\r\\n                        matTooltip=\\\"documents\\\"\\r\\n                        matTooltipClass=\\\"example-tooltip-red\\\"\\r\\n                        aria-label=\\\"Button that shows a red tooltip\\\">\\r\\n                        <mat-icon>insert_drive_file</mat-icon>\\r\\n                    </button>\\r\\n\\r\\n                    <button mat-icon-button routerLink=\\\"message\\\"\\r\\n                        matTooltip=\\\"echange\\\"\\r\\n                        matTooltipClass=\\\"example-tooltip-red\\\"\\r\\n                        aria-label=\\\"Button that shows a red tooltip\\\">\\r\\n                        <mat-icon>question_answer</mat-icon>\\r\\n                    </button>\\r\\n            </div>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n</div>\\r\\n<router-outlet *ngIf=\\\"!isLoadingResults\\\"></router-outlet>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ1c2VyLWFmZmVjdGVyLWRlbWFycmFnZS5jb21wb25lbnQuc2NzcyJ9 */\";"],"sourceRoot":"webpack:///"}