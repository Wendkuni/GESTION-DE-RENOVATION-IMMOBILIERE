{"version":3,"sources":["webpack:///src/app/features/demarrage-projet-renovation/projet-user/projet-user.component.scss","webpack:///src/app/features/demarrage-projet-renovation/user-affecter-demarrage/user-affecter-demarrage.component.ts","webpack:///src/app/features/demarrage-projet-renovation/demarrage-projet-renovation.module.ts","webpack:///src/app/features/demarrage-projet-renovation/projet-user/user-projet.service.ts","webpack:///src/app/features/demarrage-projet-renovation/demarrage-projet-renovation.component.scss","webpack:///src/app/features/demarrage-projet-renovation/user-affecter-demarrage/user-affecter-demarrage.component.html","webpack:///src/app/features/demarrage-projet-renovation/projet-user/projet-user.component.html","webpack:///src/app/features/demarrage-projet-renovation/projet-user/projet-user.component.ts","webpack:///src/app/features/demarrage-projet-renovation/demarrage-projet-renovation.component.ts","webpack:///src/app/features/demarrage-projet-renovation/demarrage-projet-renovation.component.html","webpack:///src/app/features/demarrage-projet-renovation/user-affecter-demarrage/user-affecter-demarrage.component.scss"],"names":["UserAffecterDemarrageComponent","dialogRef","snackBar","dialog","data","fb","userAffecter","confirm","isLoadingResults","userAffect","displayedColumns","dataSources","initDonner","init","listUserNonAffecter","projet","id","subscribe","listeUser","console","log","getUsers","userA","paginator","sort","userForm","group","utilisateurs","required","projetRenovation","value","valid","addUser","error","status","openSnackBar","get","setValue","index","title","message","$choix","deleteUser","ngOnInit","selector","template","routes","path","component","children","loadChildren","then","m","TachesModule","breadcrumb","AgendaModule","BilanModule","FichierModule","ChatModule","DemarrageProjetRenovationModule","declarations","imports","forChild","providers","ListTacheService","http","BACK_END","DEMARRAGERENAUVATION","TACHES_USER","taches","put","ProjetUserComponent","appSettings","projetStorage","projetService","elementRecheche","GererTache","GererUser","URLpage","FILEUPLOAD","settings","getGestionTache","parseInt","getGestionUser","getElement","getAllProjet","event","page","fixedHeader","document","getElementById","scrollTop","getElementsByClassName","arr","requete","filter","el","budget","indexOf","toLowerCase","renovation","nomRenovation","client","email","encapsulation","None","DemarrageProjetRenovationComponent","route","router","projetServices","snapshot","params","getProjet","navigate","FRONTEND_ROUTES","PROJET_RENAUVATION","open","width","height","disableClose","afterClosed","result"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCkBFA,8BAA8B;AASzC,gDAAmBC,SAAnB,EAAmFC,QAAnF,EACSC,MADT,EAC4DC,IAD5D,EAC8EC,EAD9E,EAEUC,YAFV,EAEqEC,OAFrE,EAEiG;AAAA;;AAF9E,eAAAN,SAAA,GAAAA,SAAA;AAAgE,eAAAC,QAAA,GAAAA,QAAA;AAC1E,eAAAC,MAAA,GAAAA,MAAA;AAAmD,eAAAC,IAAA,GAAAA,IAAA;AAAkB,eAAAC,EAAA,GAAAA,EAAA;AACpE,eAAAC,YAAA,GAAAA,YAAA;AAA2D,eAAAC,OAAA,GAAAA,OAAA;AAVrE,eAAAC,gBAAA,GAAmB,KAAnB;AAEA,eAAAC,UAAA,GAAiC,EAAjC;AAIA,eAAAC,gBAAA,GAAkB,CAAC,IAAD,EAAM,SAAN,EAAiB,OAAjB,EAAyB,QAAzB,CAAlB;AACA,eAAAC,WAAA,GAAc,IAAI,0EAAJ,CAA2C,KAAKF,UAAhD,CAAd;AAGoG;;AAX3D;AAAA;AAAA,qCAajC;AACN,iBAAKG,UAAL;AACA,iBAAKC,IAAL;AACD;AAhBwC;AAAA;AAAA,uCAkB/B;AAAA;;AACR,iBAAKL,gBAAL,GAAwB,IAAxB;AACA,iBAAKF,YAAL,CAAkBQ,mBAAlB,CAAsC,KAAG,KAAKV,IAAL,CAAUW,MAAV,CAAiBC,EAA1D,EAA8DC,SAA9D,CAAwE,UAACb,IAAD,EAAQ;AAC9E,mBAAI,CAACc,SAAL,GAAiBd,IAAjB;AACAe,qBAAO,CAACC,GAAR,CAAY,KAAI,CAACF,SAAjB;;AACA,mBAAI,CAACZ,YAAL,CAAkBe,QAAlB,CAA2B,KAAI,CAACjB,IAAL,CAAUW,MAAV,CAAiBC,EAA5C,EAAgDC,SAAhD,CAA0D,UAACK,KAAD,EAAS;AACjE,qBAAI,CAACb,UAAL,GAAkBa,KAAlB;AACA,qBAAI,CAACX,WAAL,GAAmB,IAAI,0EAAJ,CAA2C,KAAI,CAACF,UAAhD,CAAnB;AACA,qBAAI,CAACE,WAAL,CAAiBY,SAAjB,GAA6B,KAAI,CAACA,SAAlC;AACF,qBAAI,CAACZ,WAAL,CAAiBa,IAAjB,GAAwB,KAAI,CAACA,IAA7B;AACA,qBAAI,CAAChB,gBAAL,GAAwB,KAAxB;AACC,eAND;AAOD,aAVD;AAWD;AA/BwC;AAAA;AAAA,iCAiCrC;AACF,iBAAKiB,QAAL,GAAgB,KAAKpB,EAAL,CAAQqB,KAAR,CAAc;AAC5BV,gBAAE,EAAE,IADwB;AAE5BW,0BAAY,EAAE,CAAC,IAAD,EAAO,0DAAWC,QAAlB,CAFc;AAG5BC,8BAAgB,EAAE,KAAKzB,IAAL,CAAUW;AAHA,aAAd,CAAhB;AAKD;AAvCwC;AAAA;AAAA,qCAyCjC;AAAA;;AACNI,mBAAO,CAACC,GAAR,CAAY,KAAKK,QAAL,CAAcK,KAA1B;;AACD,gBAAG,KAAKL,QAAL,CAAcM,KAAjB,EAAuB;AACtB,mBAAKvB,gBAAL,GAAwB,IAAxB;AACA,mBAAKF,YAAL,CAAkB0B,OAAlB,CAA0B,KAAKP,QAAL,CAAcK,KAAxC,EAA+Cb,SAA/C,CAAyD,UAACb,IAAD,EAAQ,CAEhE,CAFD,EAEE,UAAC6B,KAAD,EAA2B;AAC3B,oBAAGA,KAAK,CAACC,MAAN,GAAa,GAAhB,EACA;AACE,wBAAI,CAAChC,QAAL,CAAciC,YAAd,CAA2B,kCAA3B,EAA+D,SAA/D,EAA0E,IAA1E;;AACA,wBAAI,CAACvB,UAAL;;AACA,wBAAI,CAACa,QAAL,CAAcW,GAAd,CAAkB,cAAlB,EAAkCC,QAAlC,CAA2C,IAA3C;AACD,iBALD,MAMI;AACF,wBAAI,CAAC7B,gBAAL,GAAwB,KAAxB;;AACA,wBAAI,CAACN,QAAL,CAAciC,YAAd,CAA2B,yCAA3B,EAAsE,OAAtE,EAA+E,IAA/E;AACD;AACF,eAbD;AAcA,aAhBD,MAgBK;AACF,mBAAKjC,QAAL,CAAciC,YAAd,CAA2B,+BAA3B,EAA4D,OAA5D,EAAqE,IAArE;AACF;AACD;AA9DwC;AAAA;AAAA,wCAgE3BG,KAhE2B,EAgEtB;AAAA;;AACjB,iBAAK/B,OAAL,CAAaA,OAAb,CAAqB;AACnBgC,mBAAK,EAAC,cADa;AAEnBC,qBAAO;AAFY,aAArB,EAGGvB,SAHH,CAGa,UAACwB,MAAD,EAAW;AAEtB,kBAAGA,MAAH,EAAW;AACT,sBAAI,CAACjC,gBAAL,GAAsB,IAAtB;;AACA,sBAAI,CAACF,YAAL,CAAkBoC,UAAlB,CAA6BJ,KAA7B,EAAoCrB,SAApC,CAA8C,YAAI,CAEjD,CAFD,EAGA,UAACgB,KAAD,EAA8B;AACxB,wBAAI,CAACzB,gBAAL,GAAsB,KAAtB;;AACA,sBAAGyB,KAAK,CAACC,MAAN,GAAa,GAAhB,EACA;AACE,0BAAI,CAAChC,QAAL,CAAciC,YAAd,CAA2B,8BAA3B,EAA2D,IAA3D,EAAgE,IAAhE;;AACA,0BAAI,CAACQ,QAAL;AACD,mBAJD,MAKI;AACF,0BAAI,CAACzC,QAAL,CAAciC,YAAd,CAA2B,wBAA3B,EAAqD,IAArD,EAA0D,IAA1D;AACD;AAEJ,iBAdH;AAeD;AAEF,aAxBD;AAyBD;AA1FwC;;AAAA;AAAA,S;;;;gBAhBvB;;gBACX;;gBADA;;;;kBA0BsB,oD;AAAM,mBAAC,wEAAD;;;gBA3B5B;;gBAUA;;gBADA;;;;;;gBAaN,uD;AAAS,iBAAC,wEAAD;;;gBACT,uD;AAAS,iBAAC,8DAAD;;;AANCnC,oCAA8B,eAL1C,gEAAU;AACT4C,gBAAQ,EAAE,6BADD;AAETC,gBAAQ,EAAR,0FAFS;;AAAA,OAAV,CAK0C,E,iCASX,qE,EAA+D,gF,EAC5E,kE,EAAW,M,EAAsD,0D,EAC1D,mI,EAAsD,sG,EAXrC,GAA9B7C,8BAA8B,CAA9B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLN,UAAM8C,MAAM,GAAG,CACpB;AAAEC,YAAI,EAAE,KAAR;AACCC,iBAAS,EAAE,yGADZ;AAECC,gBAAQ,EAAC,CACR;AAAEF,cAAI,EAAE,QAAR;AAAkBG,sBAAY,EAAE;AAAA,mBAAM;AAAA;AAAA;AAAA;AAAA,qBAAiCC,IAAjC,CAAsC,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACC,YAAN;AAAA,aAAvC,CAAN;AAAA,WAAhC;AAAkGjD,cAAI,EAAE;AAAEkD,sBAAU,EAAE;AAAd;AAAxG,SADQ,EAER;AAAEP,cAAI,EAAE,QAAR;AAAkBG,sBAAY,EAAE;AAAA,mBAAM;AAAA;AAAA;AAAA;AAAA,qBAAiCC,IAAjC,CAAsC,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACG,YAAN;AAAA,aAAvC,CAAN;AAAA,WAAhC;AAAkGnD,cAAI,EAAE;AAAEkD,sBAAU,EAAE;AAAd;AAAxG,SAFQ,EAGR;AAAEP,cAAI,EAAE,OAAR;AAAiBG,sBAAY,EAAE;AAAA,mBAAM;AAAA;AAAA;AAAA;AAAA,qBAA+BC,IAA/B,CAAoC,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACI,WAAN;AAAA,aAArC,CAAN;AAAA,WAA/B;AAA8FpD,cAAI,EAAE;AAAEkD,sBAAU,EAAE;AAAd;AAApG,SAHQ,EAIR;AAAEP,cAAI,EAAE,SAAR;AAAmBG,sBAAY,EAAE;AAAA,mBAAM;AAAA;AAAA;AAAA;AAAA,qBAAmCC,IAAnC,CAAwC,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACK,aAAN;AAAA,aAAzC,CAAN;AAAA,WAAjC;AAAsGrD,cAAI,EAAE;AAAEkD,sBAAU,EAAE;AAAd;AAA5G,SAJQ,EAKR;AAAEP,cAAI,EAAE,SAAR;AAAmBG,sBAAY,EAAE;AAAA,mBAAM;AAAA;AAAA;AAAA;AAAA,qBAA6BC,IAA7B,CAAkC,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACM,UAAN;AAAA,aAAnC,CAAN;AAAA,WAAjC;AAA6FtD,cAAI,EAAE;AAAEkD,sBAAU,EAAE;AAAd;AAAnG,SALQ;AAFV,OADoB,EAWpB;AAACP,YAAI,EAAC,EAAN;AAAUC,iBAAS,EAAE,uFAArB;AAA0C5C,YAAI,EAAE;AAAEkD,oBAAU,EAAE;AAAd;AAAhD,OAXoB,CAAf;;UA+BMK,+BAA+B;AAAA;AAAA,O;;AAA/BA,qCAA+B,eAhB3C,+DAAS;AACRC,oBAAY,EAAE,CAAC,yGAAD,EAAqC,uFAArC,EAA0D,0HAA1D,CADN;AAERC,eAAO,EAAE,CACP,4DADO,EAEP,6DAAaC,QAAb,CAAsBhB,MAAtB,CAFO,EAGP,0DAHO,EAIP,kEAJO,EAKP,yEALO,EAMP,mEANO,EAOP,kEAPO,EAQP,mEARO,CAFD;AAYRiB,iBAAS,EAAC,CACR,kIADQ;AAZF,OAAT,CAgB2C,GAA/BJ,+BAA+B,CAA/B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCnCAK,gBAAgB;AAEzB,kCAAmBC,IAAnB,EAAoC;AAAA;;AAAjB,eAAAA,IAAA,GAAAA,IAAA;AAAoB;;AAFd;AAAA;AAAA,qCAIdjD,EAJc,EAIZ;AACT,mBAAO,KAAKiD,IAAL,CAAU7B,GAAV,CAAuB,yEAAY8B,QAAZ,CAAqBC,oBAArB,CAA0CC,WAA1C,GAAsD,SAAtD,GAAgEpD,EAAvF,CAAP;AACH;AANwB;AAAA;AAAA,yCAOb;AACR,mBAAO,KAAKiD,IAAL,CAAU7B,GAAV,CAAmC,yEAAY8B,QAAZ,CAAqBC,oBAArB,CAA0CC,WAA1C,GAAsD,SAAzF,CAAP;AACH;AATwB;AAAA;AAAA,oCAUfpD,EAVe,EAUb;AACR,mBAAO,KAAKiD,IAAL,CAAU7B,GAAV,CAAiC,yEAAY8B,QAAZ,CAAqBC,oBAArB,CAA0CC,WAA1C,GAAsD,SAAtD,GAAgEpD,EAAjG,CAAP;AACH;AAZwB;AAAA;AAAA,uCAcZA,EAdY,EAcRqD,MAdQ,EAcF;AACnB,mBAAO,KAAKJ,IAAL,CAAUK,GAAV,CAAc,yEAAYJ,QAAZ,CAAqBC,oBAArB,CAA0CC,WAA1C,GAAsD,SAAtD,GAAgEpD,EAA9E,EAAkFqD,MAAlF,CAAP;AACH;AAhBwB;;AAAA;AAAA,S;;;;gBAPpB;;;;AAOIL,sBAAgB,eAD5B,kEAC4B,E,iCAED,+D,EAFC,GAAhBA,gBAAgB,CAAhB;;;;;;;;;;;;;;;;ACTb;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCeFO,mBAAmB;AAS9B,qCAAmBC,WAAnB,EAAmDC,aAAnD,EACmBC,aADnB,EACkD;AAAA;;AAD/B,eAAAF,WAAA,GAAAA,WAAA;AAAgC,eAAAC,aAAA,GAAAA,aAAA;AAChC,eAAAC,aAAA,GAAAA,aAAA;AAPnB,eAAAC,eAAA,GAAgB,CAAC,QAAD,EAAW,eAAX,EAA4B,OAA5B,EAAqC,eAArC,CAAhB;AAEA,eAAAnE,gBAAA,GAAiB,IAAjB;AACA,eAAAoE,UAAA,GAAa,CAAb;AACA,eAAAC,SAAA,GAAY,CAAZ;AACA,eAAAC,OAAA,GAAQ,yEAAYZ,QAAZ,CAAqBa,UAArB,GAAgC,WAAxC;AAGI,eAAKC,QAAL,GAAgB,KAAKR,WAAL,CAAiBQ,QAAjC;AACA,eAAKJ,UAAL,GAAkBH,aAAa,CAACQ,eAAd,EAAlB;AACA,eAAKJ,SAAL,GAAiBK,QAAQ,CAACT,aAAa,CAACU,cAAd,EAAD,CAAzB;AACH;;AAd6B;AAAA;AAAA,qCAgBpB;AACN,iBAAKC,UAAL;AACD;AAlB2B;AAAA;AAAA,uCAoBlB;AAAA;;AACR,iBAAK5E,gBAAL,GAAsB,IAAtB;AACA,iBAAKkE,aAAL,CAAmBW,YAAnB,GAAkCpE,SAAlC,CAA4C,UAACb,IAAD,EAAS;AACnD,oBAAI,CAACW,MAAL,GAAcX,IAAd,CADmD,CAEnD;;AACA,oBAAI,CAACI,gBAAL,GAAsB,KAAtB;AACD,aAJD;AAKD;AA3B2B;AAAA;AAAA,wCA6BL8E,KA7BK,EA6BA;AACxB,iBAAKC,IAAL,GAAYD,KAAZ,CADwB,CAExB;;AACA,gBAAG,KAAKN,QAAL,CAAcQ,WAAjB,EAA6B;AACzBC,sBAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCC,SAAxC,GAAoD,CAApD;AACH,aAFD,MAGI;AACAF,sBAAQ,CAACG,sBAAT,CAAgC,oBAAhC,EAAsD,CAAtD,EAAyDD,SAAzD,GAAqE,CAArE;AACH;AACJ;AAtC2B;AAAA;AAAA,0CAwCZE,GAxCY,EAwCeC,OAxCf,EAwCwB;AAClD,mBAAOD,GAAG,CAACE,MAAJ,CAAW,UAAUC,EAAV,EAAc;AAC9B,qBAAQA,EAAE,CAACC,MAAH,GAAU,GAAGC,OAAH,CAAWJ,OAAO,CAACK,WAAR,EAAX,CAAV,KAAgD,CAAC,CAAzD;AACD,aAFM,CAAP;AAGD;AA5C2B;AAAA;AAAA,iDA8CLN,GA9CK,EA8CsBC,OA9CtB,EA8C+B;AACzD,mBAAOD,GAAG,CAACE,MAAJ,CAAW,UAAUC,EAAV,EAAc;AAC9B,qBAAQA,EAAE,CAACI,UAAH,CAAcC,aAAd,CAA4BF,WAA5B,GAA0CD,OAA1C,CAAkDJ,OAAO,CAACK,WAAR,EAAlD,MAA6E,CAAC,CAAtF;AACD,aAFM,CAAP;AAGD;AAlD2B;AAAA;AAAA,yCAoDbN,GApDa,EAoDcC,OApDd,EAoDuB;AACjD,mBAAOD,GAAG,CAACE,MAAJ,CAAW,UAAUC,EAAV,EAAc;AAC9B,qBAAQA,EAAE,CAACI,UAAH,CAAcE,MAAd,CAAqBC,KAArB,CAA2BJ,WAA3B,GAAyCD,OAAzC,CAAiDJ,OAAO,CAACK,WAAR,EAAjD,MAA4E,CAAC,CAArF;AACD,aAFM,CAAP;AAGD;AAxD2B;;AAAA;AAAA,S;;;;gBAVvB;;gBACA;;gBANA;;;;AAeI5B,yBAAmB,eAP/B,gEAAU;AACT3B,gBAAQ,EAAE,iBADD;AAETC,gBAAQ,EAAR,8EAFS;AAITkB,iBAAS,EAAE,CAAC,qEAAD,CAJF;AAKTyC,qBAAa,EAAE,gEAAkBC,IALxB;;AAAA,OAAV,CAO+B,E,iCASC,gE,EAAmC,0G,EAChC,qE,EAVJ,GAAnBlC,mBAAmB,CAAnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCKAmC,kCAAkC;AAO7C,oDAAoBC,KAApB,EAAiDxG,MAAjD,EACUyG,MADV,EACkCnC,aADlC,EAEWoC,cAFX,EAE6C;AAAA;;AAFzB,eAAAF,KAAA,GAAAA,KAAA;AAA6B,eAAAxG,MAAA,GAAAA,MAAA;AACvC,eAAAyG,MAAA,GAAAA,MAAA;AAAwB,eAAAnC,aAAA,GAAAA,aAAA;AACvB,eAAAoC,cAAA,GAAAA,cAAA;AALX,eAAAhC,SAAA,GAAY,CAAZ;AACA,eAAArE,gBAAA,GAAmB,IAAnB;AAKE,eAAKQ,EAAL,GAAU2F,KAAK,CAACG,QAAN,CAAeC,MAAf,CAAsB/F,EAAhC;AACA,eAAK6D,SAAL,GAAiBK,QAAQ,CAACT,aAAa,CAACU,cAAd,EAAD,CAAzB;AAED;;AAb4C;AAAA;AAAA,qCAerC;AAAA;;AACN,iBAAK0B,cAAL,CAAoBG,SAApB,CAA8B,KAAKhG,EAAnC,EAAuCC,SAAvC,CAAiD,UAACb,IAAD,EAA4B;AAC3E,oBAAI,CAACW,MAAL,GAAcX,IAAd;AACA,kDAAkC,CAACyB,gBAAnC,GAAsDzB,IAAtD;AAEA,oBAAI,CAACI,gBAAL,GAAwB,KAAxB;AACD,aALD,EAKE,UAACyB,KAAD,EAA2B;AAC3B,oBAAI,CAAC2E,MAAL,CAAYK,QAAZ,CAAqB,CAAC,yEAAYC,eAAZ,CAA4BC,kBAA7B,CAArB;AACD,aAPD;AAQD;AAxB4C;AAAA;AAAA,qCA0BlCpG,MA1BkC,EA0BT;AAClC,gBAAMd,SAAS,GAAG,KAAKE,MAAL,CAAYiH,IAAZ,CAAiB,yHAAjB,EAAiD;AACjEC,mBAAK,EAAE,OAD0D;AAEjEC,oBAAM,EAAC,OAF0D;AAGjElH,kBAAI,EAAE;AAACW,sBAAM,EAAEA;AAAT,eAH2D;AAIjEwG,0BAAY,EAAE;AAJmD,aAAjD,CAAlB;AAOAtH,qBAAS,CAACuH,WAAV,GAAwBvG,SAAxB,CAAkC,UAAAwG,MAAM,EAAI;AAC1C,kBAAGA,MAAM,IAAG,IAAZ,EACA,CAEC;AACF,aALD;AAMD;AAxC4C;;AAAA;AAAA,S;;;;gBAhBtC;;gBAKA;;gBALgB;;gBAMhB;;gBAHA;;;;AAaIf,wCAAkC,sDAP9C,gEAAU;AACT9D,gBAAQ,EAAE,iCADD;AAETC,gBAAQ,EAAR,8FAFS;AAITkB,iBAAS,EAAE,CAAC,iFAAD,CAJF;AAKTyC,qBAAa,EAAE,gEAAkBC,IALxB;;AAAA,OAAV,CAO8C,E,iCAOlB,8D,EAA8B,kE,EACvC,sD,EAA+B,0G,EACtB,iF,EATkB,GAAlCC,kCAAkC,CAAlC;;;;;;;;;;;;;;;;ACpBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA","file":"features-demarrage-projet-renovation-demarrage-projet-renovation-module-es5.js","sourcesContent":["export default \".element {\\n  color: white;\\n}\\n\\n.image {\\n  height: 200px;\\n}\\n\\n.example-tooltip-red {\\n  background: #080883;\\n  font-weight: bold;\\n}\\n\\n.infor {\\n  font-size: 13px;\\n  padding: 5px;\\n}\\n\\n.infor mat-icon {\\n  margin-right: 10px;\\n}\\n\\n.buton-action {\\n  float: right;\\n}\\n\\n.recherche {\\n  width: 70%;\\n}\\n\\n.example-tooltip-red {\\n  background: #080883;\\n  font-weight: bold;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxccHJvamV0LXVzZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxZQUFBO0FBQ0o7O0FBRUE7RUFDSSxhQUFBO0FBQ0o7O0FBRUE7RUFDSSxtQkFBQTtFQUNBLGlCQUFBO0FBQ0o7O0FBQ0E7RUFDSSxlQUFBO0VBQ0EsWUFBQTtBQUVKOztBQURJO0VBQ0ksa0JBQUE7QUFHUjs7QUFDQTtFQUNJLFlBQUE7QUFFSjs7QUFDQTtFQUNJLFVBQUE7QUFFSjs7QUFDRTtFQUNFLG1CQUFBO0VBQ0EsaUJBQUE7QUFFSiIsImZpbGUiOiJwcm9qZXQtdXNlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5lbGVtZW50e1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG59XHJcblxyXG4uaW1hZ2V7XHJcbiAgICBoZWlnaHQ6IDIwMHB4O1xyXG59XHJcblxyXG4uZXhhbXBsZS10b29sdGlwLXJlZHtcclxuICAgIGJhY2tncm91bmQ6IHJnYig4LCA4LCAxMzEpO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuLmluZm9ye1xyXG4gICAgZm9udC1zaXplOiAxM3B4O1xyXG4gICAgcGFkZGluZzogNXB4O1xyXG4gICAgbWF0LWljb257XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG4gICAgfVxyXG59XHJcblxyXG4uYnV0b24tYWN0aW9ue1xyXG4gICAgZmxvYXQ6IHJpZ2h0O1xyXG59XHJcblxyXG4ucmVjaGVyY2hle1xyXG4gICAgd2lkdGg6IDcwJTtcclxuICB9XHJcblxyXG4gIC5leGFtcGxlLXRvb2x0aXAtcmVkIHtcclxuICAgIGJhY2tncm91bmQ6ICMwODA4ODM7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICB9Il19 */\";","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { SnackBarService } from 'src/app/shared/services/SnackBar';\r\nimport { Utilisateur } from 'src/app/shared/models/utilisateeur';\r\nimport { UserAffecterProjet } from 'src/app/shared/models/demarrage-projet/projet-renovation.model';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { AppConfirmService } from 'src/app/shared/utils/app-confirm/app-confirm.service';\r\nimport { UserAffecterProjetRenovationServices } from '../../user-affecter-projet-renovation/user-affecter-projet.service';\r\n\r\n@Component({\r\n  selector: 'app-user-affecter-demarrage',\r\n  templateUrl: './user-affecter-demarrage.component.html',\r\n  styleUrls: ['./user-affecter-demarrage.component.scss']\r\n})\r\nexport class UserAffecterDemarrageComponent implements OnInit {\r\n  isLoadingResults = false;\r\n  listeUser:Utilisateur[];\r\n  userAffect: UserAffecterProjet[]=[];\r\n  userForm: FormGroup;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  displayedColumns =['id','libelle', 'roles','action'];\r\n  dataSources = new MatTableDataSource<UserAffecterProjet>(this.userAffect);\r\n  constructor(public dialogRef: MatDialogRef<UserAffecterDemarrageComponent>,private snackBar: SnackBarService,\r\n    public dialog: MatDialog, @Inject(MAT_DIALOG_DATA) public data: any,private fb: FormBuilder, \r\n    private userAffecter: UserAffecterProjetRenovationServices,private confirm: AppConfirmService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.initDonner();\r\n    this.init();\r\n  }\r\n\r\n  initDonner(){\r\n    this.isLoadingResults = true;\r\n    this.userAffecter.listUserNonAffecter(\"\"+this.data.projet.id).subscribe((data)=>{\r\n      this.listeUser = data;\r\n      console.log(this.listeUser);\r\n      this.userAffecter.getUsers(this.data.projet.id).subscribe((userA)=>{\r\n        this.userAffect = userA;\r\n        this.dataSources = new MatTableDataSource<UserAffecterProjet>(this.userAffect);\r\n        this.dataSources.paginator = this.paginator;\r\n      this.dataSources.sort = this.sort;\r\n      this.isLoadingResults = false;\r\n      })\r\n    })\r\n  }\r\n\r\n  init(){\r\n    this.userForm = this.fb.group({\r\n      id: null,\r\n      utilisateurs: [null, Validators.required],\r\n      projetRenovation: this.data.projet,\r\n    })\r\n  }\r\n\r\n  onSubmit(){\r\n    console.log(this.userForm.value)\r\n   if(this.userForm.valid){\r\n    this.isLoadingResults = true;\r\n    this.userAffecter.addUser(this.userForm.value).subscribe((data)=>{\r\n\r\n    },(error:HttpErrorResponse)=>{\r\n      if(error.status<300)\r\n      {\r\n        this.snackBar.openSnackBar(\"utilisateur ajouter avec success\", \"success\", 3000);\r\n        this.initDonner();\r\n        this.userForm.get('utilisateurs').setValue(null);\r\n      }\r\n      else{\r\n        this.isLoadingResults = false;\r\n        this.snackBar.openSnackBar(\"utilisateur est deja affecter au projet\", \"error\", 3000);\r\n      }\r\n    })\r\n   }else{\r\n      this.snackBar.openSnackBar(\"Remplirer tous les champs svp\", \"error\", 3000);\r\n   }\r\n  }\r\n\r\n  supprimerUser(index){\r\n    this.confirm.confirm({\r\n      title:\"Confirmation\",\r\n      message:`Voulez-vous supprimer cette pièce complémentaire ? `\r\n    }).subscribe(($choix)=> {\r\n\r\n      if($choix) {\r\n        this.isLoadingResults=true;\r\n        this.userAffecter.deleteUser(index).subscribe(()=>{\r\n          \r\n        },\r\n        (error: HttpErrorResponse) => {\r\n              this.isLoadingResults=false;\r\n              if(error.status<300)\r\n              {\r\n                this.snackBar.openSnackBar(\"Element supprimé avec succès\", \"OK\",3000);\r\n                this.ngOnInit();\r\n              }\r\n              else{\r\n                this.snackBar.openSnackBar(\"Element non supprimer \", \"OK\",3000);\r\n              }\r\n              \r\n          });\r\n      }\r\n\r\n    });\r\n  }\r\n}\r\n","import { UserAffecterProjetRenovationServices } from './../user-affecter-projet-renovation/user-affecter-projet.service';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DemarrageProjetRenovationComponent } from './demarrage-projet-renovation.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { DropzoneModule } from 'ngx-dropzone-wrapper';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { ProjetUserComponent } from './projet-user/projet-user.component';\r\nimport { UserAffecterDemarrageComponent } from './user-affecter-demarrage/user-affecter-demarrage.component';\r\n\r\nexport const routes = [\r\n  { path: ':id',\r\n   component: DemarrageProjetRenovationComponent,\r\n   children:[\r\n    { path: 'taches', loadChildren: () => import('./taches/taches.module').then(m => m.TachesModule), data: { breadcrumb: 'taches' } },\r\n    { path: 'agenda', loadChildren: () => import('./agenda/agenda.module').then(m => m.AgendaModule), data: { breadcrumb: 'Agenda' } },\r\n    { path: 'bilan', loadChildren: () => import('./bilan/bilan.module').then(m => m.BilanModule), data: { breadcrumb: 'Bilan' } },\r\n    { path: 'fichier', loadChildren: () => import('./fichier/fichier.module').then(m => m.FichierModule), data: { breadcrumb: 'fichier' } },\r\n    { path: 'message', loadChildren: () => import('./chat/chat.module').then(m => m.ChatModule), data: { breadcrumb: 'chat' } },\r\n   ]\r\n  },\r\n  {path:'', component: ProjetUserComponent, data: { breadcrumb: 'Projet' } },\r\n  \r\n];\r\n\r\n@NgModule({\r\n  declarations: [DemarrageProjetRenovationComponent, ProjetUserComponent, UserAffecterDemarrageComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    DropzoneModule,\r\n    NgxPaginationModule,\r\n    NgSelectModule\r\n  ],\r\n  providers:[\r\n    UserAffecterProjetRenovationServices\r\n  ]\r\n})\r\nexport class DemarrageProjetRenovationModule { }\r\n","import { ProjetRenauvation } from './../../../shared/models/demarrage-projet/projet-renovation.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Renovation } from 'src/app/shared/models/Renovation';\r\nimport { Tache } from 'src/app/shared/models/demarrage-projet/projet-renovation.model';\r\n\r\n@Injectable()\r\nexport class ListTacheService {\r\n    \r\n    constructor(public http:HttpClient) { }\r\n    \r\n    gettachess(id): Observable<Tache[]> {\r\n        return this.http.get<Tache[]>(environment.BACK_END.DEMARRAGERENAUVATION.TACHES_USER+\"taches/\"+id);\r\n    }\r\n    getAllProjet(): Observable<ProjetRenauvation[]>{\t    \r\n        return this.http.get<ProjetRenauvation[]>(environment.BACK_END.DEMARRAGERENAUVATION.TACHES_USER+\"projet/\");\r\n    }\r\n    getProjet(id): Observable<ProjetRenauvation>{\t    \r\n        return this.http.get<ProjetRenauvation>(environment.BACK_END.DEMARRAGERENAUVATION.TACHES_USER+\"projet/\"+id);\r\n    }\r\n\r\n    updatetaches(id, taches){\t    \r\n        return this.http.put(environment.BACK_END.DEMARRAGERENAUVATION.TACHES_USER+\"taches/\"+id, taches);\r\n    }\r\n} ","export default \".example-tooltip-red {\\n  background: #080883;\\n  font-weight: bold;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFxkZW1hcnJhZ2UtcHJvamV0LXJlbm92YXRpb24uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxtQkFBQTtFQUNBLGlCQUFBO0FBQ0oiLCJmaWxlIjoiZGVtYXJyYWdlLXByb2pldC1yZW5vdmF0aW9uLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtdG9vbHRpcC1yZWQge1xyXG4gICAgYmFja2dyb3VuZDogIzA4MDg4MztcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIH0iXX0= */\";","export default \"\\r\\n<div *ngIf=\\\"isLoadingResults\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"user-spinner\\\">   \\r\\n    <mat-spinner color=\\\"primary\\\"></mat-spinner>\\r\\n  </div>\\r\\n\\r\\n\\r\\n<div *ngIf=\\\"!isLoadingResults\\\"  class=\\\"header\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" mat-dialog-title color=\\\"primary\\\">\\r\\n    <h3>Gestion des utilisateur du Projet {{data.projet.renovation.nomRenovation}}</h3>\\r\\n</div>\\r\\n<div mat-dialog-content class=\\\"body-content contenu-body\\\" *ngIf=\\\"!isLoadingResults\\\" >\\r\\n    <form   [formGroup]=\\\"userForm\\\">\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start\\\" fxLayout.lt-md=\\\"row wrap\\\">\\r\\n            <mat-form-field  appearance=\\\"outline\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"100\\\" [fxFlex.xl]=\\\"100\\\">\\r\\n                <mat-label>Libelle de la renovation</mat-label>\\r\\n                <input matInput #input  placeholder=\\\"Ex. Nougat\\\" [value]=\\\"data.projet.renovation.nomRenovation\\\" readonly>\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start\\\" fxLayout.lt-md=\\\"row wrap\\\">\\r\\n            <ng-select  [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"100\\\" [fxFlex.xl]=\\\"100\\\" [items]=\\\"listeUser\\\"\\r\\n                   bindLabel=\\\"email\\\"\\r\\n                   placeholder=\\\" Selectionner l'tilisateur conserner\\\"\\r\\n                   formControlName=\\\"utilisateurs\\\">\\r\\n                   <ng-template ng-loadingspinner-tmp>\\r\\n                    <div class=\\\"lds-ellipsis\\\">\\r\\n                        <div></div>\\r\\n                        <div></div>\\r\\n                        <div></div>\\r\\n                        <div></div>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </ng-select>\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\\r\\n\\r\\n<div  *ngIf=\\\"!isLoadingResults\\\"  mat-dialog-actions align=\\\"end\\\">\\r\\n    <div fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"row wrap\\\" fxLayoutGap.gt-sm=\\\"20px\\\">\\r\\n        <button mat-raised-button color=\\\"warn\\\" [mat-dialog-close]=\\\"userForm.value\\\" >Fermer</button>\\r\\n        <button mat-raised-button [disabled]=\\\"userForm.invalid\\\" (click)=\\\"onSubmit()\\\" color=\\\"primary\\\" >Enregistrer</button>\\r\\n    </div>\\r\\n</div>\\r\\n<div fxLayout=\\\"row wrap\\\" class=\\\"table\\\">\\r\\n    <div fxFlex=\\\"100\\\" class=\\\"flex-p\\\"> \\r\\n        <div class=\\\"example-container\\\">\\r\\n            <table mat-table [dataSource]=\\\"dataSources\\\" matSort>\\r\\n                <ng-container matColumnDef=\\\"id\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> id </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n                  </ng-container>\\r\\n              <!-- Name Column -->\\r\\n              <ng-container matColumnDef=\\\"libelle\\\" sticky>\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.utilisateurs.email}} </td>\\r\\n              </ng-container>\\r\\n          \\r\\n              <!-- Position Column -->\\r\\n              \\r\\n          \\r\\n              <!-- Weight Column -->\\r\\n              <ng-container matColumnDef=\\\"roles\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Nom</th>\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\">{{element.utilisateurs.nom}} {{element.utilisateurs.prenom}}</td>\\r\\n              </ng-container>\\r\\n              \\r\\n              <!-- Star Column -->\\r\\n              <ng-container matColumnDef=\\\"action\\\" stickyEnd>\\r\\n                <th mat-header-cell *matHeaderCellDef>Action</th>\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                    <button mat-button *ngIf=\\\"element.utilisateurs.profile.libelle != 'CLIENT'\\\"   color=\\\"warn\\\" (click)=\\\"supprimerUser(element.id)\\\">\\r\\n                        <mat-icon>delete</mat-icon>\\r\\n                        <span>Supprimer</span>\\r\\n                      </button>\\r\\n                </td>\\r\\n              </ng-container>\\r\\n          \\r\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n            </table>\\r\\n            <mat-paginator [pageSizeOptions]=\\\"[4]\\\"></mat-paginator>\\r\\n          </div>\\r\\n    </div>\";","export default \"\\r\\n<!--<div fxLayout=\\\"row wrap\\\">\\r\\n        <div class=\\\"recherche\\\">\\r\\n            <mat-form-field class=\\\"recherche\\\">\\r\\n                <input matInput  placeholder=\\\"Rechercher generale...\\\" >\\r\\n                <mat-icon matSuffix >clear</mat-icon>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>indice de recherche</mat-label>\\r\\n                <mat-select >\\r\\n                    <mat-option [value]=\\\"'budget'\\\"></mat-option>\\r\\n                    <mat-option *ngFor=\\\"let e of elementRecheche\\\" [value]=\\\"e\\\">{{e}}</mat-option>\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n  </div>-->\\r\\n\\r\\n    <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row wrap\\\" >\\r\\n        <div fxFlex=\\\"32\\\" class=\\\"flex-p\\\" *ngFor=\\\"let p of projet  | paginate: { itemsPerPage: 6, currentPage: page }\\\"> \\r\\n            <mat-card class=\\\"custom-card\\\">\\r\\n                <mat-card-header class=\\\"bg-primary p-1\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                    <mat-card-title  class=\\\"m-0\\\"><h3><button mat-button routerLink=\\\"{{p.id}}/\\\">{{p.renovation.nomRenovation}}</button></h3></mat-card-title>\\r\\n                </mat-card-header>\\r\\n                <img class=\\\"image\\\" mat-card-image src=\\\"{{URLpage}}{{p.photo.split('/')[2]}}\\\" alt=\\\"image non charger\\\">\\r\\n                <mat-card-content class=\\\"p-\\\">\\r\\n                    <p fxLayout=\\\"row\\\" class=\\\"infor\\\">\\r\\n                        <mat-icon>face</mat-icon>  \\r\\n                        <span> <strong><i>Client : </i> {{p.renovation.client.email}}</strong></span>\\r\\n                    </p>\\r\\n                    <p fxLayout=\\\"row\\\" class=\\\"infor\\\">\\r\\n                        <mat-icon>local_atm</mat-icon>  \\r\\n                        <span> <strong><i>Budget : </i> {{p.budget}} euros</strong></span>\\r\\n                    </p>\\r\\n                    <p fxLayout=\\\"row\\\"  class=\\\"infor\\\">\\r\\n                        <mat-icon>timer</mat-icon>  \\r\\n                        <span> <strong><i>Durée :</i> {{p.dateDemarrage| date:'dd/MM/yyyy'}} - {{p.dateFinission| date:'dd/MM/yyyy'}}</strong></span>\\r\\n                    </p>\\r\\n                    \\r\\n                    <p fxLayout=\\\"row\\\" class=\\\"infor\\\">\\r\\n                        <mat-icon>location_on</mat-icon>  \\r\\n                        <span> <strong><i>Adresse : </i> {{p.renovation.adressChantier}}</strong></span>\\r\\n                    </p>\\r\\n                </mat-card-content>\\r\\n                <mat-divider></mat-divider>\\r\\n                <mat-card-actions fxLayoutAlign=\\\"end center\\\">\\r\\n                    <button routerLink=\\\"{{p.id}}/bilan\\\" mat-icon-button\\r\\n                    matTooltip=\\\"DIagramme d'evolution\\\"\\r\\n                    matTooltipClass=\\\"example-tooltip-red\\\"\\r\\n                    aria-label=\\\"Button that shows a red tooltip\\\">\\r\\n                        <mat-icon>poll</mat-icon>\\r\\n                    </button>\\r\\n                    <button mat-icon-button routerLink=\\\"{{p.id}}/agenda\\\"\\r\\n                    matTooltip=\\\"Agenda\\\"\\r\\n                    matTooltipClass=\\\"example-tooltip-red\\\"\\r\\n                    aria-label=\\\"Button that shows a red tooltip\\\">\\r\\n                        <mat-icon>event_note</mat-icon>\\r\\n                    </button>\\r\\n\\r\\n                    <button routerLink=\\\"{{p.id}}/taches\\\" mat-icon-button\\r\\n                    matTooltip=\\\"Taches\\\"\\r\\n                    matTooltipClass=\\\"example-tooltip-red\\\"\\r\\n                    aria-label=\\\"Button that shows a red tooltip\\\">\\r\\n                        <mat-icon>ballot</mat-icon>\\r\\n                    </button>\\r\\n                    \\r\\n                    <button mat-icon-button \\r\\n                    matTooltip=\\\"documents\\\"\\r\\n                    matTooltipClass=\\\"example-tooltip-red\\\"\\r\\n                    aria-label=\\\"Button that shows a red tooltip\\\">\\r\\n                        <mat-icon>insert_drive_file</mat-icon>\\r\\n                    </button>\\r\\n                </mat-card-actions>\\r\\n            </mat-card>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n<div fxLayout=\\\"row wrap\\\" *ngIf=\\\"projet\\\">\\r\\n    <div fxFlex=\\\"100\\\" class=\\\"flex-p\\\"> \\r\\n        <mat-card class=\\\"p-0 text-center\\\">           \\r\\n            <pagination-controls class=\\\"gradus-pagination\\\" autoHide=\\\"true\\\" maxSize=\\\"3\\\" (pageChange)=\\\"onPageChanged($event)\\\"></pagination-controls>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"isLoadingResults\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"user-spinner\\\">   \\r\\n    <mat-spinner color=\\\"primary\\\"></mat-spinner>\\r\\n  </div>\";","import { ListTacheService } from './user-projet.service';\r\nimport { ProjetRenauvation } from './../../../shared/models/demarrage-projet/projet-renovation.model';\r\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Settings } from 'src/app/app.settings.model';\r\nimport { environment } from 'src/environments/environment';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { ProjetStorageService } from 'src/app/shared/services/ProjetRenovation.localStorage';\r\n\r\n@Component({\r\n  selector: 'app-projet-user',\r\n  templateUrl: './projet-user.component.html',\r\n  styleUrls: ['./projet-user.component.scss'],\r\n  providers: [ListTacheService],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ProjetUserComponent implements OnInit {\r\n  projet :ProjetRenauvation[];\r\n  page: any;\r\n  elementRecheche=['budget', 'dateDemarrage', 'email', 'nomRenovation']\r\n  public settings: Settings;\r\n  isLoadingResults=true;\r\n  GererTache = 0;\r\n  GererUser = 0;\r\n  URLpage=environment.BACK_END.FILEUPLOAD+'download/';\r\n  constructor(public appSettings:AppSettings,private projetStorage: ProjetStorageService,\r\n              public projetService: ListTacheService){\r\n      this.settings = this.appSettings.settings; \r\n      this.GererTache = projetStorage.getGestionTache();\r\n      this.GererUser = parseInt(projetStorage.getGestionUser());\r\n  }\r\n  \r\n    ngOnInit(): void {\r\n      this.getElement();\r\n    }\r\n  \r\n    getElement(){\r\n      this.isLoadingResults=true;\r\n      this.projetService.getAllProjet().subscribe((data) =>{\r\n        this.projet = data;\r\n        //console.log(this.projet);\r\n        this.isLoadingResults=false;\r\n      })\r\n    }\r\n  \r\n      public onPageChanged(event){\r\n        this.page = event;\r\n        //this.getUsers();\r\n        if(this.settings.fixedHeader){      \r\n            document.getElementById('main-content').scrollTop = 0;\r\n        }\r\n        else{\r\n            document.getElementsByClassName('mat-drawer-content')[0].scrollTop = 0;\r\n        }\r\n    }\r\n  \r\n    rechercheBudget(arr : ProjetRenauvation[], requete) {\r\n      return arr.filter(function (el) {\r\n        return  el.budget+\"\".indexOf(requete.toLowerCase()) !== -1;\r\n      })\r\n    }\r\n  \r\n    rechercheNomRenovation(arr : ProjetRenauvation[], requete) {\r\n      return arr.filter(function (el) {\r\n        return  el.renovation.nomRenovation.toLowerCase().indexOf(requete.toLowerCase()) !== -1;\r\n      })\r\n    }\r\n  \r\n    rechercheEmail(arr : ProjetRenauvation[], requete) {\r\n      return arr.filter(function (el) {\r\n        return  el.renovation.client.email.toLowerCase().indexOf(requete.toLowerCase()) !== -1;\r\n      })\r\n    }\r\n  \r\n}\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { ProjetRenauvationService } from './../projet-renovation/projet-renovation.service';\r\nimport { ProjetRenauvation } from './../../shared/models/demarrage-projet/projet-renovation.model';\r\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { environment } from 'src/environments/environment';\r\nimport { TokenStorageService } from '../login/_helper/localStorage';\r\nimport { ListTacheService } from './projet-user/user-projet.service';\r\nimport { UtilisateurAffecterModalComponent } from '../projet-renovation/utilisateur-affecter-modal/utilisateur-affecter-modal.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ProjetStorageService } from 'src/app/shared/services/ProjetRenovation.localStorage';\r\nimport { UserAffecterDemarrageComponent } from './user-affecter-demarrage/user-affecter-demarrage.component';\r\n\r\n@Component({\r\n  selector: 'app-demarrage-projet-renovation',\r\n  templateUrl: './demarrage-projet-renovation.component.html',\r\n  styleUrls: ['./demarrage-projet-renovation.component.scss'],\r\n  providers :[ListTacheService],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class DemarrageProjetRenovationComponent implements OnInit {\r\n  id:number;\r\n  static projetRenovation: ProjetRenauvation;\r\n  Gerant: number;\r\n  GererUser = 0;\r\n  isLoadingResults=  true;\r\n  projet: ProjetRenauvation;\r\n  constructor(private route: ActivatedRoute,public dialog: MatDialog,\r\n    private router: Router, private projetStorage: ProjetStorageService,\r\n     private projetServices: ListTacheService) { \r\n    this.id = route.snapshot.params.id;\r\n    this.GererUser = parseInt(projetStorage.getGestionUser());\r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.projetServices.getProjet(this.id).subscribe((data : ProjetRenauvation)=>{\r\n      this.projet = data;\r\n      DemarrageProjetRenovationComponent.projetRenovation = data;\r\n      \r\n      this.isLoadingResults = false;\r\n    },(error:HttpErrorResponse)=>{\r\n      this.router.navigate([environment.FRONTEND_ROUTES.PROJET_RENAUVATION]);\r\n    })\r\n  }\r\n\r\n  openDialog(projet: ProjetRenauvation): void {\r\n    const dialogRef = this.dialog.open(UserAffecterDemarrageComponent, {\r\n      width: '600px',\r\n      height:'700px',\r\n      data: {projet: projet},\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result ==null)\r\n      {\r\n        \r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"<div *ngIf=\\\"isLoadingResults\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"user-spinner\\\">   \\r\\n    <mat-spinner color=\\\"primary\\\"></mat-spinner>\\r\\n  </div>\\r\\n\\r\\n<div fxLayout=\\\"row wrap\\\" *ngIf=\\\"!isLoadingResults\\\">\\r\\n    <div fxFlex=\\\"100\\\" class=\\\"flex-p\\\"> \\r\\n        <mat-card>\\r\\n            <div [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"70\\\" [fxFlex.xl]=\\\"70\\\">\\r\\n                <h2>Projet {{projet.renovation.nomRenovation | uppercase}}</h2>\\r\\n            </div>\\r\\n            \\r\\n            <div fxLayoutAlign=\\\"center end\\\" [fxFlex.xs]=\\\"100\\\" [fxFlex.sm]=\\\"100\\\" [fxFlex.md]=\\\"100\\\" [fxFlex.lg]=\\\"20\\\" [fxFlex.xl]=\\\"20\\\">\\r\\n                    <button *ngIf=\\\"GererUser==1\\\" \\r\\n                        matTooltip=\\\"Utilisateur affecter au Projet\\\"\\r\\n                        matTooltipClass=\\\"example-tooltip-red\\\"\\r\\n                        aria-label=\\\"Button that shows a red tooltip\\\"\\r\\n                     button mat-icon-button (click)=\\\"openDialog(projet)\\\">\\r\\n                        <mat-icon>groups</mat-icon>\\r\\n                    </button>\\r\\n                    <button mat-icon-button routerLink=\\\"bilan\\\"\\r\\n                        matTooltip=\\\"Diagramme de l'evolution du projet\\\"\\r\\n                        matTooltipClass=\\\"example-tooltip-red\\\"\\r\\n                        aria-label=\\\"Button that shows a red tooltip\\\"\\r\\n                    >\\r\\n                        <mat-icon>poll</mat-icon>\\r\\n                    </button>\\r\\n                    <button mat-icon-button routerLink=\\\"agenda\\\"\\r\\n                        matTooltip=\\\"Agenda d'evenement\\\"\\r\\n                        matTooltipClass=\\\"example-tooltip-red\\\"\\r\\n                        aria-label=\\\"Button that shows a red tooltip\\\"\\r\\n                    >\\r\\n                        <mat-icon>event_note</mat-icon>\\r\\n                    </button>\\r\\n                    <button mat-icon-button routerLink=\\\"taches\\\"\\r\\n                        matTooltip=\\\"Les taches\\\"\\r\\n                        matTooltipClass=\\\"example-tooltip-red\\\"\\r\\n                        aria-label=\\\"Button that shows a red tooltip\\\"\\r\\n                    >\\r\\n                        <mat-icon>ballot</mat-icon>\\r\\n                    </button>\\r\\n                    <button mat-icon-button routerLink=\\\"fichier\\\"\\r\\n                        matTooltip=\\\"documents\\\"\\r\\n                        matTooltipClass=\\\"example-tooltip-red\\\"\\r\\n                        aria-label=\\\"Button that shows a red tooltip\\\">\\r\\n                        <mat-icon>insert_drive_file</mat-icon>\\r\\n                    </button>\\r\\n\\r\\n                    <button mat-icon-button routerLink=\\\"message\\\"\\r\\n                        matTooltip=\\\"echange\\\"\\r\\n                        matTooltipClass=\\\"example-tooltip-red\\\"\\r\\n                        aria-label=\\\"Button that shows a red tooltip\\\">\\r\\n                        <mat-icon>question_answer</mat-icon>\\r\\n                    </button>\\r\\n            </div>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n</div>\\r\\n<router-outlet *ngIf=\\\"!isLoadingResults\\\"></router-outlet>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ1c2VyLWFmZmVjdGVyLWRlbWFycmFnZS5jb21wb25lbnQuc2NzcyJ9 */\";"]}